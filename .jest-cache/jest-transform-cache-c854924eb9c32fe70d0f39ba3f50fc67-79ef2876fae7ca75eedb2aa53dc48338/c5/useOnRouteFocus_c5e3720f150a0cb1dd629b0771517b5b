0ad9bc846c1f3f0dd53543e41658c2c7
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useOnRouteFocus = useOnRouteFocus;
var React = _interopRequireWildcard(require("react"));
var _NavigationBuilderContext = require("./NavigationBuilderContext.js");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function useOnRouteFocus(_ref) {
  var router = _ref.router,
    getState = _ref.getState,
    sourceRouteKey = _ref.key,
    setState = _ref.setState;
  var _React$useContext = React.useContext(_NavigationBuilderContext.NavigationBuilderContext),
    onRouteFocusParent = _React$useContext.onRouteFocus;
  return React.useCallback(function (key) {
    var state = getState();
    var result = router.getStateForRouteFocus(state, key);
    if (result !== state) {
      setState(result);
    }
    if (onRouteFocusParent !== undefined && sourceRouteKey !== undefined) {
      onRouteFocusParent(sourceRouteKey);
    }
  }, [getState, onRouteFocusParent, router, setState, sourceRouteKey]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9OYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInVzZU9uUm91dGVGb2N1cyIsIl9yZWYiLCJyb3V0ZXIiLCJnZXRTdGF0ZSIsInNvdXJjZVJvdXRlS2V5Iiwia2V5Iiwic2V0U3RhdGUiLCJfUmVhY3QkdXNlQ29udGV4dCIsInVzZUNvbnRleHQiLCJOYXZpZ2F0aW9uQnVpbGRlckNvbnRleHQiLCJvblJvdXRlRm9jdXNQYXJlbnQiLCJvblJvdXRlRm9jdXMiLCJ1c2VDYWxsYmFjayIsInN0YXRlIiwicmVzdWx0IiwiZ2V0U3RhdGVGb3JSb3V0ZUZvY3VzIiwidW5kZWZpbmVkIl0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL3VzZU9uUm91dGVGb2N1cy50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7OztBQUtBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFDLHlCQUFBLEdBQUFELE9BQUE7QUFBcUUsU0FBQUQsd0JBQUFHLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFMLHVCQUFBLFlBQUFBLHdCQUFBRyxDQUFBLEVBQUFDLENBQUEsU0FBQUEsQ0FBQSxJQUFBRCxDQUFBLElBQUFBLENBQUEsQ0FBQUssVUFBQSxTQUFBTCxDQUFBLE1BQUFNLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLEtBQUFDLFNBQUEsUUFBQUMsT0FBQSxFQUFBVixDQUFBLGlCQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFNBQUFRLENBQUEsTUFBQUYsQ0FBQSxHQUFBTCxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxRQUFBRyxDQUFBLENBQUFLLEdBQUEsQ0FBQVgsQ0FBQSxVQUFBTSxDQUFBLENBQUFNLEdBQUEsQ0FBQVosQ0FBQSxHQUFBTSxDQUFBLENBQUFPLEdBQUEsQ0FBQWIsQ0FBQSxFQUFBUSxDQUFBLGNBQUFNLEVBQUEsSUFBQWQsQ0FBQSxnQkFBQWMsRUFBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEsRUFBQWMsRUFBQSxPQUFBUCxDQUFBLElBQUFELENBQUEsR0FBQVcsTUFBQSxDQUFBQyxjQUFBLEtBQUFELE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQW5CLENBQUEsRUFBQWMsRUFBQSxPQUFBUCxDQUFBLENBQUFLLEdBQUEsSUFBQUwsQ0FBQSxDQUFBTSxHQUFBLElBQUFQLENBQUEsQ0FBQUUsQ0FBQSxFQUFBTSxFQUFBLEVBQUFQLENBQUEsSUFBQUMsQ0FBQSxDQUFBTSxFQUFBLElBQUFkLENBQUEsQ0FBQWMsRUFBQSxXQUFBTixDQUFBLEtBQUFSLENBQUEsRUFBQUMsQ0FBQTtBQWM5RCxTQUFTbUIsZUFBZUEsQ0FBQUMsSUFBQSxFQUtYO0VBQUEsSUFKbEJDLE1BQU0sR0FBQUQsSUFBQSxDQUFOQyxNQUFNO0lBQ05DLFFBQVEsR0FBQUYsSUFBQSxDQUFSRSxRQUFRO0lBQ0hDLGNBQWMsR0FBQUgsSUFBQSxDQUFuQkksR0FBRztJQUNIQyxRQUFBLEdBQUFMLElBQUEsQ0FBQUssUUFBQTtFQUVBLElBQUFDLGlCQUFBLEdBQTZDL0IsS0FBSyxDQUFDZ0MsVUFBVSxDQUMzREMsa0RBQ0YsQ0FBQztJQUZxQkMsa0JBQUEsR0FBQUgsaUJBQUEsQ0FBZEksWUFBWTtFQUlwQixPQUFPbkMsS0FBSyxDQUFDb0MsV0FBVyxDQUNyQixVQUFBUCxHQUFXLEVBQUs7SUFDZixJQUFNUSxLQUFLLEdBQUdWLFFBQVEsQ0FBQyxDQUFDO0lBQ3hCLElBQU1XLE1BQU0sR0FBR1osTUFBTSxDQUFDYSxxQkFBcUIsQ0FBQ0YsS0FBSyxFQUFFUixHQUFHLENBQUM7SUFFdkQsSUFBSVMsTUFBTSxLQUFLRCxLQUFLLEVBQUU7TUFDcEJQLFFBQVEsQ0FBQ1EsTUFBTSxDQUFDO0lBQ2xCO0lBRUEsSUFBSUosa0JBQWtCLEtBQUtNLFNBQVMsSUFBSVosY0FBYyxLQUFLWSxTQUFTLEVBQUU7TUFDcEVOLGtCQUFrQixDQUFDTixjQUFjLENBQUM7SUFDcEM7RUFDRixDQUFDLEVBQ0QsQ0FBQ0QsUUFBUSxFQUFFTyxrQkFBa0IsRUFBRVIsTUFBTSxFQUFFSSxRQUFRLEVBQUVGLGNBQWMsQ0FDakUsQ0FBQztBQUNIIiwiaWdub3JlTGlzdCI6W119