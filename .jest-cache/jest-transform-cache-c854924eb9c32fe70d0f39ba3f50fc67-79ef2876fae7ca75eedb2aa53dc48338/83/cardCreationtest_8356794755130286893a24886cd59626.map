{"version":3,"names":["_businessCardValidation","require","describe","validBasicInfo","name","title","company","email","phone","location","bio","profilePhoto","companyLogo","validStartupInfo","fundingStage","fundingAmount","fundingRound","teamSize","foundedYear","industry","businessModel","revenue","customers","growth","seekingFunding","seekingTalent","seekingPartners","seekingMentors","validSocialLinks","linkedin","twitter","website","github","gitlab","stackoverflow","instagram","facebook","youtube","tiktok","telegram","whatsapp","discord","slack","medium","behance","dribbble","producthunt","angellist","crunchbase","validCustomFields","id","label","value","type","icon","isPublic","order","validFormData","basicInfo","startupInfo","socialLinks","customFields","themeId","templateId","isDefault","test","errors","validateBasicInfo","expect","Object","keys","toHaveLength","invalidInfo","assign","toBe","shortName","longName","repeat","toContain","validateStartupInfo","validStages","forEach","stage","info","toBeUndefined","validSizes","size","validModels","model","currentYear","Date","getFullYear","validYear","oldYear","futureYear","validateSocialLinks","validLinkedIn","invalidLinkedIn","url","links","toBeDefined","validTwitter","invalidTwitter","validGitHub","invalidGitHub","validWebsite","invalidWebsite","validLinks","invalidLinks","validateCustomFields","tooManyFields","Array","from","length","_","i","String","general","invalidFields","field_0","field_1","emailField","phoneField","urlField","numberField","dateField","duplicateFields","validateBusinessCardForm","invalidForm","theme","template","validErrors","isBusinessCardFormValid","invalidErrors","completion","getBusinessCardCompletionPercentage","toBeGreaterThan","toBeLessThanOrEqual","minimalForm","suggestions","getBusinessCardSuggestions","some","s","includes","noPhotoForm","noBioForm","shortBioForm","nullForm","not","toThrow","emptyForm","_errors$basicInfo","longStringForm","specialCharForm","founderProfile","investorProfile"],"sources":["cardCreation.test.ts"],"sourcesContent":["/**\n * Business Card Creation Tests\n * \n * Comprehensive tests for business card creation functionality including\n * all field types, validation, form handling, and error scenarios.\n */\n\nimport {\n  validateBusinessCardForm,\n  validateBasicInfo,\n  validateStartupInfo,\n  validateSocialLinks,\n  validateCustomFields,\n  isBusinessCardFormValid,\n  getBusinessCardCompletionPercentage,\n  getBusinessCardSuggestions,\n} from '../../../src/utils/businessCardValidation';\n\nimport {\n  BusinessCardFormData,\n  BusinessCard,\n  BasicInfo,\n  StartupInfo,\n  SocialLinks,\n  CustomField,\n  FundingStage,\n  TeamSize,\n  BusinessModel,\n  RevenueStage,\n} from '../../../src/types/businessCard';\n\ndescribe('Business Card Creation - All Field Types', () => {\n  const validBasicInfo: BasicInfo = {\n    name: 'John Smith',\n    title: 'CEO & Founder',\n    company: 'TechStart Inc.',\n    email: 'john@techstart.com',\n    phone: '+1-555-123-4567',\n    location: 'San Francisco, CA',\n    bio: 'Experienced entrepreneur with a passion for innovative technology solutions.',\n    profilePhoto: 'https://example.com/profile.jpg',\n    companyLogo: 'https://example.com/logo.png',\n  };\n\n  const validStartupInfo: StartupInfo = {\n    fundingStage: 'seed',\n    fundingAmount: '$2M',\n    fundingRound: 'Seed Round A',\n    teamSize: '11-25',\n    foundedYear: 2023,\n    industry: ['Technology', 'SaaS', 'AI'],\n    businessModel: 'b2b',\n    revenue: '0-10k',\n    customers: '50+ early adopters',\n    growth: '20% MoM',\n    seekingFunding: true,\n    seekingTalent: true,\n    seekingPartners: false,\n    seekingMentors: true,\n  };\n\n  const validSocialLinks: SocialLinks = {\n    linkedin: 'https://linkedin.com/in/johnsmith',\n    twitter: 'https://twitter.com/johnsmith',\n    website: 'https://techstart.com',\n    github: 'https://github.com/johnsmith',\n    gitlab: 'https://gitlab.com/johnsmith',\n    stackoverflow: 'https://stackoverflow.com/users/123456/johnsmith',\n    instagram: 'https://instagram.com/johnsmith',\n    facebook: 'https://facebook.com/johnsmith',\n    youtube: 'https://youtube.com/c/johnsmith',\n    tiktok: 'https://tiktok.com/@johnsmith',\n    telegram: 'https://t.me/johnsmith',\n    whatsapp: 'https://wa.me/15551234567',\n    discord: 'johnsmith#1234',\n    slack: 'https://techstart.slack.com/team/U123456',\n    medium: 'https://medium.com/@johnsmith',\n    behance: 'https://behance.net/johnsmith',\n    dribbble: 'https://dribbble.com/johnsmith',\n    producthunt: 'https://producthunt.com/@johnsmith',\n    angellist: 'https://angellist.com/johnsmith',\n    crunchbase: 'https://crunchbase.com/person/john-smith',\n  };\n\n  const validCustomFields: CustomField[] = [\n    {\n      id: '1',\n      label: 'Investment Focus',\n      value: 'B2B SaaS, AI, Fintech',\n      type: 'text',\n      icon: '💼',\n      isPublic: true,\n      order: 1,\n    },\n    {\n      id: '2',\n      label: 'Portfolio Website',\n      value: 'https://portfolio.johnsmith.com',\n      type: 'url',\n      icon: '🌐',\n      isPublic: true,\n      order: 2,\n    },\n    {\n      id: '3',\n      label: 'Secondary Email',\n      value: 'john.personal@email.com',\n      type: 'email',\n      icon: '📧',\n      isPublic: false,\n      order: 3,\n    },\n    {\n      id: '4',\n      label: 'Mobile Number',\n      value: '+1-555-987-6543',\n      type: 'phone',\n      icon: '📱',\n      isPublic: true,\n      order: 4,\n    },\n    {\n      id: '5',\n      label: 'Years of Experience',\n      value: '15',\n      type: 'number',\n      icon: '📈',\n      isPublic: true,\n      order: 5,\n    },\n    {\n      id: '6',\n      label: 'Next Funding Date',\n      value: '2024-12-31',\n      type: 'date',\n      icon: '📅',\n      isPublic: false,\n      order: 6,\n    },\n    {\n      id: '7',\n      label: 'Looking for Investors',\n      value: 'true',\n      type: 'boolean',\n      icon: '💰',\n      isPublic: true,\n      order: 7,\n    },\n  ];\n\n  const validFormData: BusinessCardFormData = {\n    basicInfo: validBasicInfo,\n    startupInfo: validStartupInfo,\n    socialLinks: validSocialLinks,\n    customFields: validCustomFields,\n    themeId: 'professional-theme-1',\n    templateId: 'startup-template-1',\n    isDefault: false,\n    isPublic: true,\n  };\n\n  describe('Basic Information Validation', () => {\n    test('should validate complete basic info successfully', () => {\n      const errors = validateBasicInfo(validBasicInfo);\n      expect(Object.keys(errors)).toHaveLength(0);\n    });\n\n    test('should require name field', () => {\n      const invalidInfo = { ...validBasicInfo, name: '' };\n      const errors = validateBasicInfo(invalidInfo);\n      expect(errors.name).toBe('Name is required');\n    });\n\n    test('should require title field', () => {\n      const invalidInfo = { ...validBasicInfo, title: '' };\n      const errors = validateBasicInfo(invalidInfo);\n      expect(errors.title).toBe('Title is required');\n    });\n\n    test('should require company field', () => {\n      const invalidInfo = { ...validBasicInfo, company: '' };\n      const errors = validateBasicInfo(invalidInfo);\n      expect(errors.company).toBe('Company is required');\n    });\n\n    test('should require email field', () => {\n      const invalidInfo = { ...validBasicInfo, email: '' };\n      const errors = validateBasicInfo(invalidInfo);\n      expect(errors.email).toBe('Email is required');\n    });\n\n    test('should validate email format', () => {\n      const invalidInfo = { ...validBasicInfo, email: 'invalid-email' };\n      const errors = validateBasicInfo(invalidInfo);\n      expect(errors.email).toBe('Please enter a valid email address');\n    });\n\n    test('should validate phone format when provided', () => {\n      const invalidInfo = { ...validBasicInfo, phone: 'invalid-phone' };\n      const errors = validateBasicInfo(invalidInfo);\n      expect(errors.phone).toBe('Please enter a valid phone number');\n    });\n\n    test('should enforce name length limits', () => {\n      const shortName = { ...validBasicInfo, name: 'A' };\n      const longName = { ...validBasicInfo, name: 'A'.repeat(51) };\n      \n      expect(validateBasicInfo(shortName).name).toContain('at least 2 characters');\n      expect(validateBasicInfo(longName).name).toContain('less than 50 characters');\n    });\n  });\n\n  describe('Startup Information Validation', () => {\n    test('should validate complete startup info successfully', () => {\n      const errors = validateStartupInfo(validStartupInfo);\n      expect(Object.keys(errors)).toHaveLength(0);\n    });\n\n    test('should validate funding stages', () => {\n      const validStages: FundingStage[] = [\n        'idea', 'pre-seed', 'seed', 'series-a', 'series-b', \n        'series-c', 'series-d+', 'ipo', 'acquired', 'bootstrapped'\n      ];\n      \n      validStages.forEach(stage => {\n        const info = { ...validStartupInfo, fundingStage: stage };\n        const errors = validateStartupInfo(info);\n        expect(errors.fundingStage).toBeUndefined();\n      });\n    });\n\n    test('should validate team sizes', () => {\n      const validSizes: TeamSize[] = [\n        'solo', '2-5', '6-10', '11-25', '26-50', '51-100', '101-250', '250+'\n      ];\n      \n      validSizes.forEach(size => {\n        const info = { ...validStartupInfo, teamSize: size };\n        const errors = validateStartupInfo(info);\n        expect(errors.teamSize).toBeUndefined();\n      });\n    });\n\n    test('should validate business models', () => {\n      const validModels: BusinessModel[] = [\n        'b2b', 'b2c', 'b2b2c', 'marketplace', 'saas', 'subscription',\n        'freemium', 'advertising', 'commission', 'licensing', 'hardware', 'other'\n      ];\n      \n      validModels.forEach(model => {\n        const info = { ...validStartupInfo, businessModel: model };\n        const errors = validateStartupInfo(info);\n        expect(errors.fundingStage).toBeUndefined();\n      });\n    });\n\n    test('should validate founded year', () => {\n      const currentYear = new Date().getFullYear();\n      const validYear = { ...validStartupInfo, foundedYear: currentYear };\n      const oldYear = { ...validStartupInfo, foundedYear: 1800 };\n      const futureYear = { ...validStartupInfo, foundedYear: currentYear + 2 };\n      \n      expect(validateStartupInfo(validYear).fundingStage).toBeUndefined();\n      expect(validateStartupInfo(oldYear).fundingStage).toContain('valid founded year');\n      expect(validateStartupInfo(futureYear).fundingStage).toContain('valid founded year');\n    });\n  });\n\n  describe('Social Links Validation', () => {\n    test('should validate all social links successfully', () => {\n      const errors = validateSocialLinks(validSocialLinks);\n      expect(Object.keys(errors)).toHaveLength(0);\n    });\n\n    test('should validate LinkedIn URLs', () => {\n      const validLinkedIn = ['https://linkedin.com/in/user', 'https://www.linkedin.com/company/company'];\n      const invalidLinkedIn = ['https://facebook.com/user', 'not-a-url'];\n      \n      validLinkedIn.forEach(url => {\n        const links = { linkedin: url };\n        const errors = validateSocialLinks(links);\n        expect(errors.linkedin).toBeUndefined();\n      });\n      \n      invalidLinkedIn.forEach(url => {\n        const links = { linkedin: url };\n        const errors = validateSocialLinks(links);\n        expect(errors.linkedin).toBeDefined();\n      });\n    });\n\n    test('should validate Twitter URLs', () => {\n      const validTwitter = ['https://twitter.com/user', 'https://x.com/user'];\n      const invalidTwitter = ['https://facebook.com/user', 'not-a-url'];\n      \n      validTwitter.forEach(url => {\n        const links = { twitter: url };\n        const errors = validateSocialLinks(links);\n        expect(errors.twitter).toBeUndefined();\n      });\n      \n      invalidTwitter.forEach(url => {\n        const links = { twitter: url };\n        const errors = validateSocialLinks(links);\n        expect(errors.twitter).toBeDefined();\n      });\n    });\n\n    test('should validate GitHub URLs', () => {\n      const validGitHub = ['https://github.com/user', 'https://www.github.com/user'];\n      const invalidGitHub = ['https://gitlab.com/user', 'not-a-url'];\n      \n      validGitHub.forEach(url => {\n        const links = { github: url };\n        const errors = validateSocialLinks(links);\n        expect(errors.github).toBeUndefined();\n      });\n      \n      invalidGitHub.forEach(url => {\n        const links = { github: url };\n        const errors = validateSocialLinks(links);\n        expect(errors.github).toBeDefined();\n      });\n    });\n\n    test('should validate general URLs for non-specific platforms', () => {\n      const validWebsite = 'https://example.com';\n      const invalidWebsite = 'not-a-url';\n      \n      const validLinks = { website: validWebsite };\n      const invalidLinks = { website: invalidWebsite };\n      \n      expect(validateSocialLinks(validLinks).website).toBeUndefined();\n      expect(validateSocialLinks(invalidLinks).website).toBeDefined();\n    });\n  });\n\n  describe('Custom Fields Validation', () => {\n    test('should validate all custom field types successfully', () => {\n      const errors = validateCustomFields(validCustomFields);\n      expect(Object.keys(errors)).toHaveLength(0);\n    });\n\n    test('should enforce maximum custom fields limit', () => {\n      const tooManyFields = Array.from({ length: 12 }, (_, i) => ({\n        id: String(i),\n        label: `Field ${i}`,\n        value: `Value ${i}`,\n        type: 'text' as const,\n        isPublic: true,\n        order: i,\n      }));\n      \n      const errors = validateCustomFields(tooManyFields);\n      expect(errors.general).toContain('up to 10 custom fields');\n    });\n\n    test('should require field labels and values', () => {\n      const invalidFields: CustomField[] = [\n        {\n          id: '1',\n          label: '',\n          value: 'Valid Value',\n          type: 'text',\n          isPublic: true,\n          order: 1,\n        },\n        {\n          id: '2',\n          label: 'Valid Label',\n          value: '',\n          type: 'text',\n          isPublic: true,\n          order: 2,\n        },\n      ];\n      \n      const errors = validateCustomFields(invalidFields);\n      expect(errors.field_0).toContain('Label is required');\n      expect(errors.field_1).toContain('Value is required');\n    });\n\n    test('should validate email custom fields', () => {\n      const emailField: CustomField[] = [\n        {\n          id: '1',\n          label: 'Email',\n          value: 'invalid-email',\n          type: 'email',\n          isPublic: true,\n          order: 1,\n        },\n      ];\n      \n      const errors = validateCustomFields(emailField);\n      expect(errors.field_0).toContain('valid email address');\n    });\n\n    test('should validate phone custom fields', () => {\n      const phoneField: CustomField[] = [\n        {\n          id: '1',\n          label: 'Phone',\n          value: 'invalid-phone',\n          type: 'phone',\n          isPublic: true,\n          order: 1,\n        },\n      ];\n      \n      const errors = validateCustomFields(phoneField);\n      expect(errors.field_0).toContain('valid phone number');\n    });\n\n    test('should validate URL custom fields', () => {\n      const urlField: CustomField[] = [\n        {\n          id: '1',\n          label: 'Website',\n          value: 'not-a-url',\n          type: 'url',\n          isPublic: true,\n          order: 1,\n        },\n      ];\n      \n      const errors = validateCustomFields(urlField);\n      expect(errors.field_0).toContain('valid URL');\n    });\n\n    test('should validate number custom fields', () => {\n      const numberField: CustomField[] = [\n        {\n          id: '1',\n          label: 'Count',\n          value: 'not-a-number',\n          type: 'number',\n          isPublic: true,\n          order: 1,\n        },\n      ];\n      \n      const errors = validateCustomFields(numberField);\n      expect(errors.field_0).toContain('valid number');\n    });\n\n    test('should validate date custom fields', () => {\n      const dateField: CustomField[] = [\n        {\n          id: '1',\n          label: 'Date',\n          value: 'not-a-date',\n          type: 'date',\n          isPublic: true,\n          order: 1,\n        },\n      ];\n      \n      const errors = validateCustomFields(dateField);\n      expect(errors.field_0).toContain('valid date');\n    });\n\n    test('should prevent duplicate field labels', () => {\n      const duplicateFields: CustomField[] = [\n        {\n          id: '1',\n          label: 'Website',\n          value: 'https://site1.com',\n          type: 'url',\n          isPublic: true,\n          order: 1,\n        },\n        {\n          id: '2',\n          label: 'website', // Same label (case-insensitive)\n          value: 'https://site2.com',\n          type: 'url',\n          isPublic: true,\n          order: 2,\n        },\n      ];\n      \n      const errors = validateCustomFields(duplicateFields);\n      expect(errors.general).toContain('must be unique');\n    });\n  });\n\n  describe('Complete Form Validation', () => {\n    test('should validate complete form successfully', () => {\n      const errors = validateBusinessCardForm(validFormData);\n      expect(Object.keys(errors)).toHaveLength(0);\n    });\n\n    test('should require theme selection', () => {\n      const invalidForm = { ...validFormData, themeId: '' };\n      const errors = validateBusinessCardForm(invalidForm);\n      expect(errors.theme).toBe('Please select a theme');\n    });\n\n    test('should require template selection', () => {\n      const invalidForm = { ...validFormData, templateId: '' };\n      const errors = validateBusinessCardForm(invalidForm);\n      expect(errors.template).toBe('Please select a template');\n    });\n\n    test('should check form validity correctly', () => {\n      const validErrors = validateBusinessCardForm(validFormData);\n      expect(isBusinessCardFormValid(validFormData, validErrors)).toBe(true);\n      \n      const invalidForm = { ...validFormData, basicInfo: { ...validBasicInfo, name: '' } };\n      const invalidErrors = validateBusinessCardForm(invalidForm);\n      expect(isBusinessCardFormValid(invalidForm, invalidErrors)).toBe(false);\n    });\n  });\n\n  describe('Form Completion and Suggestions', () => {\n    test('should calculate completion percentage', () => {\n      const completion = getBusinessCardCompletionPercentage(validFormData);\n      expect(completion).toBeGreaterThan(80);\n      expect(completion).toBeLessThanOrEqual(100);\n    });\n\n    test('should provide helpful suggestions', () => {\n      const minimalForm: BusinessCardFormData = {\n        basicInfo: {\n          name: 'John Smith',\n          title: 'CEO',\n          company: 'TechStart',\n          email: 'john@techstart.com',\n        },\n        socialLinks: {},\n        customFields: [],\n        themeId: 'theme-1',\n        templateId: 'template-1',\n      };\n      \n      const suggestions = getBusinessCardSuggestions(minimalForm);\n      expect(suggestions.length).toBeGreaterThan(0);\n      expect(suggestions.some(s => s.includes('phone'))).toBe(true);\n      expect(suggestions.some(s => s.includes('LinkedIn'))).toBe(true);\n    });\n\n    test('should suggest profile photo when missing', () => {\n      const noPhotoForm = {\n        ...validFormData,\n        basicInfo: { ...validBasicInfo, profilePhoto: '' },\n      };\n      \n      const suggestions = getBusinessCardSuggestions(noPhotoForm);\n      expect(suggestions.some(s => s.includes('profile photo'))).toBe(true);\n    });\n\n    test('should suggest bio when missing or too short', () => {\n      const noBioForm = {\n        ...validFormData,\n        basicInfo: { ...validBasicInfo, bio: '' },\n      };\n      \n      const shortBioForm = {\n        ...validFormData,\n        basicInfo: { ...validBasicInfo, bio: 'Short' },\n      };\n      \n      expect(getBusinessCardSuggestions(noBioForm).some(s => s.includes('bio'))).toBe(true);\n      expect(getBusinessCardSuggestions(shortBioForm).some(s => s.includes('bio'))).toBe(true);\n    });\n  });\n\n  describe('Edge Cases and Error Handling', () => {\n    test('should handle null and undefined values gracefully', () => {\n      const nullForm = {\n        basicInfo: { name: null, title: null, company: null, email: null },\n        socialLinks: {},\n        customFields: [],\n        themeId: '',\n        templateId: '',\n      } as any;\n      \n      expect(() => validateBusinessCardForm(nullForm)).not.toThrow();\n    });\n\n    test('should handle empty arrays and objects', () => {\n      const emptyForm: BusinessCardFormData = {\n        basicInfo: {} as BasicInfo,\n        socialLinks: {},\n        customFields: [],\n        themeId: '',\n        templateId: '',\n      };\n      \n      expect(() => validateBusinessCardForm(emptyForm)).not.toThrow();\n    });\n\n    test('should handle very long input values', () => {\n      const longStringForm = {\n        ...validFormData,\n        basicInfo: {\n          ...validBasicInfo,\n          name: 'A'.repeat(1000),\n          bio: 'B'.repeat(1000),\n        },\n      };\n      \n      const errors = validateBusinessCardForm(longStringForm);\n      expect(errors.basicInfo?.name).toBeDefined();\n    });\n\n    test('should handle special characters in fields', () => {\n      const specialCharForm = {\n        ...validFormData,\n        basicInfo: {\n          ...validBasicInfo,\n          name: 'José María Aznar-López',\n          company: 'Company™ & Co.',\n        },\n      };\n      \n      const errors = validateBusinessCardForm(specialCharForm);\n      expect(Object.keys(errors)).toHaveLength(0);\n    });\n  });\n\n  describe('Real-world Scenarios', () => {\n    test('should handle typical startup founder profile', () => {\n      const founderProfile: BusinessCardFormData = {\n        basicInfo: {\n          name: 'Sarah Chen',\n          title: 'Co-Founder & CTO',\n          company: 'AI Vision Labs',\n          email: 'sarah@aivisionlabs.ai',\n          phone: '+1-415-555-0123',\n          location: 'Palo Alto, CA',\n          bio: 'Building the future of computer vision with deep learning. Former Google AI researcher with 8 years in ML.',\n        },\n        startupInfo: {\n          fundingStage: 'series-a',\n          teamSize: '11-25',\n          industry: ['AI', 'Computer Vision', 'B2B'],\n          businessModel: 'b2b',\n          revenue: '100k-1m',\n          seekingFunding: false,\n          seekingTalent: true,\n          seekingPartners: true,\n          seekingMentors: false,\n        },\n        socialLinks: {\n          linkedin: 'https://linkedin.com/in/sarahchen',\n          twitter: 'https://twitter.com/sarahchen_ai',\n          github: 'https://github.com/sarahchen',\n          website: 'https://aivisionlabs.ai',\n        },\n        customFields: [\n          {\n            id: '1',\n            label: 'Patents Filed',\n            value: '3',\n            type: 'number',\n            isPublic: true,\n            order: 1,\n          },\n          {\n            id: '2',\n            label: 'Research Papers',\n            value: '12',\n            type: 'number',\n            isPublic: true,\n            order: 2,\n          },\n        ],\n        themeId: 'tech-theme',\n        templateId: 'modern-template',\n        isDefault: true,\n        isPublic: true,\n      };\n      \n      const errors = validateBusinessCardForm(founderProfile);\n      expect(Object.keys(errors)).toHaveLength(0);\n      \n      const completion = getBusinessCardCompletionPercentage(founderProfile);\n      expect(completion).toBeGreaterThan(85);\n    });\n\n    test('should handle investor profile', () => {\n      const investorProfile: BusinessCardFormData = {\n        basicInfo: {\n          name: 'Michael Rodriguez',\n          title: 'Managing Partner',\n          company: 'Venture Capital Partners',\n          email: 'michael@vcpartners.com',\n          phone: '+1-212-555-0987',\n          location: 'New York, NY',\n          bio: 'Investing in early-stage B2B SaaS companies. $500M+ AUM. Former entrepreneur with 3 exits.',\n        },\n        startupInfo: {\n          fundingStage: 'acquired',\n          teamSize: '51-100',\n          industry: ['Venture Capital', 'B2B', 'SaaS'],\n          businessModel: 'commission',\n          revenue: '10m-100m',\n          seekingFunding: false,\n          seekingTalent: false,\n          seekingPartners: true,\n          seekingMentors: false,\n        },\n        socialLinks: {\n          linkedin: 'https://linkedin.com/in/michaelrodriguez',\n          twitter: 'https://twitter.com/mrodriguez_vc',\n          website: 'https://vcpartners.com',\n          angellist: 'https://angellist.com/michaelrodriguez',\n          crunchbase: 'https://crunchbase.com/person/michael-rodriguez',\n        },\n        customFields: [\n          {\n            id: '1',\n            label: 'Investment Range',\n            value: '$500K - $5M',\n            type: 'text',\n            isPublic: true,\n            order: 1,\n          },\n          {\n            id: '2',\n            label: 'Check Size',\n            value: '$1M',\n            type: 'text',\n            isPublic: true,\n            order: 2,\n          },\n          {\n            id: '3',\n            label: 'Portfolio Companies',\n            value: '45',\n            type: 'number',\n            isPublic: true,\n            order: 3,\n          },\n        ],\n        themeId: 'professional-theme',\n        templateId: 'executive-template',\n        isDefault: true,\n        isPublic: true,\n      };\n      \n      const errors = validateBusinessCardForm(investorProfile);\n      expect(Object.keys(errors)).toHaveLength(0);\n      \n      const completion = getBusinessCardCompletionPercentage(investorProfile);\n      expect(completion).toBeGreaterThan(90);\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}