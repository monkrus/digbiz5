{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","Dimensions","get","fn","width","height","PixelRatio","getFontScale","__esModule","default","_ref","children","props","_objectWithoutProperties2","_excluded","MockViewShot","_ref2","_excluded2","_jsxRuntime","jsx","testID","_ref3","data","_excluded3","MockQRCode","_ref4","_excluded4","jsxs","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_CardPreview","_cardRendering","_require","describe","mockTheme","id","name","primaryColor","secondaryColor","backgroundColor","textColor","accentColor","fontFamily","headerFontSize","bodyFontSize","borderRadius","padding","spacing","mockTemplate","category","layout","elements","type","position","x","y","size","style","fontSize","fontWeight","color","isVisible","isRequired","isPopular","isPremium","previewImage","mockFormData","basicInfo","title","company","email","phone","location","bio","profilePhoto","companyLogo","startupInfo","fundingStage","teamSize","industry","businessModel","revenue","seekingFunding","seekingTalent","seekingPartners","seekingMentors","socialLinks","linkedin","twitter","website","github","customFields","label","value","icon","isPublic","order","themeId","templateId","isDefault","mockBusinessCard","userId","theme","template","shareCode","isActive","createdAt","updatedAt","lastSharedAt","test","onClose","onEdit","_render","render","formData","getByText","getByTestId","expect","toBeTruthy","_render2","card","minimalFormData","_render3","styledElement","applyThemeStyles","toBe","validateTheme","invalidTheme","gradientTheme","gradient","colors","direction","shadowTheme","shadow","opacity","offsetX","offsetY","blur","patternTheme","pattern","dimensions","calculateCardDimensions","aspectRatio","toBeCloseTo","businessCard","postcard","flyer","landscapeDimensions","layoutCardElements","toHaveLength","length","totalHeight","toBeGreaterThan","contentAreas","toBeDefined","overlappingTemplate","hasOverlaps","overlappingPairs","elementTypes","forEach","elementType","element","renderCardWithTheme","not","toThrow","cardWithMissingImages","_render4","showQRCode","cardWithManySocials","instagram","facebook","youtube","mobileOptimized","optimizeCardForDisplay","tabletOptimized","desktopOptimized","scaleFactor","toBeLessThanOrEqual","mockReturnValue","optimized","dpiScale","fontScale","_render5","closeButton","fireEvent","press","toHaveBeenCalled","_render6","editButton","onElementTap","_render7","nameElement","waitFor","toHaveBeenCalledWith","any","_render8","isLoading","_render9","error","cardWithBadImages","spy","spyOn","console","_render0","rerender","mockRestore","cardWithManyFields","Array","from","_","i","String","startTime","performance","now","endTime","renderTime","toBeLessThan","_render1","getByLabelText","_render10","getByRole","contrastRatio","calculateContrastRatio","onCapture","_render11","viewShot","exportFormats","format","exportFormat","foreground","background"],"sources":["cardPreview.test.tsx"],"sourcesContent":["/**\n * Card Preview Rendering Tests\n * \n * Comprehensive tests for business card preview rendering, themes,\n * templates, layout calculations, and visual components.\n */\n\nimport React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport { View, Text } from 'react-native';\nimport CardPreview from '../../../src/components/businessCard/preview/CardPreview';\nimport { \n  renderCardWithTheme,\n  calculateCardDimensions,\n  applyThemeStyles,\n  layoutCardElements,\n  validateTheme,\n  optimizeCardForDisplay,\n} from '../../../src/utils/cardRendering';\n\nimport {\n  BusinessCard,\n  BusinessCardFormData,\n  CardTheme,\n  CardTemplate,\n  ElementType,\n} from '../../../src/types/businessCard';\n\n// Mock react-native modules\njest.mock('react-native', () => ({\n  ...jest.requireActual('react-native'),\n  Dimensions: {\n    get: jest.fn(() => ({ width: 375, height: 812 })),\n  },\n  PixelRatio: {\n    get: jest.fn(() => 2),\n    getFontScale: jest.fn(() => 1),\n  },\n}));\n\n// Mock ViewShot component\njest.mock('react-native-view-shot', () => {\n  return {\n    __esModule: true,\n    default: ({ children, ...props }: any) => {\n      const MockViewShot = ({ children, ...props }: any) => (\n        <div testID=\"view-shot\" {...props}>\n          {children}\n        </div>\n      );\n      return <MockViewShot {...props}>{children}</MockViewShot>;\n    },\n  };\n});\n\n// Mock QR Code component\njest.mock('../../../src/components/common/QRCodeComponent', () => {\n  return {\n    __esModule: true,\n    default: ({ data, ...props }: any) => {\n      const MockQRCode = ({ data, ...props }: any) => (\n        <div testID=\"qr-code\" {...props}>\n          QR: {data?.data || 'mock-qr-data'}\n        </div>\n      );\n      return <MockQRCode data={data} {...props} />;\n    },\n  };\n});\n\ndescribe('Card Preview Rendering', () => {\n  const mockTheme: CardTheme = {\n    id: 'professional-theme-1',\n    name: 'Professional Blue',\n    primaryColor: '#3b82f6',\n    secondaryColor: '#1e40af',\n    backgroundColor: '#ffffff',\n    textColor: '#1f2937',\n    accentColor: '#10b981',\n    fontFamily: 'Inter',\n    headerFontSize: 24,\n    bodyFontSize: 14,\n    borderRadius: 8,\n    padding: 16,\n    spacing: 8,\n  };\n\n  const mockTemplate: CardTemplate = {\n    id: 'startup-template-1',\n    name: 'Modern Startup',\n    category: 'startup',\n    layout: 'standard',\n    elements: [\n      {\n        id: 'name-element',\n        type: 'name',\n        position: { x: 16, y: 16 },\n        size: { width: 300, height: 32 },\n        style: {\n          fontSize: 24,\n          fontWeight: 'bold',\n          color: '#1f2937',\n        },\n        isVisible: true,\n        isRequired: true,\n      },\n      {\n        id: 'title-element',\n        type: 'title',\n        position: { x: 16, y: 56 },\n        size: { width: 300, height: 20 },\n        style: {\n          fontSize: 16,\n          fontWeight: 'normal',\n          color: '#6b7280',\n        },\n        isVisible: true,\n        isRequired: true,\n      },\n      {\n        id: 'company-element',\n        type: 'company',\n        position: { x: 16, y: 84 },\n        size: { width: 300, height: 20 },\n        style: {\n          fontSize: 14,\n          fontWeight: '500',\n          color: '#374151',\n        },\n        isVisible: true,\n        isRequired: true,\n      },\n      {\n        id: 'qr-element',\n        type: 'qr-code',\n        position: { x: 250, y: 120 },\n        size: { width: 80, height: 80 },\n        style: {},\n        isVisible: true,\n        isRequired: false,\n      },\n    ],\n    isPopular: true,\n    isPremium: false,\n    previewImage: 'https://example.com/template-preview.png',\n  };\n\n  const mockFormData: BusinessCardFormData = {\n    basicInfo: {\n      name: 'John Smith',\n      title: 'CEO & Founder',\n      company: 'TechStart Inc.',\n      email: 'john@techstart.com',\n      phone: '+1-555-123-4567',\n      location: 'San Francisco, CA',\n      bio: 'Building the future of technology.',\n      profilePhoto: 'https://example.com/profile.jpg',\n      companyLogo: 'https://example.com/logo.png',\n    },\n    startupInfo: {\n      fundingStage: 'seed',\n      teamSize: '11-25',\n      industry: ['Technology', 'SaaS'],\n      businessModel: 'b2b',\n      revenue: '0-10k',\n      seekingFunding: true,\n      seekingTalent: true,\n      seekingPartners: false,\n      seekingMentors: true,\n    },\n    socialLinks: {\n      linkedin: 'https://linkedin.com/in/johnsmith',\n      twitter: 'https://twitter.com/johnsmith',\n      website: 'https://techstart.com',\n      github: 'https://github.com/johnsmith',\n    },\n    customFields: [\n      {\n        id: '1',\n        label: 'Investment Focus',\n        value: 'B2B SaaS, AI',\n        type: 'text',\n        icon: 'ðŸ’¼',\n        isPublic: true,\n        order: 1,\n      },\n    ],\n    themeId: mockTheme.id,\n    templateId: mockTemplate.id,\n    isDefault: false,\n    isPublic: true,\n  };\n\n  const mockBusinessCard: BusinessCard = {\n    id: 'card-123',\n    userId: 'user-456',\n    ...mockFormData,\n    theme: mockTheme,\n    template: mockTemplate,\n    shareCode: 'abc123def456',\n    isActive: true,\n    createdAt: '2024-01-15T10:30:00Z',\n    updatedAt: '2024-01-15T10:30:00Z',\n    lastSharedAt: '2024-01-15T15:45:00Z',\n  };\n\n  describe('Basic Rendering', () => {\n    test('should render card preview with form data', () => {\n      const onClose = jest.fn();\n      const onEdit = jest.fn();\n\n      const { getByText, getByTestId } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={onClose}\n          onEdit={onEdit}\n        />\n      );\n\n      expect(getByText('John Smith')).toBeTruthy();\n      expect(getByText('CEO & Founder')).toBeTruthy();\n      expect(getByText('TechStart Inc.')).toBeTruthy();\n    });\n\n    test('should render card preview with business card data', () => {\n      const onClose = jest.fn();\n      const onEdit = jest.fn();\n\n      const { getByText } = render(\n        <CardPreview\n          card={mockBusinessCard}\n          onClose={onClose}\n          onEdit={onEdit}\n        />\n      );\n\n      expect(getByText('John Smith')).toBeTruthy();\n      expect(getByText('CEO & Founder')).toBeTruthy();\n      expect(getByText('TechStart Inc.')).toBeTruthy();\n    });\n\n    test('should handle missing data gracefully', () => {\n      const minimalFormData: BusinessCardFormData = {\n        basicInfo: {\n          name: 'Jane Doe',\n          title: 'Developer',\n          company: 'DevCorp',\n          email: 'jane@devcorp.com',\n        },\n        socialLinks: {},\n        customFields: [],\n        themeId: 'theme-1',\n        templateId: 'template-1',\n      };\n\n      const onClose = jest.fn();\n      const onEdit = jest.fn();\n\n      const { getByText } = render(\n        <CardPreview\n          formData={minimalFormData}\n          onClose={onClose}\n          onEdit={onEdit}\n        />\n      );\n\n      expect(getByText('Jane Doe')).toBeTruthy();\n      expect(getByText('Developer')).toBeTruthy();\n      expect(getByText('DevCorp')).toBeTruthy();\n    });\n  });\n\n  describe('Theme Application', () => {\n    test('should apply theme colors correctly', () => {\n      const styledElement = applyThemeStyles(mockTheme, 'name', {\n        fontSize: 24,\n        fontWeight: 'bold',\n      });\n\n      expect(styledElement.color).toBe(mockTheme.textColor);\n      expect(styledElement.fontFamily).toBe(mockTheme.fontFamily);\n      expect(styledElement.fontSize).toBe(24);\n    });\n\n    test('should validate theme structure', () => {\n      expect(validateTheme(mockTheme)).toBe(true);\n\n      const invalidTheme = { ...mockTheme, primaryColor: null };\n      expect(validateTheme(invalidTheme as any)).toBe(false);\n    });\n\n    test('should handle theme with gradients', () => {\n      const gradientTheme: CardTheme = {\n        ...mockTheme,\n        gradient: {\n          type: 'linear',\n          colors: ['#3b82f6', '#1e40af'],\n          direction: 45,\n        },\n      };\n\n      expect(validateTheme(gradientTheme)).toBe(true);\n    });\n\n    test('should handle theme with shadows', () => {\n      const shadowTheme: CardTheme = {\n        ...mockTheme,\n        shadow: {\n          color: '#000000',\n          opacity: 0.1,\n          offsetX: 0,\n          offsetY: 2,\n          blur: 4,\n        },\n      };\n\n      expect(validateTheme(shadowTheme)).toBe(true);\n    });\n\n    test('should handle theme with patterns', () => {\n      const patternTheme: CardTheme = {\n        ...mockTheme,\n        pattern: {\n          type: 'dots',\n          color: '#e5e7eb',\n          opacity: 0.3,\n          size: 4,\n        },\n      };\n\n      expect(validateTheme(patternTheme)).toBe(true);\n    });\n  });\n\n  describe('Layout Calculations', () => {\n    test('should calculate card dimensions correctly', () => {\n      const dimensions = calculateCardDimensions('business-card', 'portrait');\n\n      expect(dimensions.width).toBe(350);\n      expect(dimensions.height).toBe(200);\n      expect(dimensions.aspectRatio).toBeCloseTo(1.75);\n    });\n\n    test('should calculate dimensions for different card sizes', () => {\n      const businessCard = calculateCardDimensions('business-card', 'portrait');\n      const postcard = calculateCardDimensions('postcard', 'landscape');\n      const flyer = calculateCardDimensions('flyer', 'portrait');\n\n      expect(businessCard.width).toBe(350);\n      expect(postcard.width).toBe(400);\n      expect(flyer.width).toBe(300);\n    });\n\n    test('should handle landscape orientation', () => {\n      const landscapeDimensions = calculateCardDimensions('business-card', 'landscape');\n\n      expect(landscapeDimensions.width).toBe(350);\n      expect(landscapeDimensions.height).toBe(200);\n    });\n\n    test('should layout card elements correctly', () => {\n      const layout = layoutCardElements(mockTemplate, mockFormData);\n\n      expect(layout.elements).toHaveLength(mockTemplate.elements.length);\n      expect(layout.totalHeight).toBeGreaterThan(0);\n      expect(layout.contentAreas).toBeDefined();\n    });\n\n    test('should handle overlapping elements', () => {\n      const overlappingTemplate: CardTemplate = {\n        ...mockTemplate,\n        elements: [\n          {\n            id: 'element1',\n            type: 'name',\n            position: { x: 10, y: 10 },\n            size: { width: 100, height: 50 },\n            style: {},\n            isVisible: true,\n            isRequired: true,\n          },\n          {\n            id: 'element2',\n            type: 'title',\n            position: { x: 50, y: 30 }, // Overlaps with element1\n            size: { width: 100, height: 50 },\n            style: {},\n            isVisible: true,\n            isRequired: true,\n          },\n        ],\n      };\n\n      const layout = layoutCardElements(overlappingTemplate, mockFormData);\n      expect(layout.hasOverlaps).toBe(true);\n      expect(layout.overlappingPairs).toHaveLength(1);\n    });\n  });\n\n  describe('Visual Elements', () => {\n    test('should render all element types', () => {\n      const elementTypes: ElementType[] = [\n        'name', 'title', 'company', 'email', 'phone', 'location', 'bio',\n        'profile-photo', 'company-logo', 'social-links', 'custom-field', 'qr-code'\n      ];\n\n      elementTypes.forEach(elementType => {\n        const element = {\n          id: `${elementType}-test`,\n          type: elementType,\n          position: { x: 0, y: 0 },\n          size: { width: 100, height: 20 },\n          style: {},\n          isVisible: true,\n          isRequired: false,\n        };\n\n        // Should not throw when rendering any element type\n        expect(() => {\n          renderCardWithTheme(mockFormData, mockTheme, [element]);\n        }).not.toThrow();\n      });\n    });\n\n    test('should handle missing images gracefully', () => {\n      const cardWithMissingImages: BusinessCardFormData = {\n        ...mockFormData,\n        basicInfo: {\n          ...mockFormData.basicInfo,\n          profilePhoto: '',\n          companyLogo: '',\n        },\n      };\n\n      expect(() => {\n        renderCardWithTheme(cardWithMissingImages, mockTheme, mockTemplate.elements);\n      }).not.toThrow();\n    });\n\n    test('should render QR code element', () => {\n      const onClose = jest.fn();\n      const onEdit = jest.fn();\n\n      const { getByTestId } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={onClose}\n          onEdit={onEdit}\n          showQRCode={true}\n        />\n      );\n\n      expect(getByTestId('qr-code')).toBeTruthy();\n    });\n\n    test('should handle social links rendering', () => {\n      const cardWithManySocials: BusinessCardFormData = {\n        ...mockFormData,\n        socialLinks: {\n          linkedin: 'https://linkedin.com/in/john',\n          twitter: 'https://twitter.com/john',\n          github: 'https://github.com/john',\n          instagram: 'https://instagram.com/john',\n          facebook: 'https://facebook.com/john',\n          youtube: 'https://youtube.com/john',\n          website: 'https://johndoe.com',\n        },\n      };\n\n      expect(() => {\n        renderCardWithTheme(cardWithManySocials, mockTheme, mockTemplate.elements);\n      }).not.toThrow();\n    });\n  });\n\n  describe('Responsive Design', () => {\n    test('should optimize card for different screen sizes', () => {\n      const mobileOptimized = optimizeCardForDisplay(mockFormData, mockTheme, 'mobile');\n      const tabletOptimized = optimizeCardForDisplay(mockFormData, mockTheme, 'tablet');\n      const desktopOptimized = optimizeCardForDisplay(mockFormData, mockTheme, 'desktop');\n\n      expect(mobileOptimized.scaleFactor).toBeLessThanOrEqual(1);\n      expect(tabletOptimized.scaleFactor).toBeLessThanOrEqual(1.2);\n      expect(desktopOptimized.scaleFactor).toBeLessThanOrEqual(1.5);\n    });\n\n    test('should handle high DPI displays', () => {\n      (require('react-native').PixelRatio.get as jest.Mock).mockReturnValue(3);\n\n      const optimized = optimizeCardForDisplay(mockFormData, mockTheme, 'mobile');\n      expect(optimized.dpiScale).toBe(3);\n    });\n\n    test('should adjust for font scaling', () => {\n      (require('react-native').PixelRatio.getFontScale as jest.Mock).mockReturnValue(1.3);\n\n      const optimized = optimizeCardForDisplay(mockFormData, mockTheme, 'mobile');\n      expect(optimized.fontScale).toBe(1.3);\n    });\n  });\n\n  describe('Interaction Handling', () => {\n    test('should handle close button press', () => {\n      const onClose = jest.fn();\n      const onEdit = jest.fn();\n\n      const { getByText } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={onClose}\n          onEdit={onEdit}\n        />\n      );\n\n      const closeButton = getByText('Close');\n      fireEvent.press(closeButton);\n\n      expect(onClose).toHaveBeenCalled();\n    });\n\n    test('should handle edit button press', () => {\n      const onClose = jest.fn();\n      const onEdit = jest.fn();\n\n      const { getByText } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={onClose}\n          onEdit={onEdit}\n        />\n      );\n\n      const editButton = getByText('Edit');\n      fireEvent.press(editButton);\n\n      expect(onEdit).toHaveBeenCalled();\n    });\n\n    test('should handle element tap interactions', async () => {\n      const onElementTap = jest.fn();\n      \n      const { getByText } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={jest.fn()}\n          onEdit={jest.fn()}\n          onElementTap={onElementTap}\n        />\n      );\n\n      const nameElement = getByText('John Smith');\n      fireEvent.press(nameElement);\n\n      await waitFor(() => {\n        expect(onElementTap).toHaveBeenCalledWith('name', expect.any(Object));\n      });\n    });\n  });\n\n  describe('Loading and Error States', () => {\n    test('should show loading state', () => {\n      const { getByTestId } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={jest.fn()}\n          onEdit={jest.fn()}\n          isLoading={true}\n        />\n      );\n\n      expect(getByTestId('loading-indicator')).toBeTruthy();\n    });\n\n    test('should show error state', () => {\n      const { getByText } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={jest.fn()}\n          onEdit={jest.fn()}\n          error=\"Failed to load theme\"\n        />\n      );\n\n      expect(getByText('Failed to load theme')).toBeTruthy();\n    });\n\n    test('should handle image loading errors', () => {\n      const cardWithBadImages: BusinessCardFormData = {\n        ...mockFormData,\n        basicInfo: {\n          ...mockFormData.basicInfo,\n          profilePhoto: 'https://invalid-url.com/photo.jpg',\n          companyLogo: 'https://invalid-url.com/logo.png',\n        },\n      };\n\n      expect(() => {\n        render(\n          <CardPreview\n            formData={cardWithBadImages}\n            onClose={jest.fn()}\n            onEdit={jest.fn()}\n          />\n        );\n      }).not.toThrow();\n    });\n  });\n\n  describe('Performance Optimization', () => {\n    test('should memoize theme calculations', () => {\n      const spy = jest.spyOn(console, 'log');\n      \n      // Render same card multiple times\n      const onClose = jest.fn();\n      const onEdit = jest.fn();\n\n      const { rerender } = render(\n        <CardPreview formData={mockFormData} onClose={onClose} onEdit={onEdit} />\n      );\n\n      rerender(\n        <CardPreview formData={mockFormData} onClose={onClose} onEdit={onEdit} />\n      );\n\n      // Should not recalculate theme if data hasn't changed\n      expect(spy).not.toHaveBeenCalledWith('Recalculating theme styles');\n      spy.mockRestore();\n    });\n\n    test('should handle large datasets efficiently', () => {\n      const cardWithManyFields: BusinessCardFormData = {\n        ...mockFormData,\n        customFields: Array.from({ length: 50 }, (_, i) => ({\n          id: String(i),\n          label: `Field ${i}`,\n          value: `Value ${i}`,\n          type: 'text' as const,\n          isPublic: true,\n          order: i,\n        })),\n      };\n\n      const startTime = performance.now();\n      \n      render(\n        <CardPreview\n          formData={cardWithManyFields}\n          onClose={jest.fn()}\n          onEdit={jest.fn()}\n        />\n      );\n\n      const endTime = performance.now();\n      const renderTime = endTime - startTime;\n\n      // Should render within reasonable time (2 seconds for many fields)\n      expect(renderTime).toBeLessThan(2000);\n    });\n  });\n\n  describe('Accessibility', () => {\n    test('should have proper accessibility labels', () => {\n      const { getByLabelText } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={jest.fn()}\n          onEdit={jest.fn()}\n        />\n      );\n\n      expect(getByLabelText('Business card preview')).toBeTruthy();\n      expect(getByLabelText('Close preview')).toBeTruthy();\n      expect(getByLabelText('Edit card')).toBeTruthy();\n    });\n\n    test('should support screen reader navigation', () => {\n      const { getByRole } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={jest.fn()}\n          onEdit={jest.fn()}\n        />\n      );\n\n      expect(getByRole('button', { name: /close/i })).toBeTruthy();\n      expect(getByRole('button', { name: /edit/i })).toBeTruthy();\n    });\n\n    test('should have proper contrast ratios', () => {\n      const contrastRatio = calculateContrastRatio(\n        mockTheme.textColor,\n        mockTheme.backgroundColor\n      );\n\n      expect(contrastRatio).toBeGreaterThan(4.5); // WCAG AA standard\n    });\n  });\n\n  describe('Export and Sharing', () => {\n    test('should capture preview for sharing', async () => {\n      const onCapture = jest.fn();\n      \n      const { getByTestId } = render(\n        <CardPreview\n          formData={mockFormData}\n          onClose={jest.fn()}\n          onEdit={jest.fn()}\n          onCapture={onCapture}\n        />\n      );\n\n      const viewShot = getByTestId('view-shot');\n      expect(viewShot).toBeTruthy();\n\n      // Simulate capture\n      fireEvent(viewShot, 'capture');\n      \n      await waitFor(() => {\n        expect(onCapture).toHaveBeenCalled();\n      });\n    });\n\n    test('should handle different export formats', () => {\n      const exportFormats = ['png', 'jpg', 'pdf', 'svg'];\n      \n      exportFormats.forEach(format => {\n        expect(() => {\n          render(\n            <CardPreview\n              formData={mockFormData}\n              onClose={jest.fn()}\n              onEdit={jest.fn()}\n              exportFormat={format as any}\n            />\n          );\n        }).not.toThrow();\n      });\n    });\n  });\n});\n\n// Helper function for contrast ratio calculation\nfunction calculateContrastRatio(foreground: string, background: string): number {\n  // Simplified contrast ratio calculation for testing\n  // In real implementation, this would convert hex to RGB and calculate proper contrast\n  return 7; // Mock value that passes WCAG standards\n}"],"mappings":"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","ignoreList":[]}