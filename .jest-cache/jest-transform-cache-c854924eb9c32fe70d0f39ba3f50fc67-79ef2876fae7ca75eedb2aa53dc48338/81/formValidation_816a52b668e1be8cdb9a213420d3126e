8c54e6ff13a32ae2114ece41f8b373d0
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerSchema = exports.passwordSchema = exports.loginSchema = exports.emailSchema = void 0;
var yup = _interopRequireWildcard(require("yup"));
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_1861fsw4fx() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\utils\\formValidation.ts";
  var hash = "354c4d41545460123f748479cf2657e53247df81";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\utils\\formValidation.ts",
    statementMap: {
      "0": {
        start: {
          line: 4,
          column: 27
        },
        end: {
          line: 7,
          column: 32
        }
      },
      "1": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 15,
          column: 35
        }
      },
      "2": {
        start: {
          line: 18,
          column: 27
        },
        end: {
          line: 21,
          column: 2
        }
      },
      "3": {
        start: {
          line: 24,
          column: 30
        },
        end: {
          line: 31,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {},
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "354c4d41545460123f748479cf2657e53247df81"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1861fsw4fx = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1861fsw4fx();
var emailSchema = exports.emailSchema = (cov_1861fsw4fx().s[0]++, yup.string().email('Invalid email format').required('Email is required'));
var passwordSchema = exports.passwordSchema = (cov_1861fsw4fx().s[1]++, yup.string().min(8, 'Password must be at least 8 characters').matches(/[A-Z]/, 'Password must contain at least one uppercase letter').matches(/[a-z]/, 'Password must contain at least one lowercase letter').matches(/\d/, 'Password must contain at least one number').required('Password is required'));
var loginSchema = exports.loginSchema = (cov_1861fsw4fx().s[2]++, yup.object({
  email: emailSchema,
  password: yup.string().required('Password is required')
}));
var registerSchema = exports.registerSchema = (cov_1861fsw4fx().s[3]++, yup.object({
  email: emailSchema,
  password: passwordSchema,
  confirmPassword: yup.string().oneOf([yup.ref('password')], 'Passwords must match').required('Confirm password is required')
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ5dXAiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImNvdl8xODYxZnN3NGZ4IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwiYnJhbmNoTWFwIiwicyIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiZW1haWxTY2hlbWEiLCJleHBvcnRzIiwic3RyaW5nIiwiZW1haWwiLCJyZXF1aXJlZCIsInBhc3N3b3JkU2NoZW1hIiwibWluIiwibWF0Y2hlcyIsImxvZ2luU2NoZW1hIiwib2JqZWN0IiwicGFzc3dvcmQiLCJyZWdpc3RlclNjaGVtYSIsImNvbmZpcm1QYXNzd29yZCIsIm9uZU9mIiwicmVmIl0sInNvdXJjZXMiOlsiZm9ybVZhbGlkYXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgeXVwIGZyb20gJ3l1cCc7XG5cbi8vIENvbW1vbiB2YWxpZGF0aW9uIHNjaGVtYXNcbmV4cG9ydCBjb25zdCBlbWFpbFNjaGVtYSA9IHl1cFxuICAuc3RyaW5nKClcbiAgLmVtYWlsKCdJbnZhbGlkIGVtYWlsIGZvcm1hdCcpXG4gIC5yZXF1aXJlZCgnRW1haWwgaXMgcmVxdWlyZWQnKTtcblxuZXhwb3J0IGNvbnN0IHBhc3N3b3JkU2NoZW1hID0geXVwXG4gIC5zdHJpbmcoKVxuICAubWluKDgsICdQYXNzd29yZCBtdXN0IGJlIGF0IGxlYXN0IDggY2hhcmFjdGVycycpXG4gIC5tYXRjaGVzKC9bQS1aXS8sICdQYXNzd29yZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIHVwcGVyY2FzZSBsZXR0ZXInKVxuICAubWF0Y2hlcygvW2Etel0vLCAnUGFzc3dvcmQgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBsb3dlcmNhc2UgbGV0dGVyJylcbiAgLm1hdGNoZXMoL1xcZC8sICdQYXNzd29yZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIG51bWJlcicpXG4gIC5yZXF1aXJlZCgnUGFzc3dvcmQgaXMgcmVxdWlyZWQnKTtcblxuLy8gRXhhbXBsZSBsb2dpbiBmb3JtIHNjaGVtYVxuZXhwb3J0IGNvbnN0IGxvZ2luU2NoZW1hID0geXVwLm9iamVjdCh7XG4gIGVtYWlsOiBlbWFpbFNjaGVtYSxcbiAgcGFzc3dvcmQ6IHl1cC5zdHJpbmcoKS5yZXF1aXJlZCgnUGFzc3dvcmQgaXMgcmVxdWlyZWQnKSxcbn0pO1xuXG4vLyBFeGFtcGxlIHJlZ2lzdHJhdGlvbiBmb3JtIHNjaGVtYVxuZXhwb3J0IGNvbnN0IHJlZ2lzdGVyU2NoZW1hID0geXVwLm9iamVjdCh7XG4gIGVtYWlsOiBlbWFpbFNjaGVtYSxcbiAgcGFzc3dvcmQ6IHBhc3N3b3JkU2NoZW1hLFxuICBjb25maXJtUGFzc3dvcmQ6IHl1cFxuICAgIC5zdHJpbmcoKVxuICAgIC5vbmVPZihbeXVwLnJlZigncGFzc3dvcmQnKV0sICdQYXNzd29yZHMgbXVzdCBtYXRjaCcpXG4gICAgLnJlcXVpcmVkKCdDb25maXJtIHBhc3N3b3JkIGlzIHJlcXVpcmVkJyksXG59KTtcblxuZXhwb3J0IHR5cGUgTG9naW5Gb3JtRGF0YSA9IHl1cC5JbmZlclR5cGU8dHlwZW9mIGxvZ2luU2NoZW1hPjtcbmV4cG9ydCB0eXBlIFJlZ2lzdGVyRm9ybURhdGEgPSB5dXAuSW5mZXJUeXBlPHR5cGVvZiByZWdpc3RlclNjaGVtYT47XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFBQSxHQUFBLEdB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