{"version":3,"names":["_tokenStorage","require","_tokenUtils","_config","cov_2kjaxcbwbp","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","APIClient","_classCallCheck2","default","baseURL","AppConfig","apiUrl","defaultHeaders","Accept","_createClass2","key","value","_request","_asyncToGenerator2","endpoint","options","arguments","length","url","config","Object","assign","headers","timeout","apiTimeout","response","fetch","ok","errorData","json","catch","Error","message","status","statusText","error","console","request","_x","apply","_get","method","get","_x2","_x3","_post","body","JSON","stringify","post","_x4","_x5","_x6","_put","put","_x7","_x8","_x9","_delete2","delete","_x0","_x1","setAuthToken","token","Authorization","removeAuthToken","AuthenticationService","exports","refreshPromise","apiClient","initializeAuthState","_initializeAuthState","tokens","tokenStorage","getTokens","hasValidTokens","accessToken","_login","credentials","email","toLowerCase","trim","password","success","handleSuccessfulAuth","login","_x10","_register","data","confirmPassword","register","_x11","_logout","refreshToken","clearAuthState","logout","_loginWithGoogle","idToken","profile","loginWithGoogle","_x12","_loginWithLinkedIn","loginWithLinkedIn","_x13","_requestPasswordReset","requestPasswordReset","_x14","_updatePassword","newPassword","updatePassword","_x15","_refreshTokens","performTokenRefresh","result","refreshTokens","_performTokenRefresh","isRefreshTokenValid","_validateToken","valid","validateToken","_x16","_getCurrentUser","validation","validateTokens","shouldRefresh","isExpired","user","getCurrentUser","_updateProfile","updateProfile","_x17","_handleSuccessfulAuth","setTokens","_x18","_clearAuthState","removeTokens","_isAuthenticated","isAuthenticated","_getStoredTokens","getStoredTokens","authService"],"sources":["authService.ts"],"sourcesContent":["/**\r\n * Authentication Service\r\n *\r\n * Main authentication service that handles email/password auth, social logins,\r\n * token management, and integrates with secure token storage.\r\n */\r\n\r\nimport {\r\n  AuthService,\r\n  LoginCredentials,\r\n  RegisterData,\r\n  AuthResponse,\r\n  RefreshTokenResponse,\r\n  SocialLoginData,\r\n  User,\r\n  JWTTokens,\r\n  PasswordResetData,\r\n  PasswordUpdateData,\r\n} from '../types/auth';\r\nimport { tokenStorage } from './tokenStorage';\r\nimport { validateTokens, isRefreshTokenValid } from '../utils/tokenUtils';\r\nimport { AppConfig } from '../utils/config';\r\n\r\n/**\r\n * HTTP Client for API requests\r\n */\r\nclass APIClient {\r\n  private baseURL: string;\r\n  private defaultHeaders: Record<string, string>;\r\n\r\n  constructor() {\r\n    this.baseURL = AppConfig.apiUrl;\r\n    this.defaultHeaders = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json',\r\n    };\r\n  }\r\n\r\n  private async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {},\r\n  ): Promise<T> {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n\r\n    const config: RequestInit = {\r\n      ...options,\r\n      headers: {\r\n        ...this.defaultHeaders,\r\n        ...options.headers,\r\n      },\r\n      timeout: AppConfig.apiTimeout,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new Error(\r\n          errorData.message ||\r\n            `HTTP ${response.status}: ${response.statusText}`,\r\n        );\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`API request failed: ${endpoint}`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async get<T>(endpoint: string, headers?: Record<string, string>): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'GET', headers });\r\n  }\r\n\r\n  async post<T>(\r\n    endpoint: string,\r\n    body?: any,\r\n    headers?: Record<string, string>,\r\n  ): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: body ? JSON.stringify(body) : undefined,\r\n      headers,\r\n    });\r\n  }\r\n\r\n  async put<T>(\r\n    endpoint: string,\r\n    body?: any,\r\n    headers?: Record<string, string>,\r\n  ): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      body: body ? JSON.stringify(body) : undefined,\r\n      headers,\r\n    });\r\n  }\r\n\r\n  async delete<T>(\r\n    endpoint: string,\r\n    headers?: Record<string, string>,\r\n  ): Promise<T> {\r\n    return this.request<T>(endpoint, { method: 'DELETE', headers });\r\n  }\r\n\r\n  setAuthToken(token: string): void {\r\n    this.defaultHeaders.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  removeAuthToken(): void {\r\n    delete this.defaultHeaders.Authorization;\r\n  }\r\n}\r\n\r\n/**\r\n * Main Authentication Service Implementation\r\n */\r\nexport class AuthenticationService implements AuthService {\r\n  private apiClient: APIClient;\r\n  private refreshPromise: Promise<RefreshTokenResponse> | null = null;\r\n\r\n  constructor() {\r\n    this.apiClient = new APIClient();\r\n    this.initializeAuthState();\r\n  }\r\n\r\n  /**\r\n   * Initialize authentication state from stored tokens\r\n   */\r\n  private async initializeAuthState(): Promise<void> {\r\n    try {\r\n      const tokens = await tokenStorage.getTokens();\r\n      if (tokens && (await tokenStorage.hasValidTokens())) {\r\n        this.apiClient.setAuthToken(tokens.accessToken);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to initialize auth state:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login with email and password\r\n   */\r\n  async login(credentials: LoginCredentials): Promise<AuthResponse> {\r\n    try {\r\n      const response = await this.apiClient.post<AuthResponse>('/auth/login', {\r\n        email: credentials.email.toLowerCase().trim(),\r\n        password: credentials.password,\r\n      });\r\n\r\n      if (response.success && response.tokens) {\r\n        await this.handleSuccessfulAuth(response.tokens);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      throw new Error(error instanceof Error ? error.message : 'Login failed');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Register new user with email and password\r\n   */\r\n  async register(data: RegisterData): Promise<AuthResponse> {\r\n    try {\r\n      // Validate password confirmation\r\n      if (data.password !== data.confirmPassword) {\r\n        throw new Error('Passwords do not match');\r\n      }\r\n\r\n      const response = await this.apiClient.post<AuthResponse>(\r\n        '/auth/register',\r\n        {\r\n          email: data.email.toLowerCase().trim(),\r\n          password: data.password,\r\n          name: data.name.trim(),\r\n        },\r\n      );\r\n\r\n      if (response.success && response.tokens) {\r\n        await this.handleSuccessfulAuth(response.tokens);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Registration failed',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Logout user and clear tokens\r\n   */\r\n  async logout(): Promise<void> {\r\n    try {\r\n      // Call logout endpoint to invalidate server-side session\r\n      const tokens = await tokenStorage.getTokens();\r\n      if (tokens) {\r\n        await this.apiClient.post('/auth/logout', {\r\n          refreshToken: tokens.refreshToken,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Logout API call failed:', error);\r\n      // Continue with local logout even if server call fails\r\n    } finally {\r\n      await this.clearAuthState();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login with Google OAuth\r\n   */\r\n  async loginWithGoogle(data: SocialLoginData): Promise<AuthResponse> {\r\n    try {\r\n      const response = await this.apiClient.post<AuthResponse>(\r\n        '/auth/oauth/google',\r\n        {\r\n          accessToken: data.accessToken,\r\n          idToken: data.idToken,\r\n          profile: data.profile,\r\n        },\r\n      );\r\n\r\n      if (response.success && response.tokens) {\r\n        await this.handleSuccessfulAuth(response.tokens);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Google login failed:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Google login failed',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Login with LinkedIn OAuth\r\n   */\r\n  async loginWithLinkedIn(data: SocialLoginData): Promise<AuthResponse> {\r\n    try {\r\n      const response = await this.apiClient.post<AuthResponse>(\r\n        '/auth/oauth/linkedin',\r\n        {\r\n          accessToken: data.accessToken,\r\n          profile: data.profile,\r\n        },\r\n      );\r\n\r\n      if (response.success && response.tokens) {\r\n        await this.handleSuccessfulAuth(response.tokens);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('LinkedIn login failed:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'LinkedIn login failed',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request password reset email\r\n   */\r\n  async requestPasswordReset(\r\n    data: PasswordResetData,\r\n  ): Promise<{ success: boolean; message: string }> {\r\n    try {\r\n      return await this.apiClient.post('/auth/password/reset-request', {\r\n        email: data.email.toLowerCase().trim(),\r\n      });\r\n    } catch (error) {\r\n      console.error('Password reset request failed:', error);\r\n      throw new Error(\r\n        error instanceof Error\r\n          ? error.message\r\n          : 'Password reset request failed',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update password with reset token\r\n   */\r\n  async updatePassword(\r\n    data: PasswordUpdateData,\r\n  ): Promise<{ success: boolean; message: string }> {\r\n    try {\r\n      if (data.newPassword !== data.confirmPassword) {\r\n        throw new Error('Passwords do not match');\r\n      }\r\n\r\n      return await this.apiClient.post('/auth/password/reset-confirm', {\r\n        token: data.token,\r\n        newPassword: data.newPassword,\r\n      });\r\n    } catch (error) {\r\n      console.error('Password update failed:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Password update failed',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Refresh JWT tokens\r\n   */\r\n  async refreshTokens(): Promise<RefreshTokenResponse> {\r\n    // Prevent multiple simultaneous refresh attempts\r\n    if (this.refreshPromise) {\r\n      return this.refreshPromise;\r\n    }\r\n\r\n    this.refreshPromise = this.performTokenRefresh();\r\n\r\n    try {\r\n      const result = await this.refreshPromise;\r\n      return result;\r\n    } finally {\r\n      this.refreshPromise = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform actual token refresh\r\n   */\r\n  private async performTokenRefresh(): Promise<RefreshTokenResponse> {\r\n    try {\r\n      const tokens = await tokenStorage.getTokens();\r\n\r\n      if (!tokens || !isRefreshTokenValid(tokens)) {\r\n        throw new Error('No valid refresh token available');\r\n      }\r\n\r\n      const response = await this.apiClient.post<RefreshTokenResponse>(\r\n        '/auth/refresh',\r\n        {\r\n          refreshToken: tokens.refreshToken,\r\n        },\r\n      );\r\n\r\n      if (response.success && response.tokens) {\r\n        await this.handleSuccessfulAuth(response.tokens);\r\n      }\r\n\r\n      return response;\r\n    } catch (error) {\r\n      console.error('Token refresh failed:', error);\r\n      // Clear invalid tokens\r\n      await this.clearAuthState();\r\n      throw new Error('Session expired. Please login again.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate token with server\r\n   */\r\n  async validateToken(token: string): Promise<boolean> {\r\n    try {\r\n      const response = await this.apiClient.post<{ valid: boolean }>(\r\n        '/auth/validate',\r\n        { token },\r\n      );\r\n      return response.valid;\r\n    } catch (error) {\r\n      console.error('Token validation failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current authenticated user\r\n   */\r\n  async getCurrentUser(): Promise<User | null> {\r\n    try {\r\n      const tokens = await tokenStorage.getTokens();\r\n      if (!tokens) {\r\n        return null;\r\n      }\r\n\r\n      // Ensure token is valid and refresh if needed\r\n      const validation = validateTokens(tokens);\r\n      if (validation.shouldRefresh && isRefreshTokenValid(tokens)) {\r\n        await this.refreshTokens();\r\n      } else if (validation.isExpired) {\r\n        return null;\r\n      }\r\n\r\n      const response = await this.apiClient.get<{ user: User }>('/auth/me');\r\n      return response.user;\r\n    } catch (error) {\r\n      console.error('Get current user failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update user profile\r\n   */\r\n  async updateProfile(data: Partial<User>): Promise<User> {\r\n    try {\r\n      const response = await this.apiClient.put<{ user: User }>(\r\n        '/auth/profile',\r\n        data,\r\n      );\r\n      return response.user;\r\n    } catch (error) {\r\n      console.error('Profile update failed:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'Profile update failed',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle successful authentication\r\n   */\r\n  private async handleSuccessfulAuth(tokens: JWTTokens): Promise<void> {\r\n    await tokenStorage.setTokens(tokens);\r\n    this.apiClient.setAuthToken(tokens.accessToken);\r\n  }\r\n\r\n  /**\r\n   * Clear authentication state\r\n   */\r\n  private async clearAuthState(): Promise<void> {\r\n    await tokenStorage.removeTokens();\r\n    this.apiClient.removeAuthToken();\r\n  }\r\n\r\n  /**\r\n   * Check if user is authenticated\r\n   */\r\n  async isAuthenticated(): Promise<boolean> {\r\n    return await tokenStorage.hasValidTokens();\r\n  }\r\n\r\n  /**\r\n   * Get stored tokens\r\n   */\r\n  async getStoredTokens(): Promise<JWTTokens | null> {\r\n    return await tokenStorage.getTokens();\r\n  }\r\n}\r\n\r\n// Default instance\r\nexport const authService = new AuthenticationService();\r\n"],"mappings":"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","ignoreList":[]}