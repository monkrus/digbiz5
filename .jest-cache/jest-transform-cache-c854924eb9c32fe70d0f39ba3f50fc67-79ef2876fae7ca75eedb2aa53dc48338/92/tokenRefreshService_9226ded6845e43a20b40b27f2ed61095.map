{"version":3,"names":["_authService","require","_tokenStorage","_tokenUtils","cov_rd7koluhm","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","TokenRefreshService","exports","_classCallCheck2","default","refreshTimer","expirationTimer","isRefreshing","retryCount","listeners","config","enabled","maxRetries","retryDelayMs","minRefreshInterval","maxRefreshInterval","_createClass2","key","value","configure","Object","assign","console","log","_start","_asyncToGenerator2","tokens","tokenStorage","getTokens","scheduleRefresh","error","apply","arguments","stop","clearTimers","_this","validation","validateTokens","isExpired","performRefresh","refreshTime","getOptimalRefreshTime","Math","max","min","setTimeout","expiresIn","emitEvent","refreshIn","_performRefresh","response","authService","refreshTokens","success","Error","handleRefreshError","_this2","message","final","_forceRefresh","forceRefresh","_checkAndRefresh","shouldRefresh","checkAndRefresh","addEventListener","listener","push","removeEventListener","index","indexOf","splice","clearEventListeners","event","data","forEach","clearTimeout","getStatus","isActive","tokenRefreshService","startTokenRefresh","stopTokenRefresh","forceTokenRefresh","checkAndRefreshToken"],"sources":["tokenRefreshService.ts"],"sourcesContent":["/**\r\n * Automatic Token Refresh Service\r\n *\r\n * Handles automatic JWT token refresh logic with configurable timing,\r\n * retry mechanisms, and background refresh capabilities.\r\n */\r\n\r\nimport { JWTTokens } from '../types/auth';\r\nimport { authService } from './authService';\r\nimport { tokenStorage } from './tokenStorage';\r\nimport {\r\n  validateTokens,\r\n  getOptimalRefreshTime,\r\n} from '../utils/tokenUtils';\r\n\r\n// Token refresh events\r\nexport type TokenRefreshEvent =\r\n  | 'refresh_started'\r\n  | 'refresh_success'\r\n  | 'refresh_failed'\r\n  | 'token_expired'\r\n  | 'refresh_scheduled'\r\n  | 'refresh_cancelled';\r\n\r\n// Token refresh listener\r\nexport type TokenRefreshListener = (\r\n  event: TokenRefreshEvent,\r\n  data?: any,\r\n) => void;\r\n\r\n// Refresh configuration\r\ninterface RefreshConfig {\r\n  enabled: boolean;\r\n  maxRetries: number;\r\n  retryDelayMs: number;\r\n  minRefreshInterval: number; // seconds\r\n  maxRefreshInterval: number; // seconds\r\n}\r\n\r\n/**\r\n * Automatic Token Refresh Service\r\n */\r\nexport class TokenRefreshService {\r\n  private refreshTimer: NodeJS.Timeout | null = null;\r\n  private expirationTimer: NodeJS.Timeout | null = null;\r\n  private isRefreshing = false;\r\n  private retryCount = 0;\r\n  private listeners: TokenRefreshListener[] = [];\r\n  private config: RefreshConfig = {\r\n    enabled: true,\r\n    maxRetries: 3,\r\n    retryDelayMs: 5000, // 5 seconds\r\n    minRefreshInterval: 60, // 1 minute\r\n    maxRefreshInterval: 3600, // 1 hour\r\n  };\r\n\r\n  /**\r\n   * Configure token refresh behavior\r\n   */\r\n  configure(config: Partial<RefreshConfig>): void {\r\n    this.config = { ...this.config, ...config };\r\n    console.log('Token refresh service configured:', this.config);\r\n  }\r\n\r\n  /**\r\n   * Start automatic token refresh monitoring\r\n   */\r\n  async start(): Promise<void> {\r\n    if (!this.config.enabled) {\r\n      console.log('Token refresh service disabled');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const tokens = await tokenStorage.getTokens();\r\n\r\n      if (!tokens) {\r\n        console.log('No tokens found, refresh service not started');\r\n        return;\r\n      }\r\n\r\n      this.scheduleRefresh(tokens);\r\n      console.log('Token refresh service started');\r\n    } catch (error) {\r\n      console.error('Failed to start token refresh service:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop automatic token refresh\r\n   */\r\n  stop(): void {\r\n    this.clearTimers();\r\n    this.retryCount = 0;\r\n    this.isRefreshing = false;\r\n    console.log('Token refresh service stopped');\r\n  }\r\n\r\n  /**\r\n   * Schedule token refresh\r\n   */\r\n  private scheduleRefresh(tokens: JWTTokens): void {\r\n    this.clearTimers();\r\n\r\n    const validation = validateTokens(tokens);\r\n\r\n    if (validation.isExpired) {\r\n      console.log('Token already expired, triggering immediate refresh');\r\n      this.performRefresh();\r\n      return;\r\n    }\r\n\r\n    // Calculate refresh time\r\n    let refreshTime = getOptimalRefreshTime(tokens);\r\n\r\n    // Apply min/max constraints\r\n    refreshTime = Math.max(this.config.minRefreshInterval, refreshTime);\r\n    refreshTime = Math.min(this.config.maxRefreshInterval, refreshTime);\r\n\r\n    console.log(`Scheduling token refresh in ${refreshTime} seconds`);\r\n\r\n    // Schedule refresh\r\n    this.refreshTimer = setTimeout(() => {\r\n      this.performRefresh();\r\n    }, refreshTime * 1000);\r\n\r\n    // Schedule expiration warning\r\n    if (validation.expiresIn && validation.expiresIn > 0) {\r\n      this.expirationTimer = setTimeout(() => {\r\n        this.emitEvent('token_expired');\r\n      }, validation.expiresIn * 1000);\r\n    }\r\n\r\n    this.emitEvent('refresh_scheduled', { refreshIn: refreshTime });\r\n  }\r\n\r\n  /**\r\n   * Perform token refresh\r\n   */\r\n  private async performRefresh(): Promise<void> {\r\n    if (this.isRefreshing) {\r\n      console.log('Token refresh already in progress');\r\n      return;\r\n    }\r\n\r\n    this.isRefreshing = true;\r\n    this.emitEvent('refresh_started');\r\n\r\n    try {\r\n      const response = await authService.refreshTokens();\r\n\r\n      if (response.success && response.tokens) {\r\n        this.retryCount = 0;\r\n        this.scheduleRefresh(response.tokens);\r\n        this.emitEvent('refresh_success', response.tokens);\r\n        console.log('Token refresh successful');\r\n      } else {\r\n        throw new Error('Refresh response was not successful');\r\n      }\r\n    } catch (error) {\r\n      console.error('Token refresh failed:', error);\r\n      this.handleRefreshError(error);\r\n    } finally {\r\n      this.isRefreshing = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle refresh errors with retry logic\r\n   */\r\n  private handleRefreshError(error: any): void {\r\n    this.retryCount++;\r\n\r\n    this.emitEvent('refresh_failed', {\r\n      error: error.message,\r\n      retryCount: this.retryCount,\r\n    });\r\n\r\n    if (this.retryCount < this.config.maxRetries) {\r\n      console.log(\r\n        `Retrying token refresh in ${this.config.retryDelayMs}ms (attempt ${\r\n          this.retryCount + 1\r\n        }/${this.config.maxRetries})`,\r\n      );\r\n\r\n      setTimeout(() => {\r\n        this.performRefresh();\r\n      }, this.config.retryDelayMs);\r\n    } else {\r\n      console.error('Max refresh retries exceeded, stopping refresh service');\r\n      this.stop();\r\n\r\n      // Emit final failure event\r\n      this.emitEvent('refresh_failed', {\r\n        error: 'Max retries exceeded',\r\n        retryCount: this.retryCount,\r\n        final: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Force immediate token refresh\r\n   */\r\n  async forceRefresh(): Promise<boolean> {\r\n    try {\r\n      this.stop(); // Stop any scheduled refreshes\r\n      await this.performRefresh();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Forced refresh failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if refresh is needed and optionally perform it\r\n   */\r\n  async checkAndRefresh(): Promise<boolean> {\r\n    try {\r\n      const tokens = await tokenStorage.getTokens();\r\n\r\n      if (!tokens) {\r\n        return false;\r\n      }\r\n\r\n      const validation = validateTokens(tokens);\r\n\r\n      if (validation.shouldRefresh || validation.isExpired) {\r\n        console.log('Token refresh needed, performing refresh...');\r\n        await this.performRefresh();\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    } catch (error) {\r\n      console.error('Check and refresh failed:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add event listener\r\n   */\r\n  addEventListener(listener: TokenRefreshListener): void {\r\n    this.listeners.push(listener);\r\n  }\r\n\r\n  /**\r\n   * Remove event listener\r\n   */\r\n  removeEventListener(listener: TokenRefreshListener): void {\r\n    const index = this.listeners.indexOf(listener);\r\n    if (index > -1) {\r\n      this.listeners.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear all event listeners\r\n   */\r\n  clearEventListeners(): void {\r\n    this.listeners = [];\r\n  }\r\n\r\n  /**\r\n   * Emit event to listeners\r\n   */\r\n  private emitEvent(event: TokenRefreshEvent, data?: any): void {\r\n    this.listeners.forEach(listener => {\r\n      try {\r\n        listener(event, data);\r\n      } catch (error) {\r\n        console.error('Token refresh event listener error:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear all timers\r\n   */\r\n  private clearTimers(): void {\r\n    if (this.refreshTimer) {\r\n      clearTimeout(this.refreshTimer);\r\n      this.refreshTimer = null;\r\n    }\r\n\r\n    if (this.expirationTimer) {\r\n      clearTimeout(this.expirationTimer);\r\n      this.expirationTimer = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get service status\r\n   */\r\n  getStatus(): {\r\n    isActive: boolean;\r\n    isRefreshing: boolean;\r\n    retryCount: number;\r\n    config: RefreshConfig;\r\n  } {\r\n    return {\r\n      isActive: this.refreshTimer !== null || this.expirationTimer !== null,\r\n      isRefreshing: this.isRefreshing,\r\n      retryCount: this.retryCount,\r\n      config: { ...this.config },\r\n    };\r\n  }\r\n}\r\n\r\n// Default instance\r\nexport const tokenRefreshService = new TokenRefreshService();\r\n\r\n// Convenience functions\r\nexport const startTokenRefresh = () => tokenRefreshService.start();\r\nexport const stopTokenRefresh = () => tokenRefreshService.stop();\r\nexport const forceTokenRefresh = () => tokenRefreshService.forceRefresh();\r\nexport const checkAndRefreshToken = () => tokenRefreshService.checkAndRefresh();\r\n"],"mappings":"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","ignoreList":[]}