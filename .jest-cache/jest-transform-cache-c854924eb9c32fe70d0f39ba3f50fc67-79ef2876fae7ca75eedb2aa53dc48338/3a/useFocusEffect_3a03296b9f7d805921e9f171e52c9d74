fd2476df6868ea508b9f61bec3493017
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFocusEffect = useFocusEffect;
var React = _interopRequireWildcard(require("react"));
var _useNavigation = require("./useNavigation.js");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function useFocusEffect(effect) {
  var navigation = (0, _useNavigation.useNavigation)();
  if (arguments[1] !== undefined) {
    var message = "You passed a second argument to 'useFocusEffect', but it only accepts one argument. " + "If you want to pass a dependency array, you can use 'React.useCallback':\n\n" + 'useFocusEffect(\n' + '  React.useCallback(() => {\n' + '    // Your code here\n' + '  }, [depA, depB])\n' + ');\n\n' + 'See usage guide: https://reactnavigation.org/docs/use-focus-effect';
    console.error(message);
  }
  React.useEffect(function () {
    var isFocused = false;
    var cleanup;
    var callback = function callback() {
      var destroy = effect();
      if (destroy === undefined || typeof destroy === 'function') {
        return destroy;
      }
      if (process.env.NODE_ENV !== 'production') {
        var _message = 'An effect function must not return anything besides a function, which is used for clean-up.';
        if (destroy === null) {
          _message += " You returned 'null'. If your effect does not require clean-up, return 'undefined' (or nothing).";
        } else if (typeof destroy.then === 'function') {
          _message += "\n\nIt looks like you wrote 'useFocusEffect(async () => ...)' or returned a Promise. " + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useFocusEffect(\n' + '  React.useCallback(() => {\n' + '    async function fetchData() {\n' + '      // You can await here\n' + '      const response = await MyAPI.getData(someId);\n' + '      // ...\n' + '    }\n\n' + '    fetchData();\n' + '  }, [someId])\n' + ');\n\n' + 'See usage guide: https://reactnavigation.org/docs/use-focus-effect';
        } else {
          _message += ` You returned '${JSON.stringify(destroy)}'.`;
        }
        console.error(_message);
      }
    };
    if (navigation.isFocused()) {
      cleanup = callback();
      isFocused = true;
    }
    var unsubscribeFocus = navigation.addListener('focus', function () {
      if (isFocused) {
        return;
      }
      if (cleanup !== undefined) {
        cleanup();
      }
      cleanup = callback();
      isFocused = true;
    });
    var unsubscribeBlur = navigation.addListener('blur', function () {
      if (cleanup !== undefined) {
        cleanup();
      }
      cleanup = undefined;
      isFocused = false;
    });
    return function () {
      if (cleanup !== undefined) {
        cleanup();
      }
      unsubscribeFocus();
      unsubscribeBlur();
    };
  }, [effect, navigation]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl91c2VOYXZpZ2F0aW9uIiwiZSIsInQiLCJXZWFrTWFwIiwiciIsIm4iLCJfX2VzTW9kdWxlIiwibyIsImkiLCJmIiwiX19wcm90b19fIiwiZGVmYXVsdCIsImhhcyIsImdldCIsInNldCIsIl90IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1c2VGb2N1c0VmZmVjdCIsImVmZmVjdCIsIm5hdmlnYXRpb24iLCJ1c2VOYXZpZ2F0aW9uIiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwibWVzc2FnZSIsImNvbnNvbGUiLCJlcnJvciIsInVzZUVmZmVjdCIsImlzRm9jdXNlZCIsImNsZWFudXAiLCJjYWxsYmFjayIsImRlc3Ryb3kiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJ0aGVuIiwiSlNPTiIsInN0cmluZ2lmeSIsInVuc3Vic2NyaWJlRm9jdXMiLCJhZGRMaXN0ZW5lciIsInVuc3Vic2NyaWJlQmx1ciJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VGb2N1c0VmZmVjdC50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUVBLElBQUFDLGNBQUEsR0FBQUQsT0FBQTtBQUErQyxTQUFBRCx3QkFBQUcsQ0FBQSxFQUFBQyxDQUFBLDZCQUFBQyxPQUFBLE1BQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUwsdUJBQUEsWUFBQUEsd0JBQUFHLENBQUEsRUFBQUMsQ0FBQSxTQUFBQSxDQUFBLElBQUFELENBQUEsSUFBQUEsQ0FBQSxDQUFBSyxVQUFBLFNBQUFMLENBQUEsTUFBQU0sQ0FBQSxFQUFBQyxDQUFBLEVBQUFDLENBQUEsS0FBQUMs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