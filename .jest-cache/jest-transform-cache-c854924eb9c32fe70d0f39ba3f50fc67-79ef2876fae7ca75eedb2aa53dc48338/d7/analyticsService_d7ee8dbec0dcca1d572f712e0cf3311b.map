{"version":3,"names":["AnalyticsService","_classCallCheck2","default","events","cov_m844sbkui","s","isEnabled","_createClass2","key","value","trackEvent","eventName","properties","f","b","event","name","timestamp","Date","toISOString","push","__DEV__","console","log","setEnabled","enabled","getEvents","_toConsumableArray2","clearEvents","analyticsService","exports"],"sources":["analyticsService.ts"],"sourcesContent":["/**\n * Analytics Service\n *\n * Handles event tracking and analytics for the application\n */\n\nexport interface AnalyticsEvent {\n  name: string;\n  properties?: Record<string, any>;\n  timestamp?: string;\n}\n\nclass AnalyticsService {\n  private events: AnalyticsEvent[] = [];\n  private isEnabled: boolean = true;\n\n  /**\n   * Track an analytics event\n   */\n  trackEvent(eventName: string, properties?: Record<string, any>): void {\n    if (!this.isEnabled) return;\n\n    const event: AnalyticsEvent = {\n      name: eventName,\n      properties,\n      timestamp: new Date().toISOString(),\n    };\n\n    this.events.push(event);\n\n    // In a real implementation, this would send to analytics service\n    if (__DEV__) {\n      console.log('[Analytics]', eventName, properties);\n    }\n  }\n\n  /**\n   * Enable or disable analytics tracking\n   */\n  setEnabled(enabled: boolean): void {\n    this.isEnabled = enabled;\n  }\n\n  /**\n   * Get tracked events (for testing)\n   */\n  getEvents(): AnalyticsEvent[] {\n    return [...this.events];\n  }\n\n  /**\n   * Clear tracked events\n   */\n  clearEvents(): void {\n    this.events = [];\n  }\n}\n\nexport const analyticsService = new AnalyticsService();\n\n// Convenience function for tracking events\nexport const trackEvent = (\n  eventName: string,\n  properties?: Record<string, any>,\n) => {\n  analyticsService.trackEvent(eventName, properties);\n};\n"],"mappings":"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","ignoreList":[]}