bf2b87c00ebe91c222b71e220aced183
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setText = exports.reset = exports.increment = exports.default = exports.decrement = void 0;
var _toolkit = require("@reduxjs/toolkit");
function cov_fymvox755() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\store\\slices\\exampleSlice.ts";
  var hash = "7ce45b9a3b79c43143becc83f466c2023623c889";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\store\\slices\\exampleSlice.ts",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 35
        },
        end: {
          line: 11,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 21
        },
        end: {
          line: 28,
          column: 2
        }
      },
      "2": {
        start: {
          line: 18,
          column: 6
        },
        end: {
          line: 18,
          column: 23
        }
      },
      "3": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 21,
          column: 23
        }
      },
      "4": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 34
        }
      },
      "5": {
        start: {
          line: 26,
          column: 17
        },
        end: {
          line: 26,
          column: 29
        }
      },
      "6": {
        start: {
          line: 30,
          column: 56
        },
        end: {
          line: 30,
          column: 76
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 17,
            column: 15
          },
          end: {
            line: 17,
            column: 16
          }
        },
        loc: {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 19,
            column: 5
          }
        },
        line: 17
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 20,
            column: 15
          },
          end: {
            line: 20,
            column: 16
          }
        },
        loc: {
          start: {
            line: 20,
            column: 24
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 23,
            column: 13
          },
          end: {
            line: 23,
            column: 14
          }
        },
        loc: {
          start: {
            line: 23,
            column: 55
          },
          end: {
            line: 25,
            column: 5
          }
        },
        line: 23
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 26,
            column: 11
          },
          end: {
            line: 26,
            column: 12
          }
        },
        loc: {
          start: {
            line: 26,
            column: 17
          },
          end: {
            line: 26,
            column: 29
          }
        },
        line: 26
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7ce45b9a3b79c43143becc83f466c2023623c889"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_fymvox755 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_fymvox755();
var initialState = (cov_fymvox755().s[0]++, {
  value: 0,
  text: ''
});
var exampleSlice = (cov_fymvox755().s[1]++, (0, _toolkit.createSlice)({
  name: 'example',
  initialState: initialState,
  reducers: {
    increment: function increment(state) {
      cov_fymvox755().f[0]++;
      cov_fymvox755().s[2]++;
      state.value += 1;
    },
    decrement: function decrement(state) {
      cov_fymvox755().f[1]++;
      cov_fymvox755().s[3]++;
      state.value -= 1;
    },
    setText: function setText(state, action) {
      cov_fymvox755().f[2]++;
      cov_fymvox755().s[4]++;
      state.text = action.payload;
    },
    reset: function reset() {
      cov_fymvox755().f[3]++;
      cov_fymvox755().s[5]++;
      return initialState;
    }
  }
}));
var _ref = (cov_fymvox755().s[6]++, exampleSlice.actions),
  increment = exports.increment = _ref.increment,
  decrement = exports.decrement = _ref.decrement,
  setText = exports.setText = _ref.setText,
  reset = exports.reset = _ref.reset;
var _default = exports.default = exampleSlice.reducer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9vbGtpdCIsInJlcXVpcmUiLCJjb3ZfZnltdm94NzU1IiwicGF0aCIsImhhc2giLCJnbG9iYWwiLCJGdW5jdGlvbiIsImdjdiIsImNvdmVyYWdlRGF0YSIsInN0YXRlbWVudE1hcCIsInN0YXJ0IiwibGluZSIsImNvbHVtbiIsImVuZCIsImZuTWFwIiwibmFtZSIsImRlY2wiLCJsb2MiLCJicmFuY2hNYXAiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiaW5pdGlhbFN0YXRlIiwidmFsdWUiLCJ0ZXh0IiwiZXhhbXBsZVNsaWNlIiwiY3JlYXRlU2xpY2UiLCJyZWR1Y2VycyIsImluY3JlbWVudCIsInN0YXRlIiwiZGVjcmVtZW50Iiwic2V0VGV4dCIsImFjdGlvbiIsInBheWxvYWQiLCJyZXNldCIsIl9yZWYiLCJhY3Rpb25zIiwiZXhwb3J0cyIsIl9kZWZhdWx0IiwiZGVmYXVsdCIsInJlZHVjZXIiXSwic291cmNlcyI6WyJleGFtcGxlU2xpY2UudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlU2xpY2UsIFBheWxvYWRBY3Rpb24gfSBmcm9tICdAcmVkdXhqcy90b29sa2l0JztcblxuaW50ZXJmYWNlIEV4YW1wbGVTdGF0ZSB7XG4gIHZhbHVlOiBudW1iZXI7XG4gIHRleHQ6IHN0cmluZztcbn1cblxuY29uc3QgaW5pdGlhbFN0YXRlOiBFeGFtcGxlU3RhdGUgPSB7XG4gIHZhbHVlOiAwLFxuICB0ZXh0OiAnJyxcbn07XG5cbmNvbnN0IGV4YW1wbGVTbGljZSA9IGNyZWF0ZVNsaWNlKHtcbiAgbmFtZTogJ2V4YW1wbGUnLFxuICBpbml0aWFsU3RhdGUsXG4gIHJlZHVjZXJzOiB7XG4gICAgaW5jcmVtZW50OiBzdGF0ZSA9PiB7XG4gICAgICBzdGF0ZS52YWx1ZSArPSAxO1xuICAgIH0sXG4gICAgZGVjcmVtZW50OiBzdGF0ZSA9PiB7XG4gICAgICBzdGF0ZS52YWx1ZSAtPSAxO1xuICAgIH0sXG4gICAgc2V0VGV4dDogKHN0YXRlLCBhY3Rpb246IFBheWxvYWRBY3Rpb248c3RyaW5nPikgPT4ge1xuICAgICAgc3RhdGUudGV4dCA9IGFjdGlvbi5wYXlsb2FkO1xuICAgIH0sXG4gICAgcmVzZXQ6ICgpID0+IGluaXRpYWxTdGF0ZSxcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgeyBpbmNyZW1lbnQsIGRlY3JlbWVudCwgc2V0VGV4dCwgcmVzZXQgfSA9IGV4YW1wbGVTbGljZS5hY3Rpb25zO1xuZXhwb3J0IGRlZmF1bHQgZXhhbXBsZVNsaWNlLnJlZHVjZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxJQUFBQSxRQUFBLEdBQUFDLE9BQUE7QUFBOEQsU0FBQUMsY0FBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQUksSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFB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