e1c18b26477157e563f5f7e8edce8442
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tokenStorage = exports.createTokenStorage = exports.SecureTokenStorage = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _reactNativeMmkv = require("react-native-mmkv");
var _cryptoJs = _interopRequireDefault(require("crypto-js"));
var _tokenUtils = require("../utils/tokenUtils");
function cov_ohi7jwkbn() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\services\\tokenStorage.ts";
  var hash = "48dc093432fba23344a6c50e2f3adba7a7803c41";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\services\\tokenStorage.ts",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 21
        },
        end: {
          line: 20,
          column: 10
        }
      },
      "1": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 33,
          column: 7
        }
      },
      "2": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 36,
          column: 57
        }
      },
      "3": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "4": {
        start: {
          line: 40,
          column: 6
        },
        end: {
          line: 43,
          column: 9
        }
      },
      "5": {
        start: {
          line: 51,
          column: 14
        },
        end: {
          line: 51,
          column: 65
        }
      },
      "6": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "7": {
        start: {
          line: 55,
          column: 6
        },
        end: {
          line: 55,
          column: 62
        }
      },
      "8": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 57
        }
      },
      "9": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 15
        }
      },
      "10": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "11": {
        start: {
          line: 67,
          column: 6
        },
        end: {
          line: 67,
          column: 71
        }
      },
      "12": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 55
        }
      },
      "13": {
        start: {
          line: 70,
          column: 6
        },
        end: {
          line: 70,
          column: 54
        }
      },
      "14": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 90,
          column: 5
        }
      },
      "15": {
        start: {
          line: 79,
          column: 20
        },
        end: {
          line: 79,
          column: 75
        }
      },
      "16": {
        start: {
          line: 80,
          column: 24
        },
        end: {
          line: 80,
          column: 57
        }
      },
      "17": {
        start: {
          line: 82,
          column: 6
        },
        end: {
          line: 84,
          column: 7
        }
      },
      "18": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 83,
          column: 63
        }
      },
      "19": {
        start: {
          line: 86,
          column: 6
        },
        end: {
          line: 86,
          column: 23
        }
      },
      "20": {
        start: {
          line: 88,
          column: 6
        },
        end: {
          line: 88,
          column: 55
        }
      },
      "21": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 89,
          column: 54
        }
      },
      "22": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "23": {
        start: {
          line: 99,
          column: 35
        },
        end: {
          line: 99,
          column: 67
        }
      },
      "24": {
        start: {
          line: 100,
          column: 36
        },
        end: {
          line: 100,
          column: 69
        }
      },
      "25": {
        start: {
          line: 103,
          column: 6
        },
        end: {
          line: 103,
          column: 72
        }
      },
      "26": {
        start: {
          line: 104,
          column: 6
        },
        end: {
          line: 104,
          column: 74
        }
      },
      "27": {
        start: {
          line: 105,
          column: 6
        },
        end: {
          line: 105,
          column: 72
        }
      },
      "28": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 66
        }
      },
      "29": {
        start: {
          line: 108,
          column: 6
        },
        end: {
          line: 108,
          column: 44
        }
      },
      "30": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 54
        }
      },
      "31": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 63
        }
      },
      "32": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "33": {
        start: {
          line: 120,
          column: 35
        },
        end: {
          line: 122,
          column: 7
        }
      },
      "34": {
        start: {
          line: 123,
          column: 36
        },
        end: {
          line: 125,
          column: 7
        }
      },
      "35": {
        start: {
          line: 126,
          column: 24
        },
        end: {
          line: 126,
          column: 77
        }
      },
      "36": {
        start: {
          line: 127,
          column: 24
        },
        end: {
          line: 127,
          column: 71
        }
      },
      "37": {
        start: {
          line: 129,
          column: 6
        },
        end: {
          line: 136,
          column: 7
        }
      },
      "38": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 20
        }
      },
      "39": {
        start: {
          line: 139,
          column: 26
        },
        end: {
          line: 139,
          column: 60
        }
      },
      "40": {
        start: {
          line: 140,
          column: 27
        },
        end: {
          line: 140,
          column: 62
        }
      },
      "41": {
        start: {
          line: 142,
          column: 32
        },
        end: {
          line: 147,
          column: 7
        }
      },
      "42": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 20
        }
      },
      "43": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 57
        }
      },
      "44": {
        start: {
          line: 153,
          column: 6
        },
        end: {
          line: 153,
          column: 32
        }
      },
      "45": {
        start: {
          line: 154,
          column: 6
        },
        end: {
          line: 154,
          column: 18
        }
      },
      "46": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 172,
          column: 5
        }
      },
      "47": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 163,
          column: 53
        }
      },
      "48": {
        start: {
          line: 164,
          column: 6
        },
        end: {
          line: 164,
          column: 54
        }
      },
      "49": {
        start: {
          line: 165,
          column: 6
        },
        end: {
          line: 165,
          column: 57
        }
      },
      "50": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 166,
          column: 51
        }
      },
      "51": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 49
        }
      },
      "52": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 170,
          column: 55
        }
      },
      "53": {
        start: {
          line: 171,
          column: 6
        },
        end: {
          line: 171,
          column: 63
        }
      },
      "54": {
        start: {
          line: 179,
          column: 4
        },
        end: {
          line: 194,
          column: 5
        }
      },
      "55": {
        start: {
          line: 180,
          column: 21
        },
        end: {
          line: 180,
          column: 43
        }
      },
      "56": {
        start: {
          line: 182,
          column: 6
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "57": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 21
        }
      },
      "58": {
        start: {
          line: 186,
          column: 25
        },
        end: {
          line: 186,
          column: 47
        }
      },
      "59": {
        start: {
          line: 187,
          column: 32
        },
        end: {
          line: 187,
          column: 59
        }
      },
      "60": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 190,
          column: 79
        }
      },
      "61": {
        start: {
          line: 192,
          column: 6
        },
        end: {
          line: 192,
          column: 64
        }
      },
      "62": {
        start: {
          line: 193,
          column: 6
        },
        end: {
          line: 193,
          column: 19
        }
      },
      "63": {
        start: {
          line: 204,
          column: 4
        },
        end: {
          line: 221,
          column: 5
        }
      },
      "64": {
        start: {
          line: 205,
          column: 28
        },
        end: {
          line: 205,
          column: 50
        }
      },
      "65": {
        start: {
          line: 207,
          column: 6
        },
        end: {
          line: 209,
          column: 7
        }
      },
      "66": {
        start: {
          line: 208,
          column: 8
        },
        end: {
          line: 208,
          column: 56
        }
      },
      "67": {
        start: {
          line: 211,
          column: 39
        },
        end: {
          line: 215,
          column: 7
        }
      },
      "68": {
        start: {
          line: 217,
          column: 6
        },
        end: {
          line: 217,
          column: 42
        }
      },
      "69": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 61
        }
      },
      "70": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 55
        }
      },
      "71": {
        start: {
          line: 228,
          column: 4
        },
        end: {
          line: 234,
          column: 5
        }
      },
      "72": {
        start: {
          line: 229,
          column: 6
        },
        end: {
          line: 229,
          column: 30
        }
      },
      "73": {
        start: {
          line: 230,
          column: 6
        },
        end: {
          line: 230,
          column: 53
        }
      },
      "74": {
        start: {
          line: 232,
          column: 6
        },
        end: {
          line: 232,
          column: 56
        }
      },
      "75": {
        start: {
          line: 233,
          column: 6
        },
        end: {
          line: 233,
          column: 61
        }
      },
      "76": {
        start: {
          line: 246,
          column: 4
        },
        end: {
          line: 251,
          column: 6
        }
      },
      "77": {
        start: {
          line: 256,
          column: 28
        },
        end: {
          line: 256,
          column: 52
        }
      },
      "78": {
        start: {
          line: 259,
          column: 34
        },
        end: {
          line: 261,
          column: 1
        }
      },
      "79": {
        start: {
          line: 260,
          column: 2
        },
        end: {
          line: 260,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 29,
            column: 3
          }
        },
        loc: {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 29
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 45
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 65,
            column: 2
          },
          end: {
            line: 65,
            column: 3
          }
        },
        loc: {
          start: {
            line: 65,
            column: 40
          },
          end: {
            line: 72,
            column: 3
          }
        },
        line: 65
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 77,
            column: 2
          },
          end: {
            line: 77,
            column: 3
          }
        },
        loc: {
          start: {
            line: 77,
            column: 49
          },
          end: {
            line: 91,
            column: 3
          }
        },
        line: 77
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 96,
            column: 2
          },
          end: {
            line: 96,
            column: 3
          }
        },
        loc: {
          start: {
            line: 96,
            column: 52
          },
          end: {
            line: 113,
            column: 3
          }
        },
        line: 96
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 118,
            column: 2
          },
          end: {
            line: 118,
            column: 3
          }
        },
        loc: {
          start: {
            line: 118,
            column: 47
          },
          end: {
            line: 156,
            column: 3
          }
        },
        line: 118
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 161,
            column: 2
          },
          end: {
            line: 161,
            column: 3
          }
        },
        loc: {
          start: {
            line: 161,
            column: 38
          },
          end: {
            line: 173,
            column: 3
          }
        },
        line: 161
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 178,
            column: 2
          },
          end: {
            line: 178,
            column: 3
          }
        },
        loc: {
          start: {
            line: 178,
            column: 43
          },
          end: {
            line: 195,
            column: 3
          }
        },
        line: 178
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 200,
            column: 2
          },
          end: {
            line: 200,
            column: 3
          }
        },
        loc: {
          start: {
            line: 203,
            column: 19
          },
          end: {
            line: 222,
            column: 3
          }
        },
        line: 203
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        loc: {
          start: {
            line: 227,
            column: 34
          },
          end: {
            line: 235,
            column: 3
          }
        },
        line: 227
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 240,
            column: 2
          },
          end: {
            line: 240,
            column: 3
          }
        },
        loc: {
          start: {
            line: 245,
            column: 4
          },
          end: {
            line: 252,
            column: 3
          }
        },
        line: 245
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 259,
            column: 34
          },
          end: {
            line: 259,
            column: 35
          }
        },
        loc: {
          start: {
            line: 259,
            column: 72
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 259
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 14
          },
          end: {
            line: 29,
            column: 49
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 29,
            column: 35
          },
          end: {
            line: 29,
            column: 49
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "2": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 57,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "3": {
        loc: {
          start: {
            line: 82,
            column: 6
          },
          end: {
            line: 84,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 6
          },
          end: {
            line: 84,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "4": {
        loc: {
          start: {
            line: 129,
            column: 6
          },
          end: {
            line: 136,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 129,
            column: 6
          },
          end: {
            line: 136,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 129
      },
      "5": {
        loc: {
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 133,
            column: 18
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 130,
            column: 8
          },
          end: {
            line: 130,
            column: 29
          }
        }, {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 131,
            column: 30
          }
        }, {
          start: {
            line: 132,
            column: 8
          },
          end: {
            line: 132,
            column: 18
          }
        }, {
          start: {
            line: 133,
            column: 8
          },
          end: {
            line: 133,
            column: 18
          }
        }],
        line: 130
      },
      "6": {
        loc: {
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 184,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 182,
            column: 6
          },
          end: {
            line: 184,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 182
      },
      "7": {
        loc: {
          start: {
            line: 190,
            column: 13
          },
          end: {
            line: 190,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 190,
            column: 13
          },
          end: {
            line: 190,
            column: 31
          }
        }, {
          start: {
            line: 190,
            column: 36
          },
          end: {
            line: 190,
            column: 56
          }
        }, {
          start: {
            line: 190,
            column: 60
          },
          end: {
            line: 190,
            column: 77
          }
        }],
        line: 190
      },
      "8": {
        loc: {
          start: {
            line: 207,
            column: 6
          },
          end: {
            line: 209,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 6
          },
          end: {
            line: 209,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "48dc093432fba23344a6c50e2f3adba7a7803c41"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_ohi7jwkbn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_ohi7jwkbn();
var STORAGE_KEYS = (cov_ohi7jwkbn().s[0]++, {
  ACCESS_TOKEN: 'auth.accessToken',
  REFRESH_TOKEN: 'auth.refreshToken',
  TOKEN_EXPIRES_IN: 'auth.expiresIn',
  TOKEN_TYPE: 'auth.tokenType',
  ENCRYPTION_KEY: 'auth.encryptionKey'
});
var SecureTokenStorage = exports.SecureTokenStorage = function () {
  function SecureTokenStorage() {
    var instanceId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_ohi7jwkbn().b[0][0]++, 'auth-storage');
    (0, _classCallCheck2.default)(this, SecureTokenStorage);
    cov_ohi7jwkbn().f[0]++;
    cov_ohi7jwkbn().s[1]++;
    this.storage = new _reactNativeMmkv.MMKV({
      id: instanceId
    });
    cov_ohi7jwkbn().s[2]++;
    this.encryptionKey = this.getOrCreateEncryptionKey();
    cov_ohi7jwkbn().s[3]++;
    if (this.encryptionKey) {
      cov_ohi7jwkbn().b[1][0]++;
      cov_ohi7jwkbn().s[4]++;
      this.storage = new _reactNativeMmkv.MMKV({
        id: instanceId,
        encryptionKey: this.encryptionKey
      });
    } else {
      cov_ohi7jwkbn().b[1][1]++;
    }
  }
  return (0, _createClass2.default)(SecureTokenStorage, [{
    key: "getOrCreateEncryptionKey",
    value: function getOrCreateEncryptionKey() {
      cov_ohi7jwkbn().f[1]++;
      var key = (cov_ohi7jwkbn().s[5]++, this.storage.getString(STORAGE_KEYS.ENCRYPTION_KEY));
      cov_ohi7jwkbn().s[6]++;
      if (!key) {
        cov_ohi7jwkbn().b[2][0]++;
        cov_ohi7jwkbn().s[7]++;
        key = _cryptoJs.default.lib.WordArray.random(256 / 8).toString();
        cov_ohi7jwkbn().s[8]++;
        this.storage.set(STORAGE_KEYS.ENCRYPTION_KEY, key);
      } else {
        cov_ohi7jwkbn().b[2][1]++;
      }
      cov_ohi7jwkbn().s[9]++;
      return key;
    }
  }, {
    key: "encrypt",
    value: function encrypt(data) {
      cov_ohi7jwkbn().f[2]++;
      cov_ohi7jwkbn().s[10]++;
      try {
        cov_ohi7jwkbn().s[11]++;
        return _cryptoJs.default.AES.encrypt(data, this.encryptionKey).toString();
      } catch (error) {
        cov_ohi7jwkbn().s[12]++;
        console.error('Token encryption failed:', error);
        cov_ohi7jwkbn().s[13]++;
        throw new Error('Failed to encrypt token data');
      }
    }
  }, {
    key: "decrypt",
    value: function decrypt(encryptedData) {
      cov_ohi7jwkbn().f[3]++;
      cov_ohi7jwkbn().s[14]++;
      try {
        var bytes = (cov_ohi7jwkbn().s[15]++, _cryptoJs.default.AES.decrypt(encryptedData, this.encryptionKey));
        var decrypted = (cov_ohi7jwkbn().s[16]++, bytes.toString(_cryptoJs.default.enc.Utf8));
        cov_ohi7jwkbn().s[17]++;
        if (!decrypted) {
          cov_ohi7jwkbn().b[3][0]++;
          cov_ohi7jwkbn().s[18]++;
          throw new Error('Decryption resulted in empty string');
        } else {
          cov_ohi7jwkbn().b[3][1]++;
        }
        cov_ohi7jwkbn().s[19]++;
        return decrypted;
      } catch (error) {
        cov_ohi7jwkbn().s[20]++;
        console.error('Token decryption failed:', error);
        cov_ohi7jwkbn().s[21]++;
        throw new Error('Failed to decrypt token data');
      }
    }
  }, {
    key: "setTokens",
    value: (function () {
      var _setTokens = (0, _asyncToGenerator2.default)(function* (tokens) {
        cov_ohi7jwkbn().f[4]++;
        cov_ohi7jwkbn().s[22]++;
        try {
          var encryptedAccessToken = (cov_ohi7jwkbn().s[23]++, this.encrypt(tokens.accessToken));
          var encryptedRefreshToken = (cov_ohi7jwkbn().s[24]++, this.encrypt(tokens.refreshToken));
          cov_ohi7jwkbn().s[25]++;
          this.storage.set(STORAGE_KEYS.ACCESS_TOKEN, encryptedAccessToken);
          cov_ohi7jwkbn().s[26]++;
          this.storage.set(STORAGE_KEYS.REFRESH_TOKEN, encryptedRefreshToken);
          cov_ohi7jwkbn().s[27]++;
          this.storage.set(STORAGE_KEYS.TOKEN_EXPIRES_IN, tokens.expiresIn);
          cov_ohi7jwkbn().s[28]++;
          this.storage.set(STORAGE_KEYS.TOKEN_TYPE, tokens.tokenType);
          cov_ohi7jwkbn().s[29]++;
          console.log('Tokens stored securely');
        } catch (error) {
          cov_ohi7jwkbn().s[30]++;
          console.error('Failed to store tokens:', error);
          cov_ohi7jwkbn().s[31]++;
          throw new Error('Failed to store authentication tokens');
        }
      });
      function setTokens(_x) {
        return _setTokens.apply(this, arguments);
      }
      return setTokens;
    }())
  }, {
    key: "getTokens",
    value: (function () {
      var _getTokens = (0, _asyncToGenerator2.default)(function* () {
        cov_ohi7jwkbn().f[5]++;
        cov_ohi7jwkbn().s[32]++;
        try {
          var encryptedAccessToken = (cov_ohi7jwkbn().s[33]++, this.storage.getString(STORAGE_KEYS.ACCESS_TOKEN));
          var encryptedRefreshToken = (cov_ohi7jwkbn().s[34]++, this.storage.getString(STORAGE_KEYS.REFRESH_TOKEN));
          var expiresIn = (cov_ohi7jwkbn().s[35]++, this.storage.getNumber(STORAGE_KEYS.TOKEN_EXPIRES_IN));
          var tokenType = (cov_ohi7jwkbn().s[36]++, this.storage.getString(STORAGE_KEYS.TOKEN_TYPE));
          cov_ohi7jwkbn().s[37]++;
          if ((cov_ohi7jwkbn().b[5][0]++, !encryptedAccessToken) || (cov_ohi7jwkbn().b[5][1]++, !encryptedRefreshToken) || (cov_ohi7jwkbn().b[5][2]++, !expiresIn) || (cov_ohi7jwkbn().b[5][3]++, !tokenType)) {
            cov_ohi7jwkbn().b[4][0]++;
            cov_ohi7jwkbn().s[38]++;
            return null;
          } else {
            cov_ohi7jwkbn().b[4][1]++;
          }
          var accessToken = (cov_ohi7jwkbn().s[39]++, this.decrypt(encryptedAccessToken));
          var refreshToken = (cov_ohi7jwkbn().s[40]++, this.decrypt(encryptedRefreshToken));
          var tokens = (cov_ohi7jwkbn().s[41]++, {
            accessToken: accessToken,
            refreshToken: refreshToken,
            expiresIn: expiresIn,
            tokenType: tokenType
          });
          cov_ohi7jwkbn().s[42]++;
          return tokens;
        } catch (error) {
          cov_ohi7jwkbn().s[43]++;
          console.error('Failed to retrieve tokens:', error);
          cov_ohi7jwkbn().s[44]++;
          yield this.removeTokens();
          cov_ohi7jwkbn().s[45]++;
          return null;
        }
      });
      function getTokens() {
        return _getTokens.apply(this, arguments);
      }
      return getTokens;
    }())
  }, {
    key: "removeTokens",
    value: (function () {
      var _removeTokens = (0, _asyncToGenerator2.default)(function* () {
        cov_ohi7jwkbn().f[6]++;
        cov_ohi7jwkbn().s[46]++;
        try {
          cov_ohi7jwkbn().s[47]++;
          this.storage.delete(STORAGE_KEYS.ACCESS_TOKEN);
          cov_ohi7jwkbn().s[48]++;
          this.storage.delete(STORAGE_KEYS.REFRESH_TOKEN);
          cov_ohi7jwkbn().s[49]++;
          this.storage.delete(STORAGE_KEYS.TOKEN_EXPIRES_IN);
          cov_ohi7jwkbn().s[50]++;
          this.storage.delete(STORAGE_KEYS.TOKEN_TYPE);
          cov_ohi7jwkbn().s[51]++;
          console.log('Tokens removed from storage');
        } catch (error) {
          cov_ohi7jwkbn().s[52]++;
          console.error('Failed to remove tokens:', error);
          cov_ohi7jwkbn().s[53]++;
          throw new Error('Failed to clear authentication tokens');
        }
      });
      function removeTokens() {
        return _removeTokens.apply(this, arguments);
      }
      return removeTokens;
    }())
  }, {
    key: "hasValidTokens",
    value: (function () {
      var _hasValidTokens = (0, _asyncToGenerator2.default)(function* () {
        cov_ohi7jwkbn().f[7]++;
        cov_ohi7jwkbn().s[54]++;
        try {
          var tokens = (cov_ohi7jwkbn().s[55]++, yield this.getTokens());
          cov_ohi7jwkbn().s[56]++;
          if (!tokens) {
            cov_ohi7jwkbn().b[6][0]++;
            cov_ohi7jwkbn().s[57]++;
            return false;
          } else {
            cov_ohi7jwkbn().b[6][1]++;
          }
          var validation = (cov_ohi7jwkbn().s[58]++, (0, _tokenUtils.validateTokens)(tokens));
          var refreshTokenValid = (cov_ohi7jwkbn().s[59]++, (0, _tokenUtils.isRefreshTokenValid)(tokens));
          cov_ohi7jwkbn().s[60]++;
          return (cov_ohi7jwkbn().b[7][0]++, validation.isValid) || (cov_ohi7jwkbn().b[7][1]++, validation.isExpired) && (cov_ohi7jwkbn().b[7][2]++, refreshTokenValid);
        } catch (error) {
          cov_ohi7jwkbn().s[61]++;
          console.error('Failed to validate stored tokens:', error);
          cov_ohi7jwkbn().s[62]++;
          return false;
        }
      });
      function hasValidTokens() {
        return _hasValidTokens.apply(this, arguments);
      }
      return hasValidTokens;
    }())
  }, {
    key: "updateAccessToken",
    value: (function () {
      var _updateAccessToken = (0, _asyncToGenerator2.default)(function* (accessToken, expiresIn) {
        cov_ohi7jwkbn().f[8]++;
        cov_ohi7jwkbn().s[63]++;
        try {
          var currentTokens = (cov_ohi7jwkbn().s[64]++, yield this.getTokens());
          cov_ohi7jwkbn().s[65]++;
          if (!currentTokens) {
            cov_ohi7jwkbn().b[8][0]++;
            cov_ohi7jwkbn().s[66]++;
            throw new Error('No existing tokens to update');
          } else {
            cov_ohi7jwkbn().b[8][1]++;
          }
          var updatedTokens = (cov_ohi7jwkbn().s[67]++, Object.assign({}, currentTokens, {
            accessToken: accessToken,
            expiresIn: expiresIn
          }));
          cov_ohi7jwkbn().s[68]++;
          yield this.setTokens(updatedTokens);
        } catch (error) {
          cov_ohi7jwkbn().s[69]++;
          console.error('Failed to update access token:', error);
          cov_ohi7jwkbn().s[70]++;
          throw new Error('Failed to update access token');
        }
      });
      function updateAccessToken(_x2, _x3) {
        return _updateAccessToken.apply(this, arguments);
      }
      return updateAccessToken;
    }())
  }, {
    key: "clearAll",
    value: (function () {
      var _clearAll = (0, _asyncToGenerator2.default)(function* () {
        cov_ohi7jwkbn().f[9]++;
        cov_ohi7jwkbn().s[71]++;
        try {
          cov_ohi7jwkbn().s[72]++;
          this.storage.clearAll();
          cov_ohi7jwkbn().s[73]++;
          console.log('All authentication data cleared');
        } catch (error) {
          cov_ohi7jwkbn().s[74]++;
          console.error('Failed to clear all data:', error);
          cov_ohi7jwkbn().s[75]++;
          throw new Error('Failed to clear authentication data');
        }
      });
      function clearAll() {
        return _clearAll.apply(this, arguments);
      }
      return clearAll;
    }())
  }, {
    key: "getStorageInfo",
    value: function getStorageInfo() {
      cov_ohi7jwkbn().f[10]++;
      cov_ohi7jwkbn().s[76]++;
      return {
        hasAccessToken: this.storage.contains(STORAGE_KEYS.ACCESS_TOKEN),
        hasRefreshToken: this.storage.contains(STORAGE_KEYS.REFRESH_TOKEN),
        hasEncryptionKey: this.storage.contains(STORAGE_KEYS.ENCRYPTION_KEY),
        storageSize: this.storage.size
      };
    }
  }]);
}();
var tokenStorage = exports.tokenStorage = (cov_ohi7jwkbn().s[77]++, new SecureTokenStorage());
cov_ohi7jwkbn().s[78]++;
var createTokenStorage = exports.createTokenStorage = function createTokenStorage(instanceId) {
  cov_ohi7jwkbn().f[11]++;
  cov_ohi7jwkbn().s[79]++;
  return new SecureTokenStorage(instanceId);
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,