28c82d3d7d224efa9475f58acb46a434
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ServerContainer = void 0;
var _core = require("@react-navigation/core");
var React = _interopRequireWildcard(require("react"));
var _ServerContext = require("./ServerContext.js");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
var ServerContainer = exports.ServerContainer = React.forwardRef(function ServerContainer(_ref, ref) {
  var children = _ref.children,
    location = _ref.location;
  React.useEffect(function () {
    console.error("'ServerContainer' should only be used on the server with 'react-dom/server' for SSR.");
  }, []);
  var current = {};
  if (ref) {
    var value = {
      getCurrentOptions: function getCurrentOptions() {
        return current.options;
      }
    };
    if (typeof ref === 'function') {
      ref(value);
    } else {
      ref.current = value;
    }
  }
  return ((0, _jsxRuntime.jsx)(_ServerContext.ServerContext.Provider, {
      value: {
        location: location
      },
      children: (0, _jsxRuntime.jsx)(_core.CurrentRenderContext.Provider, {
        value: current,
        children: children
      })
    })
  );
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX1NlcnZlckNvbnRleHQiLCJfanN4UnVudGltZSIsImUiLCJ0IiwiV2Vha01hcCIsInIiLCJuIiwiX19lc01vZHVsZSIsIm8iLCJpIiwiZiIsIl9fcHJvdG9fXyIsImRlZmF1bHQiLCJoYXMiLCJnZXQiLCJzZXQiLCJfdCIsImhhc093blByb3BlcnR5IiwiY2FsbCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiU2VydmVyQ29udGFpbmVyIiwiZXhwb3J0cyIsImZvcndhcmRSZWYiLCJfcmVmIiwicmVmIiwiY2hpbGRyZW4iLCJsb2NhdGlvbiIsInVzZUVmZmVjdCIsImNvbnNvbGUiLCJlcnJvciIsImN1cnJlbnQiLCJ2YWx1ZSIsImdldEN1cnJlbnRPcHRpb25zIiwib3B0aW9ucyIsIl9qc3giLCJTZXJ2ZXJDb250ZXh0IiwiUHJvdmlkZXIiLCJDdXJyZW50UmVuZGVyQ29udGV4dCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9TZXJ2ZXJDb250YWluZXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFFQSxJQUFBRyxjQUFBLEdBQUFILE9BQUE7QUFBd0UsSUFBQUksV0FBQSxHQUFBSixPQUFBO0FBQUEsU0FBQUUsd0JBQUFHLENBQUEsRUFBQUMsQ0FBQSw2QkFBQUMsT0FBQSxNQUFBQyxDQUFBLE9BQUFELE9BQUEsSUFBQUUsQ0FBQSxPQUFBRixPQUFBLFlBQUFMLHVCQUFBLFlBQUFBLHdCQUFBRyxDQUFBLEVBQUFDLENBQUEsU0FBQUEsQ0FBQSxJQUFBRCxDQUFBLElBQUFBLENBQUEsQ0FBQUssVUFBQSxTQUFBTCxDQUFBLE1BQUFNLENBQUEsRUFBQUMsQ0FBQSxFQUFBQyxDQUFBLEtBQUFDLFNBQUEsUUFBQUMsT0FBQSxFQUFBVixDQUFBLGlCQUFBQSxDQUFBLHVCQUFBQSxDQUFBLHlCQUFBQSxDQUFBLFNBQUFRLENBQUEsTUFBQUYsQ0FBQSxHQUFBTCxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQSxRQUFBRyxDQUFBLENBQUFLLEdBQUEsQ0FBQVgsQ0FBQSxVQUFBTSxDQUFBLENBQUFNLEdBQUEsQ0FBQVosQ0FBQSxHQUFBTSxDQUFBLENBQUFPLEdBQUEsQ0FBQWIsQ0FBQSxFQUFBUSxDQUFBLGNBQUFNLEVBQUEsSUFBQWQsQ0FBQSxnQkFBQWMsRUFBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEsRUFBQWMsRUFBQSxPQUFBUCxDQUFBLElBQUFELENBQUEsR0FBQVcsTUFBQSxDQUFBQyxjQUFBLEtBQUFELE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQW5CLENBQUEsRUFBQWMsRUFBQSxPQUFBUCxDQUFBLENBQUFLLEdBQUEsSUFBQUwsQ0FBQSxDQUFBTSxHQUFBLElBQUFQLENBQUEsQ0FBQUUsQ0FBQSxFQUFBTSxFQUFBLEVBQUFQLENBQUEsSUFBQUMsQ0FBQSxDQUFBTSxFQUFBLElBQUFkLENBQUEsQ0FBQWMsRUFBQSxXQUFBTixDQUFBLEtBQUFSLENBQUEsRUFBQUMsQ0FBQTtBQWNqRSxJQUFNbUIsZUFBZSxHQUFBQyxPQUFBLENBQUFELGVBQUEsR0FBR3hCLEtBQUssQ0FBQzBCLFVBQVUsQ0FBQyxTQUFTRixlQUFlQSxDQUFBRyxJQUFBLEVBRXRFQyxHQUFrQyxFQUNsQztFQUFBLElBRkVDLFFBQVEsR0FBQUYsSUFBQSxDQUFSRSxRQUFRO0lBQUVDLFFBQUEsR0FBQUgsSUFBQSxDQUFBRyxRQUFBO0VBR1o5QixLQUFLLENBQUMrQixTQUFTLENBQUMsWUFBTTtJQUNwQkMsT0FBTyxDQUFDQyxLQUFLLENBQ1gsc0ZBQ0YsQ0FBQztFQUNILENBQUMsRUFBRSxFQUFFLENBQUM7RUFHTixJQUFNQyxPQUE2QixHQUFHLENBQUMsQ0FBQztFQUV4QyxJQUFJTixHQUFHLEVBQUU7SUFDUCxJQUFNTyxLQUFLLEdBQUc7TUFDWkMsaUJBQWlCLFdBQWpCQSxpQkFBaUJBLENBQUEsRUFBRztRQUNsQixPQUFPRixPQUFPLENBQUNHLE9BQU87TUFDeEI7SUFDRixDQUFDO0lBTUQsSUFBSSxPQUFPVCxHQUFHLEtBQUssVUFBVSxFQUFFO01BQzdCQSxHQUFHLENBQUNPLEtBQUssQ0FBQztJQUNaLENBQUMsTUFBTTtNQUNMUCxHQUFHLENBQUNNLE9BQU8sR0FBR0MsS0FBSztJQUNyQjtFQUNGO0VBRUEsUUFFRSxJQUFBRyxlQUFBLEVBQUNDLDRCQUFhLENBQUNDLFFBQVE7TUFBQ0wsS0FBSyxFQUFFO1FBQUVMLFFBQUEsRUFBQUE7TUFBUyxDQUFFO01BQUFELFFBQUEsRUFDMUMsSUFBQVMsZUFBQSxFQUFDRywwQkFBb0IsQ0FBQ0QsUUFBUTtRQUFDTCxLQUFLLEVBQUVELE9BQVE7UUFBQUwsUUFBQSxFQUMzQ0E7TUFBUSxDQUNvQjtJQUFDLENBQ1Y7RUFBQTtBQUU1QixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=