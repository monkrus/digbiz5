d2fd3ba3b4a0718d17ee042ffd5f4f51
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validatePathConfig = validatePathConfig;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var formatToList = function formatToList(items) {
  return Object.entries(items).map(function (_ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];
    return `- ${key} (${value})`;
  }).join('\n');
};
function validatePathConfig(config) {
  var root = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
  var validation = Object.assign({
    path: 'string',
    initialRouteName: 'string',
    screens: 'object'
  }, root ? null : {
    alias: 'array',
    exact: 'boolean',
    stringify: 'object',
    parse: 'object'
  });
  if (typeof config !== 'object' || config === null) {
    throw new Error(`Expected the configuration to be an object, but got ${JSON.stringify(config)}.`);
  }
  var validationErrors = Object.fromEntries(Object.keys(config).map(function (key) {
    if (key in validation) {
      var type = validation[key];
      var value = config[key];
      if (value !== undefined) {
        if (type === 'array') {
          if (!Array.isArray(value)) {
            return [key, `expected 'Array', got '${typeof value}'`];
          }
        } else if (typeof value !== type) {
          return [key, `expected '${type}', got '${typeof value}'`];
        }
      }
    } else {
      return [key, 'extraneous'];
    }
    return null;
  }).filter(Boolean));
  if (Object.keys(validationErrors).length) {
    throw new Error(`Found invalid properties in the configuration:\n${formatToList(validationErrors)}\n\nYou can only specify the following properties:\n${formatToList(validation)}\n\nIf you want to specify configuration for screens, you need to specify them under a 'screens' property.\n\nSee https://reactnavigation.org/docs/configuring-links for more details on how to specify a linking configuration.`);
  }
  if (root && 'path' in config && typeof config.path === 'string' && config.path.includes(':')) {
    throw new Error(`Found invalid path '${config.path}'. The 'path' in the top-level configuration cannot contain patterns for params.`);
  }
  if ('screens' in config && config.screens) {
    Object.entries(config.screens).forEach(function (_ref3) {
      var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
        _ = _ref4[0],
        value = _ref4[1];
      if (typeof value !== 'string') {
        validatePathConfig(value, false);
      }
    });
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmb3JtYXRUb0xpc3QiLCJpdGVtcyIsIk9iamVjdCIsImVudHJpZXMiLCJtYXAiLCJfcmVmIiwiX3JlZjIiLCJfc2xpY2VkVG9BcnJheTIiLCJkZWZhdWx0Iiwia2V5IiwidmFsdWUiLCJqb2luIiwidmFsaWRhdGVQYXRoQ29uZmlnIiwiY29uZmlnIiwicm9vdCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInZhbGlkYXRpb24iLCJhc3NpZ24iLCJwYXRoIiwiaW5pdGlhbFJvdXRlTmFtZSIsInNjcmVlbnMiLCJhbGlhcyIsImV4YWN0Iiwic3RyaW5naWZ5IiwicGFyc2UiLCJFcnJvciIsIkpTT04iLCJ2YWxpZGF0aW9uRXJyb3JzIiwiZnJvbUVudHJpZXMiLCJrZXlzIiwidHlwZSIsIkFycmF5IiwiaXNBcnJheSIsImZpbHRlciIsIkJvb2xlYW4iLCJpbmNsdWRlcyIsImZvckVhY2giLCJfcmVmMyIsIl9yZWY0IiwiXyJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy92YWxpZGF0ZVBhdGhDb25maWcudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBLElBQU1BLFlBQVksR0FBSSxTQUFoQkEsWUFBWUEsQ0FBSUMsS0FBNkI7RUFBQSxPQUNqREMsTUFBTSxDQUFDQyxPQUFPLENBQUNGLEtBQUssQ0FBQyxDQUNsQkcsR0FBRyxDQUFDLFVBQUFDLElBQUE7SUFBQSxJQUFBQyxLQUFBLE9BQUFDLGVBQUEsQ0FBQUMsT0FBQSxFQUFBSCxJQUFBO01BQUVJLEdBQUcsR0FBQUgsS0FBQTtNQUFFSSxLQUFLLEdBQUFKLEtBQUE7SUFBQSxPQUFNLEtBQUtHLEdBQUcsS0FBS0MsS0FBSyxHQUFHO0VBQUEsRUFBQyxDQUM1Q0MsSUFBSSxDQUFDLElBQUksQ0FBQztBQUFBO0FBRVIsU0FBU0Msa0JBQWtCQSxDQUFDQyxNQUFlLEVBQWU7RUFBQSxJQUFiQyxJQUFJLEdBQUFDLFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxT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