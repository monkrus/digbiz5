95093d076c2e4290ff54466aaf2e00d5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _stack = require("@react-navigation/stack");
var _WelcomeScreen = _interopRequireDefault(require("../screens/onboarding/WelcomeScreen"));
var _UserTypeSelectionScreen = _interopRequireDefault(require("../screens/onboarding/UserTypeSelectionScreen"));
var _IndustrySelectionScreen = _interopRequireDefault(require("../screens/onboarding/IndustrySelectionScreen"));
var _LocationSetupScreen = _interopRequireDefault(require("../screens/onboarding/LocationSetupScreen"));
var _PermissionRequestsScreen = _interopRequireDefault(require("../screens/onboarding/PermissionRequestsScreen"));
var _OnboardingCompleteScreen = _interopRequireDefault(require("../screens/onboarding/OnboardingCompleteScreen"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1iujlyo7mt() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\navigation\\OnboardingNavigator.tsx";
  var hash = "1505cec194f6218c24d1cecf4ee883749fd42494";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\navigation\\OnboardingNavigator.tsx",
    statementMap: {
      "0": {
        start: {
          line: 24,
          column: 14
        },
        end: {
          line: 24,
          column: 62
        }
      },
      "1": {
        start: {
          line: 30,
          column: 64
        },
        end: {
          line: 109,
          column: 1
        }
      },
      "2": {
        start: {
          line: 33,
          column: 2
        },
        end: {
          line: 108,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 30,
            column: 64
          },
          end: {
            line: 30,
            column: 65
          }
        },
        loc: {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 109,
            column: 1
          }
        },
        line: 32
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 31,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 31,
            column: 21
          },
          end: {
            line: 31,
            column: 30
          }
        }],
        line: 31
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1505cec194f6218c24d1cecf4ee883749fd42494"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1iujlyo7mt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1iujlyo7mt();
var Stack = (cov_1iujlyo7mt().s[0]++, (0, _stack.createStackNavigator)());
cov_1iujlyo7mt().s[1]++;
var OnboardingNavigator = function OnboardingNavigator(_ref) {
  var _ref$initialRouteName = _ref.initialRouteName,
    initialRouteName = _ref$initialRouteName === void 0 ? (cov_1iujlyo7mt().b[0][0]++, 'Welcome') : _ref$initialRouteName;
  cov_1iujlyo7mt().f[0]++;
  cov_1iujlyo7mt().s[2]++;
  return (0, _jsxRuntime.jsxs)(Stack.Navigator, {
    initialRouteName: initialRouteName,
    screenOptions: {
      headerShown: false,
      gestureEnabled: true,
      gestureDirection: 'horizontal',
      cardStyleInterpolator: _stack.CardStyleInterpolators.forHorizontalIOS,
      transitionSpec: {
        open: {
          animation: 'timing',
          config: {
            duration: 300
          }
        },
        close: {
          animation: 'timing',
          config: {
            duration: 250
          }
        }
      }
    },
    children: [(0, _jsxRuntime.jsx)(Stack.Screen, {
      name: "Welcome",
      component: _WelcomeScreen.default,
      options: {
        cardStyleInterpolator: _stack.CardStyleInterpolators.forFadeFromBottomAndroid
      }
    }), (0, _jsxRuntime.jsx)(Stack.Screen, {
      name: "UserTypeSelection",
      component: _UserTypeSelectionScreen.default,
      options: {
        gestureDirection: 'horizontal'
      }
    }), (0, _jsxRuntime.jsx)(Stack.Screen, {
      name: "IndustrySelection",
      component: _IndustrySelectionScreen.default,
      options: {
        gestureDirection: 'horizontal'
      }
    }), (0, _jsxRuntime.jsx)(Stack.Screen, {
      name: "LocationSetup",
      component: _LocationSetupScreen.default,
      options: {
        gestureDirection: 'horizontal'
      }
    }), (0, _jsxRuntime.jsx)(Stack.Screen, {
      name: "PermissionRequests",
      component: _PermissionRequestsScreen.default,
      options: {
        gestureDirection: 'horizontal'
      }
    }), (0, _jsxRuntime.jsx)(Stack.Screen, {
      name: "OnboardingComplete",
      component: _OnboardingCompleteScreen.default,
      options: {
        gestureEnabled: false,
        cardStyleInterpolator: _stack.CardStyleInterpolators.forFadeFromBottomAndroid
      }
    })]
  });
};
var _default = exports.default = OnboardingNavigator;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,