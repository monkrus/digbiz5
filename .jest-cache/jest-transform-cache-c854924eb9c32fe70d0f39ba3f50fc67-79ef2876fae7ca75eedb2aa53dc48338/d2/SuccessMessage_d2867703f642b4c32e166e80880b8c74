a57e5d0fd137094c18aab827ede622f5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function cov_134s1ztmfn() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\components\\common\\SuccessMessage.tsx";
  var hash = "89172131e4c24e86855c685f9b7ae7a79c162169";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\components\\common\\SuccessMessage.tsx",
    statementMap: {
      "0": {
        start: {
          line: 9,
          column: 54
        },
        end: {
          line: 27,
          column: 1
        }
      },
      "1": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "2": {
        start: {
          line: 13,
          column: 28
        },
        end: {
          line: 13,
          column: 40
        }
      },
      "3": {
        start: {
          line: 15,
          column: 2
        },
        end: {
          line: 26,
          column: 4
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 9,
            column: 54
          },
          end: {
            line: 9,
            column: 55
          }
        },
        loc: {
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 27,
            column: 1
          }
        },
        line: 12
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 2
          },
          end: {
            line: 11,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 11,
            column: 12
          },
          end: {
            line: 11,
            column: 16
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 2
          },
          end: {
            line: 13,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 13,
            column: 26
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 13,
            column: 14
          }
        }, {
          start: {
            line: 13,
            column: 18
          },
          end: {
            line: 13,
            column: 26
          }
        }],
        line: 13
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "89172131e4c24e86855c685f9b7ae7a79c162169"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_134s1ztmfn = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_134s1ztmfn();
cov_134s1ztmfn().s[0]++;
var SuccessMessage = function SuccessMessage(_ref) {
  var message = _ref.message,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? (cov_134s1ztmfn().b[0][0]++, true) : _ref$visible;
  cov_134s1ztmfn().f[0]++;
  cov_134s1ztmfn().s[1]++;
  if ((cov_134s1ztmfn().b[2][0]++, !visible) || (cov_134s1ztmfn().b[2][1]++, !message)) {
    cov_134s1ztmfn().b[1][0]++;
    cov_134s1ztmfn().s[2]++;
    return null;
  } else {
    cov_134s1ztmfn().b[1][1]++;
  }
  cov_134s1ztmfn().s[3]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: {
      padding: 8,
      backgroundColor: '#e6f7e6',
      borderRadius: 4,
      margin: 4
    },
    children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: {
        color: '#006600',
        textAlign: 'center'
      },
      children: message
    })
  });
};
var _default = exports.default = SuccessMessage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9qc3hSdW50aW1lIiwiY292XzEzNHMxenRtZm4iLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJ1bmRlZmluZWQiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiU3VjY2Vzc01lc3NhZ2UiLCJfcmVmIiwibWVzc2FnZSIsIl9yZWYkdmlzaWJsZSIsInZpc2libGUiLCJqc3giLCJWaWV3Iiwic3R5bGUiLCJwYWRkaW5nIiwiYmFja2dyb3VuZENvbG9yIiwiYm9yZGVyUmFkaXVzIiwibWFyZ2luIiwiY2hpbGRyZW4iLCJUZXh0IiwiY29sb3IiLCJ0ZXh0QWxpZ24iLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZXMiOlsiU3VjY2Vzc01lc3NhZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBWaWV3LCBUZXh0IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuaW50ZXJmYWNlIFN1Y2Nlc3NNZXNzYWdlUHJvcHMge1xuICBtZXNzYWdlPzogc3RyaW5nO1xuICB2aXNpYmxlPzogYm9vbGVhbjtcbn1cblxuY29uc3QgU3VjY2Vzc01lc3NhZ2U6IFJlYWN0LkZDPFN1Y2Nlc3NNZXNzYWdlUHJvcHM+ID0gKHtcbiAgbWVzc2FnZSxcbiAgdmlzaWJsZSA9IHRydWUsXG59KSA9PiB7XG4gIGlmICghdmlzaWJsZSB8fCAhbWVzc2FnZSkgcmV0dXJuIG51bGw7XG5cbiAgcmV0dXJuIChcbiAgICA8Vmlld1xuICAgICAgc3R5bGU9e3tcbiAgICAgICAgcGFkZGluZzogOCxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiAnI2U2ZjdlNicsXG4gICAgICAgIGJvcmRlclJhZGl1czogNCxcbiAgICAgICAgbWFyZ2luOiA0LFxuICAgICAgfX1cbiAgICA+XG4gICAgICA8VGV4dCBzdHlsZT17eyBjb2xvcjogJyMwMDY2MDAnLCB0ZXh0QWxpZ246ICdjZW50ZXInIH19PnttZXNzYWdlfTwvVGV4dD5cbiAgICA8L1ZpZXc+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdWNjZXNzTWVzc2FnZTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFBMEMsSUFBQUUsV0FBQSxHQUFBRixPQUFBO0FBQUEsU0FBQUcsZUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxJQUFBO0VBQUEsSUFBQUMsTUFBQSxPQUFBQyxRQUFBO0VBQUEsSUFBQUMsR0FBQTtFQUFBLElBQUFDLFlBQUE7SUFBQUwsSUFBQTtJQUFBTSxZQUFBO01BQUE7UUFBQUMsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBRixLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO01BQUE7UUFBQUYsS0FBQTtVQUFBQyxJQUFBO1VBQUFDLE1BQUE7UUFBQTtRQUFBQyxHQUFBO1VBQUFGLElBQUE7VUFBQUMsTUFBQTtRQUFBO01BQUE7SUFBQTtJQUFBRSxLQUFBO01BQUE7UUFBQUMsSUFBQTtRQUFBQyxJQUFBO1VBQUFOLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFLLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQU8sU0FBQTtNQUFBO1FBQUFELEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtNQUFBO1FBQUFNLEdBQUE7VUFBQVAsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQU8sSUFBQTtRQUFBQyxTQUFBO1VBQUFWLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1VBQUFGLEtBQUE7WUFBQUMsSUFBQSxFQUFBVSxTQUFBO1lBQUFULE1BQUEsRUFBQVM7VUFBQTtVQUFBUixHQUFBO1lBQUFGLElBQUEsRUFBQVUsU0FBQTtZQUFBVCxNQUFBLEVBQUFTO1VBQUE7UUFBQTtRQUFBVixJQUFBO01BQUE7TUFBQTtRQUFBTSxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFPLElBQUE7UUFBQUMsU0FBQTtVQUFBVixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtVQUFBRixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBVyxDQUFBO01BQUE7TUFBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7TUFBQTtNQUFBO0lBQUE7SUFBQUMsZUFBQTtJQUFBckIsSUFBQTtFQUFBO0VBQUEsSUFBQXNCLFFBQUEsR0FBQXJCLE1BQUEsQ0FBQUUsR0FBQSxNQUFBRixNQUFBLENBQUFFLEdBQUE7RUFBQSxLQUFBbUIsUUFBQSxDQUFBdkIsSUFBQSxLQUFBdUIsUUFBQSxDQUFBdkIsSUFBQSxFQUFBQyxJQUFBLEtBQUFBLElBQUE7SUFBQXNCLFFBQUEsQ0FBQXZCLElBQUEsSUFBQUssWUFBQTtFQUFBO0VBQUEsSUFBQW1CLGNBQUEsR0FBQUQsUUFBQSxDQUFBdkIsSUFBQTtFQUFBO0lBQUFELGNBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUF5QixjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBekIsY0FBQTtBQUFBQSxjQUFBLEdBQUFvQixDQUFBO0FBTzFDLElBQU1NLGNBQTZDLEdBQUcsU0FBaERBLGNBQTZDQSxDQUFBQyxJQUFBLEVBRzdDO0VBQUEsSUFGSkMsT0FBTyxHQUFBRCxJQUFBLENBQVBDLE9BQU87SUFBQUMsWUFBQSxHQUFBRixJQUFBLENBQ1BHLE9BQU87SUFBUEEsT0FBTyxHQUFBRCxZQUFBLGVBQUE3QixjQUFBLEdBQUFzQixDQUFBLFVBQUcsSUFBSSxJQUFBTyxZQUFBO0VBQUE3QixjQUFBLEdBQUFxQixDQUFBO0VBQUFyQixjQUFBLEdBQUFvQixDQUFBO0VBRWQsSUFBSSxDQUFBcEIsY0FBQSxHQUFBc0IsQ0FBQSxXQUFDUSxPQUFPLE1BQUE5QixjQUFBLEdBQUFzQixDQUFBLFVBQUksQ0FBQ00sT0FBTyxHQUFFO0lBQUE1QixjQUFBLEdBQUFzQixDQUFBO0lBQUF0QixjQUFBLEdBQUFvQixDQUFBO0lBQUEsT0FBTyxJQUFJO0VBQUEsQ0FBQztJQUFBcEIsY0FBQSxHQUFBc0IsQ0FBQTtFQUFBO0VBQUF0QixjQUFBLEdBQUFvQixDQUFBO0VBRXRDLE9BQ0UsSUFBQXJCLFdBQUEsQ0FBQWdDLEdBQUEsRUFBQ2pDLFlBQUEsQ0FBQWtDLElBQUk7SUFDSEMsS0FBSyxFQUFFO01BQ0xDLE9BQU8sRUFBRSxDQUFDO01BQ1ZDLGVBQWUsRUFBRSxTQUFTO01BQzFCQyxZQUFZLEVBQUUsQ0FBQztNQUNmQyxNQUFNLEVBQUU7SUFDVixDQUFFO0lBQUFDLFFBQUEsRUFFRixJQUFBdkMsV0FBQSxDQUFBZ0MsR0FBQSxFQUFDakMsWUFBQSxDQUFBeUMsSUFBSTtNQUFDTixLQUFLLEVBQUU7UUFBRU8sS0FBSyxFQUFFLFNBQVM7UUFBRUMsU0FBUyxFQUFFO01BQVMsQ0FBRTtNQUFBSCxRQUFBLEVBQUVWO0lBQU8sQ0FBTztFQUFDLENBQ3BFLENBQUM7QUFFWCxDQUFDO0FBQUMsSUFBQWMsUUFBQSxHQUFBQyxPQUFBLENBQUFDLE9BQUEsR0FFYWxCLGNBQWMiLCJpZ25vcmVMaXN0IjpbXX0=