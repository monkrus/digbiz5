{"version":3,"names":["_reactNativeSqliteStorage","_interopRequireDefault","require","_analyticsService","cov_8lrau739w","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","SQLite","enablePromise","ContactDatabaseService","exports","_classCallCheck2","default","database","databaseName","databaseVersion","databaseDisplayName","databaseSize","_createClass2","key","value","_initialize","_asyncToGenerator2","openDatabase","version","displayName","size","createTables","createIndexes","trackEvent","console","log","error","initialize","apply","arguments","_createTables","Error","createTableQueries","query","executeSql","_createIndexes","createIndexQueries","_saveContact","contact","contactData","id","fields_json","JSON","stringify","fields","source","confidence","raw_text","rawText","image_uri","imageUri","created_at","createdAt","updated_at","updatedAt","tags_json","tags","is_verified","isVerified","needs_review","needsReview","is_favorite","isFavorite","last_interaction_at","lastInteractionAt","sync_status","syncStatus","conflict_data_json","conflictData","values","updateTagCounts","contactId","fieldsCount","length","saveContact","_x","_getContact","_ref","_ref2","_slicedToArray2","result","rows","mapRowToContact","item","getContact","_x2","_searchContacts","filters","limit","offset","_ref3","buildWhereClause","whereClause","params","countQuery","_ref4","_ref5","countResult","totalCount","total","contactsQuery","_ref6","concat","_toConsumableArray2","_ref7","contactsResult","contacts","i","push","facets","getSearchFacets","searchContacts","_x3","_getAllContacts","_ref8","_ref9","getAllContacts","_updateContact","Date","toISOString","updateContact","_x4","_deleteContact","deleteContact","_x5","_bulkSaveContacts","transaction","_ref0","tx","_x7","count","bulkSaveContacts","_x6","_saveContactNote","note","content","isPrivate","saveContactNote","_x8","_getContactNotes","_ref1","_ref10","notes","row","contact_id","is_private","getContactNotes","_x9","_saveContactInteraction","interaction","description","timestamp","metadata","duration","participants","saveContactInteraction","_x0","_getContactInteractions","_ref11","_ref12","interactions","metadata_json","parse","participants_json","getContactInteractions","_x1","_findDuplicateContacts","threshold","duplicates","j","similarity","calculateContactSimilarity","matchingFields","getMatchingFields","now","Math","random","toString","substr","suggestedAction","detectedAt","findDuplicateContacts","_getContactAnalytics","_ref13","_ref14","totalResult","_ref15","_ref16","verifiedResult","_ref17","_ref18","reviewResult","_ref19","_ref20","avgConfidenceResult","_ref21","_ref22","sourceResult","contactsBySource","oneWeekAgo","_ref23","_ref24","recentInteractionsResult","totalContacts","verifiedContacts","verified","contactsNeedingReview","review","averageConfidence","avg_confidence","contactsByTag","contactsByCategory","recentInteractions","recent","topTags","topCategories","growthStats","thisWeek","thisMonth","thisYear","getContactAnalytics","conditions","placeholders","map","join","dateRange","field","confidenceRange","min","max","_getSearchFacets","categories","sources","_x10","_updateTagCounts","isDelete","tag","increment","_x11","contact1","contact2","matches","totalFields","getFieldValue","find","toLowerCase","trim","fieldTypes","fieldType","value1","value2","_deleteAllContacts","operation","message","deleteAllContacts","_close","close","getInstance","instance","contactDatabaseService","_default"],"sources":["contactDatabaseService.ts"],"sourcesContent":["/**\n * Contact Database Service\n * \n * SQLite database management for contact storage and CRM functionality\n */\n\nimport SQLite from 'react-native-sqlite-storage';\nimport {\n  Contact,\n  ContactNote,\n  ContactInteraction,\n  ContactTag,\n  ContactCategory,\n  ContactSearchFilters,\n  ContactSearchResult,\n  DuplicateContact,\n  ContactAnalytics,\n  ContactTable,\n  ContactNoteTable,\n  ContactInteractionTable,\n  ContactTagTable,\n  ContactCategoryTable,\n} from '../types/contacts';\nimport { trackEvent } from './analyticsService';\n\n// SQLite.DEBUG(false); // Comment out for testing\nSQLite.enablePromise(true);\n\nexport class ContactDatabaseService {\n  private static instance: ContactDatabaseService;\n  private database: SQLite.SQLiteDatabase | null = null;\n  private readonly databaseName = 'contacts.db';\n  private readonly databaseVersion = '1.0';\n  private readonly databaseDisplayName = 'Contact Database';\n  private readonly databaseSize = 200000;\n\n  private constructor() {}\n\n  static getInstance(): ContactDatabaseService {\n    if (!ContactDatabaseService.instance) {\n      ContactDatabaseService.instance = new ContactDatabaseService();\n    }\n    return ContactDatabaseService.instance;\n  }\n\n  /**\n   * Initialize database connection and create tables\n   */\n  async initialize(): Promise<boolean> {\n    try {\n      this.database = await SQLite.openDatabase({\n        name: this.databaseName,\n        version: this.databaseVersion,\n        displayName: this.databaseDisplayName,\n        size: this.databaseSize,\n      });\n\n      await this.createTables();\n      await this.createIndexes();\n      \n      trackEvent('contact_database_initialized');\n      console.log('Contact database initialized successfully');\n      \n      return true;\n    } catch (error) {\n      console.error('Database initialization failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Create database tables\n   */\n  private async createTables(): Promise<void> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const createTableQueries = [\n      // Contacts table\n      `CREATE TABLE IF NOT EXISTS contacts (\n        id TEXT PRIMARY KEY,\n        fields_json TEXT NOT NULL,\n        source TEXT NOT NULL,\n        confidence REAL DEFAULT 0.0,\n        raw_text TEXT,\n        image_uri TEXT,\n        created_at TEXT NOT NULL,\n        updated_at TEXT NOT NULL,\n        tags_json TEXT DEFAULT '[]',\n        is_verified INTEGER DEFAULT 0,\n        needs_review INTEGER DEFAULT 0,\n        is_favorite INTEGER DEFAULT 0,\n        last_interaction_at TEXT,\n        sync_status TEXT DEFAULT 'pending',\n        conflict_data_json TEXT\n      )`,\n\n      // Contact notes table\n      `CREATE TABLE IF NOT EXISTS contact_notes (\n        id TEXT PRIMARY KEY,\n        contact_id TEXT NOT NULL,\n        content TEXT NOT NULL,\n        created_at TEXT NOT NULL,\n        updated_at TEXT NOT NULL,\n        type TEXT DEFAULT 'general',\n        is_private INTEGER DEFAULT 0,\n        FOREIGN KEY (contact_id) REFERENCES contacts (id) ON DELETE CASCADE\n      )`,\n\n      // Contact interactions table\n      `CREATE TABLE IF NOT EXISTS contact_interactions (\n        id TEXT PRIMARY KEY,\n        contact_id TEXT NOT NULL,\n        type TEXT NOT NULL,\n        description TEXT NOT NULL,\n        timestamp TEXT NOT NULL,\n        metadata_json TEXT,\n        duration INTEGER,\n        participants_json TEXT,\n        FOREIGN KEY (contact_id) REFERENCES contacts (id) ON DELETE CASCADE\n      )`,\n\n      // Contact tags table\n      `CREATE TABLE IF NOT EXISTS contact_tags (\n        id TEXT PRIMARY KEY,\n        name TEXT UNIQUE NOT NULL,\n        color TEXT NOT NULL,\n        description TEXT,\n        created_at TEXT NOT NULL,\n        contact_count INTEGER DEFAULT 0\n      )`,\n\n      // Contact categories table\n      `CREATE TABLE IF NOT EXISTS contact_categories (\n        id TEXT PRIMARY KEY,\n        name TEXT NOT NULL,\n        description TEXT,\n        color TEXT NOT NULL,\n        icon TEXT,\n        parent_id TEXT,\n        contact_count INTEGER DEFAULT 0,\n        created_at TEXT NOT NULL,\n        updated_at TEXT NOT NULL,\n        FOREIGN KEY (parent_id) REFERENCES contact_categories (id)\n      )`,\n\n      // Contact groups table\n      `CREATE TABLE IF NOT EXISTS contact_groups (\n        id TEXT PRIMARY KEY,\n        name TEXT NOT NULL,\n        description TEXT,\n        color TEXT NOT NULL,\n        contact_ids_json TEXT DEFAULT '[]',\n        created_at TEXT NOT NULL,\n        updated_at TEXT NOT NULL,\n        is_shared INTEGER DEFAULT 0\n      )`,\n\n      // Duplicate contacts table\n      `CREATE TABLE IF NOT EXISTS duplicate_contacts (\n        id TEXT PRIMARY KEY,\n        contact_ids_json TEXT NOT NULL,\n        similarity REAL NOT NULL,\n        suggested_action TEXT NOT NULL,\n        matching_fields_json TEXT NOT NULL,\n        confidence REAL NOT NULL,\n        detected_at TEXT NOT NULL,\n        resolved_at TEXT,\n        resolution TEXT\n      )`,\n\n      // Contact sync queue table\n      `CREATE TABLE IF NOT EXISTS sync_queue (\n        id TEXT PRIMARY KEY,\n        contact_id TEXT NOT NULL,\n        action TEXT NOT NULL,\n        payload_json TEXT NOT NULL,\n        created_at TEXT NOT NULL,\n        attempts INTEGER DEFAULT 0,\n        last_attempt_at TEXT,\n        error_message TEXT,\n        FOREIGN KEY (contact_id) REFERENCES contacts (id) ON DELETE CASCADE\n      )`,\n    ];\n\n    for (const query of createTableQueries) {\n      await this.database.executeSql(query);\n    }\n  }\n\n  /**\n   * Create database indexes for better query performance\n   */\n  private async createIndexes(): Promise<void> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const createIndexQueries = [\n      'CREATE INDEX IF NOT EXISTS idx_contacts_source ON contacts(source)',\n      'CREATE INDEX IF NOT EXISTS idx_contacts_created_at ON contacts(created_at)',\n      'CREATE INDEX IF NOT EXISTS idx_contacts_updated_at ON contacts(updated_at)',\n      'CREATE INDEX IF NOT EXISTS idx_contacts_is_verified ON contacts(is_verified)',\n      'CREATE INDEX IF NOT EXISTS idx_contacts_needs_review ON contacts(needs_review)',\n      'CREATE INDEX IF NOT EXISTS idx_contacts_is_favorite ON contacts(is_favorite)',\n      'CREATE INDEX IF NOT EXISTS idx_contacts_sync_status ON contacts(sync_status)',\n      'CREATE INDEX IF NOT EXISTS idx_contact_notes_contact_id ON contact_notes(contact_id)',\n      'CREATE INDEX IF NOT EXISTS idx_contact_interactions_contact_id ON contact_interactions(contact_id)',\n      'CREATE INDEX IF NOT EXISTS idx_contact_interactions_timestamp ON contact_interactions(timestamp)',\n      'CREATE INDEX IF NOT EXISTS idx_duplicate_contacts_similarity ON duplicate_contacts(similarity)',\n      'CREATE INDEX IF NOT EXISTS idx_sync_queue_action ON sync_queue(action)',\n      'CREATE INDEX IF NOT EXISTS idx_sync_queue_created_at ON sync_queue(created_at)',\n    ];\n\n    for (const query of createIndexQueries) {\n      await this.database.executeSql(query);\n    }\n  }\n\n  /**\n   * Save a contact to the database\n   */\n  async saveContact(contact: Contact): Promise<void> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const contactData: ContactTable = {\n      id: contact.id,\n      fields_json: JSON.stringify(contact.fields),\n      source: contact.source,\n      confidence: contact.confidence || 0.0,\n      raw_text: contact.rawText,\n      image_uri: contact.imageUri,\n      created_at: contact.createdAt,\n      updated_at: contact.updatedAt,\n      tags_json: JSON.stringify(contact.tags),\n      is_verified: contact.isVerified ? 1 : 0,\n      needs_review: contact.needsReview ? 1 : 0,\n      is_favorite: contact.isFavorite ? 1 : 0,\n      last_interaction_at: contact.lastInteractionAt,\n      sync_status: contact.syncStatus,\n      conflict_data_json: contact.conflictData ? JSON.stringify(contact.conflictData) : undefined,\n    };\n\n    const query = `\n      INSERT OR REPLACE INTO contacts (\n        id, fields_json, source, confidence, raw_text, image_uri,\n        created_at, updated_at, tags_json, is_verified, needs_review,\n        is_favorite, last_interaction_at, sync_status, conflict_data_json\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      contactData.id,\n      contactData.fields_json,\n      contactData.source,\n      contactData.confidence,\n      contactData.raw_text,\n      contactData.image_uri,\n      contactData.created_at,\n      contactData.updated_at,\n      contactData.tags_json,\n      contactData.is_verified,\n      contactData.needs_review,\n      contactData.is_favorite,\n      contactData.last_interaction_at,\n      contactData.sync_status,\n      contactData.conflict_data_json,\n    ];\n\n    await this.database.executeSql(query, values);\n    \n    // Update tag counts\n    await this.updateTagCounts(contact.tags);\n    \n    trackEvent('contact_saved', {\n      contactId: contact.id,\n      source: contact.source,\n      fieldsCount: contact.fields.length,\n    });\n  }\n\n  /**\n   * Get a contact by ID\n   */\n  async getContact(id: string): Promise<Contact | null> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const query = 'SELECT * FROM contacts WHERE id = ?';\n    const [result] = await this.database.executeSql(query, [id]);\n\n    if (result.rows.length === 0) {\n      return null;\n    }\n\n    return this.mapRowToContact(result.rows.item(0));\n  }\n\n  /**\n   * Search contacts with filters\n   */\n  async searchContacts(\n    filters: ContactSearchFilters,\n    limit: number = 50,\n    offset: number = 0\n  ): Promise<ContactSearchResult> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const { whereClause, params } = this.buildWhereClause(filters);\n    \n    // Get total count\n    const countQuery = `SELECT COUNT(*) as total FROM contacts ${whereClause}`;\n    const [countResult] = await this.database.executeSql(countQuery, params);\n    const totalCount = countResult.rows.item(0).total;\n\n    // Get contacts\n    const contactsQuery = `\n      SELECT * FROM contacts \n      ${whereClause}\n      ORDER BY updated_at DESC \n      LIMIT ? OFFSET ?\n    `;\n    const [contactsResult] = await this.database.executeSql(\n      contactsQuery, \n      [...params, limit, offset]\n    );\n\n    const contacts: Contact[] = [];\n    for (let i = 0; i < contactsResult.rows.length; i++) {\n      contacts.push(this.mapRowToContact(contactsResult.rows.item(i)));\n    }\n\n    // Get facets\n    const facets = await this.getSearchFacets(filters);\n\n    return {\n      contacts,\n      totalCount,\n      facets,\n    };\n  }\n\n  /**\n   * Get all contacts\n   */\n  async getAllContacts(): Promise<Contact[]> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const query = 'SELECT * FROM contacts ORDER BY updated_at DESC';\n    const [result] = await this.database.executeSql(query);\n\n    const contacts: Contact[] = [];\n    for (let i = 0; i < result.rows.length; i++) {\n      contacts.push(this.mapRowToContact(result.rows.item(i)));\n    }\n\n    return contacts;\n  }\n\n  /**\n   * Update a contact\n   */\n  async updateContact(contact: Contact): Promise<void> {\n    contact.updatedAt = new Date().toISOString();\n    await this.saveContact(contact);\n  }\n\n  /**\n   * Delete a contact\n   */\n  async deleteContact(id: string): Promise<void> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    // Get contact to update tag counts\n    const contact = await this.getContact(id);\n    \n    await this.database.executeSql('DELETE FROM contacts WHERE id = ?', [id]);\n    \n    if (contact) {\n      await this.updateTagCounts(contact.tags, true);\n    }\n    \n    trackEvent('contact_deleted', { contactId: id });\n  }\n\n  /**\n   * Bulk save contacts\n   */\n  async bulkSaveContacts(contacts: Contact[]): Promise<void> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    await this.database.transaction(async (tx) => {\n      for (const contact of contacts) {\n        const contactData: ContactTable = {\n          id: contact.id,\n          fields_json: JSON.stringify(contact.fields),\n          source: contact.source,\n          confidence: contact.confidence || 0.0,\n          raw_text: contact.rawText,\n          image_uri: contact.imageUri,\n          created_at: contact.createdAt,\n          updated_at: contact.updatedAt,\n          tags_json: JSON.stringify(contact.tags),\n          is_verified: contact.isVerified ? 1 : 0,\n          needs_review: contact.needsReview ? 1 : 0,\n          is_favorite: contact.isFavorite ? 1 : 0,\n          last_interaction_at: contact.lastInteractionAt,\n          sync_status: contact.syncStatus,\n          conflict_data_json: contact.conflictData ? JSON.stringify(contact.conflictData) : undefined,\n        };\n\n        const query = `\n          INSERT OR REPLACE INTO contacts (\n            id, fields_json, source, confidence, raw_text, image_uri,\n            created_at, updated_at, tags_json, is_verified, needs_review,\n            is_favorite, last_interaction_at, sync_status, conflict_data_json\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `;\n\n        const values = [\n          contactData.id,\n          contactData.fields_json,\n          contactData.source,\n          contactData.confidence,\n          contactData.raw_text,\n          contactData.image_uri,\n          contactData.created_at,\n          contactData.updated_at,\n          contactData.tags_json,\n          contactData.is_verified,\n          contactData.needs_review,\n          contactData.is_favorite,\n          contactData.last_interaction_at,\n          contactData.sync_status,\n          contactData.conflict_data_json,\n        ];\n\n        await tx.executeSql(query, values);\n      }\n    });\n\n    trackEvent('contacts_bulk_saved', { count: contacts.length });\n  }\n\n  /**\n   * Save a contact note\n   */\n  async saveContactNote(note: ContactNote): Promise<void> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const query = `\n      INSERT OR REPLACE INTO contact_notes (\n        id, contact_id, content, created_at, updated_at, type, is_private\n      ) VALUES (?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      note.id,\n      note.contactId,\n      note.content,\n      note.createdAt,\n      note.updatedAt,\n      note.type,\n      note.isPrivate ? 1 : 0,\n    ];\n\n    await this.database.executeSql(query, values);\n  }\n\n  /**\n   * Get notes for a contact\n   */\n  async getContactNotes(contactId: string): Promise<ContactNote[]> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const query = 'SELECT * FROM contact_notes WHERE contact_id = ? ORDER BY created_at DESC';\n    const [result] = await this.database.executeSql(query, [contactId]);\n\n    const notes: ContactNote[] = [];\n    for (let i = 0; i < result.rows.length; i++) {\n      const row = result.rows.item(i);\n      notes.push({\n        id: row.id,\n        contactId: row.contact_id,\n        content: row.content,\n        createdAt: row.created_at,\n        updatedAt: row.updated_at,\n        type: row.type,\n        isPrivate: row.is_private === 1,\n      });\n    }\n\n    return notes;\n  }\n\n  /**\n   * Save a contact interaction\n   */\n  async saveContactInteraction(interaction: ContactInteraction): Promise<void> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const query = `\n      INSERT OR REPLACE INTO contact_interactions (\n        id, contact_id, type, description, timestamp, metadata_json, duration, participants_json\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    const values = [\n      interaction.id,\n      interaction.contactId,\n      interaction.type,\n      interaction.description,\n      interaction.timestamp,\n      interaction.metadata ? JSON.stringify(interaction.metadata) : null,\n      interaction.duration,\n      interaction.participants ? JSON.stringify(interaction.participants) : null,\n    ];\n\n    await this.database.executeSql(query, values);\n\n    // Update last interaction timestamp\n    await this.database.executeSql(\n      'UPDATE contacts SET last_interaction_at = ? WHERE id = ?',\n      [interaction.timestamp, interaction.contactId]\n    );\n  }\n\n  /**\n   * Get interactions for a contact\n   */\n  async getContactInteractions(contactId: string): Promise<ContactInteraction[]> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const query = 'SELECT * FROM contact_interactions WHERE contact_id = ? ORDER BY timestamp DESC';\n    const [result] = await this.database.executeSql(query, [contactId]);\n\n    const interactions: ContactInteraction[] = [];\n    for (let i = 0; i < result.rows.length; i++) {\n      const row = result.rows.item(i);\n      interactions.push({\n        id: row.id,\n        contactId: row.contact_id,\n        type: row.type,\n        description: row.description,\n        timestamp: row.timestamp,\n        metadata: row.metadata_json ? JSON.parse(row.metadata_json) : undefined,\n        duration: row.duration,\n        participants: row.participants_json ? JSON.parse(row.participants_json) : undefined,\n      });\n    }\n\n    return interactions;\n  }\n\n  /**\n   * Find duplicate contacts\n   */\n  async findDuplicateContacts(threshold: number = 0.8): Promise<DuplicateContact[]> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const contacts = await this.getAllContacts();\n    const duplicates: DuplicateContact[] = [];\n\n    // Simple duplicate detection based on email and phone\n    for (let i = 0; i < contacts.length; i++) {\n      for (let j = i + 1; j < contacts.length; j++) {\n        const similarity = this.calculateContactSimilarity(contacts[i], contacts[j]);\n        \n        if (similarity >= threshold) {\n          const matchingFields = this.getMatchingFields(contacts[i], contacts[j]);\n          \n          duplicates.push({\n            id: `dup_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\n            contacts: [contacts[i], contacts[j]],\n            similarity,\n            suggestedAction: similarity > 0.9 ? 'merge' : 'manual_review',\n            matchingFields,\n            confidence: similarity,\n            detectedAt: new Date().toISOString(),\n          });\n        }\n      }\n    }\n\n    return duplicates;\n  }\n\n  /**\n   * Get contact analytics\n   */\n  async getContactAnalytics(): Promise<ContactAnalytics> {\n    if (!this.database) throw new Error('Database not initialized');\n\n    const [totalResult] = await this.database.executeSql('SELECT COUNT(*) as total FROM contacts');\n    const [verifiedResult] = await this.database.executeSql('SELECT COUNT(*) as verified FROM contacts WHERE is_verified = 1');\n    const [reviewResult] = await this.database.executeSql('SELECT COUNT(*) as review FROM contacts WHERE needs_review = 1');\n    const [avgConfidenceResult] = await this.database.executeSql('SELECT AVG(confidence) as avg_confidence FROM contacts');\n\n    // Get contacts by source\n    const [sourceResult] = await this.database.executeSql('SELECT source, COUNT(*) as count FROM contacts GROUP BY source');\n    const contactsBySource: Record<string, number> = {};\n    for (let i = 0; i < sourceResult.rows.length; i++) {\n      const row = sourceResult.rows.item(i);\n      contactsBySource[row.source] = row.count;\n    }\n\n    // Get recent interactions\n    const oneWeekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString();\n    const [recentInteractionsResult] = await this.database.executeSql(\n      'SELECT COUNT(*) as recent FROM contact_interactions WHERE timestamp > ?',\n      [oneWeekAgo]\n    );\n\n    return {\n      totalContacts: totalResult.rows.item(0).total,\n      verifiedContacts: verifiedResult.rows.item(0).verified,\n      contactsNeedingReview: reviewResult.rows.item(0).review,\n      averageConfidence: avgConfidenceResult.rows.item(0).avg_confidence || 0,\n      contactsBySource,\n      contactsByTag: {}, // TODO: Implement tag counting\n      contactsByCategory: {}, // TODO: Implement category counting\n      recentInteractions: recentInteractionsResult.rows.item(0).recent,\n      topTags: [], // TODO: Implement\n      topCategories: [], // TODO: Implement\n      growthStats: {\n        thisWeek: 0, // TODO: Implement\n        thisMonth: 0, // TODO: Implement\n        thisYear: 0, // TODO: Implement\n      },\n    };\n  }\n\n  /**\n   * Build WHERE clause for search filters\n   */\n  private buildWhereClause(filters: ContactSearchFilters): { whereClause: string; params: any[] } {\n    const conditions: string[] = [];\n    const params: any[] = [];\n\n    if (filters.query) {\n      conditions.push('(fields_json LIKE ? OR raw_text LIKE ?)');\n      params.push(`%${filters.query}%`, `%${filters.query}%`);\n    }\n\n    if (filters.source && filters.source.length > 0) {\n      const placeholders = filters.source.map(() => '?').join(',');\n      conditions.push(`source IN (${placeholders})`);\n      params.push(...filters.source);\n    }\n\n    if (filters.isVerified !== undefined) {\n      conditions.push('is_verified = ?');\n      params.push(filters.isVerified ? 1 : 0);\n    }\n\n    if (filters.needsReview !== undefined) {\n      conditions.push('needs_review = ?');\n      params.push(filters.needsReview ? 1 : 0);\n    }\n\n    if (filters.isFavorite !== undefined) {\n      conditions.push('is_favorite = ?');\n      params.push(filters.isFavorite ? 1 : 0);\n    }\n\n    if (filters.dateRange) {\n      const field = filters.dateRange.field;\n      conditions.push(`${field} BETWEEN ? AND ?`);\n      params.push(filters.dateRange.start, filters.dateRange.end);\n    }\n\n    if (filters.confidenceRange) {\n      conditions.push('confidence BETWEEN ? AND ?');\n      params.push(filters.confidenceRange.min, filters.confidenceRange.max);\n    }\n\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : '';\n    return { whereClause, params };\n  }\n\n  /**\n   * Get search facets\n   */\n  private async getSearchFacets(filters: ContactSearchFilters): Promise<ContactSearchResult['facets']> {\n    // Simplified implementation - would need more complex logic for real facets\n    return {\n      tags: [],\n      categories: [],\n      sources: [],\n    };\n  }\n\n  /**\n   * Map database row to Contact object\n   */\n  private mapRowToContact(row: any): Contact {\n    return {\n      id: row.id,\n      fields: JSON.parse(row.fields_json),\n      source: row.source,\n      confidence: row.confidence,\n      rawText: row.raw_text,\n      imageUri: row.image_uri,\n      createdAt: row.created_at,\n      updatedAt: row.updated_at,\n      tags: JSON.parse(row.tags_json),\n      isVerified: row.is_verified === 1,\n      needsReview: row.needs_review === 1,\n      isFavorite: row.is_favorite === 1,\n      lastInteractionAt: row.last_interaction_at,\n      syncStatus: row.sync_status,\n      conflictData: row.conflict_data_json ? JSON.parse(row.conflict_data_json) : undefined,\n    };\n  }\n\n  /**\n   * Update tag counts\n   */\n  private async updateTagCounts(tags: string[], isDelete: boolean = false): Promise<void> {\n    if (!this.database || tags.length === 0) return;\n\n    for (const tag of tags) {\n      const increment = isDelete ? -1 : 1;\n      await this.database.executeSql(\n        `INSERT INTO contact_tags (id, name, color, created_at, contact_count) \n         VALUES (?, ?, ?, ?, 1)\n         ON CONFLICT(name) DO UPDATE SET contact_count = contact_count + ?`,\n        [`tag_${tag}`, tag, '#007AFF', new Date().toISOString(), increment]\n      );\n    }\n  }\n\n  /**\n   * Calculate similarity between two contacts\n   */\n  private calculateContactSimilarity(contact1: Contact, contact2: Contact): number {\n    let matches = 0;\n    let totalFields = 0;\n\n    const getFieldValue = (contact: Contact, type: string): string => {\n      const field = contact.fields.find(f => f.type === type);\n      return field ? field.value.toLowerCase().trim() : '';\n    };\n\n    const fieldTypes = ['name', 'email', 'phone', 'company'];\n    \n    for (const fieldType of fieldTypes) {\n      const value1 = getFieldValue(contact1, fieldType);\n      const value2 = getFieldValue(contact2, fieldType);\n      \n      if (value1 && value2) {\n        totalFields++;\n        if (value1 === value2) {\n          matches++;\n        }\n      }\n    }\n\n    return totalFields > 0 ? matches / totalFields : 0;\n  }\n\n  /**\n   * Get matching fields between two contacts\n   */\n  private getMatchingFields(contact1: Contact, contact2: Contact): string[] {\n    const matchingFields: string[] = [];\n    \n    const getFieldValue = (contact: Contact, type: string): string => {\n      const field = contact.fields.find(f => f.type === type);\n      return field ? field.value.toLowerCase().trim() : '';\n    };\n\n    const fieldTypes = ['name', 'email', 'phone', 'company'];\n    \n    for (const fieldType of fieldTypes) {\n      const value1 = getFieldValue(contact1, fieldType);\n      const value2 = getFieldValue(contact2, fieldType);\n      \n      if (value1 && value2 && value1 === value2) {\n        matchingFields.push(fieldType);\n      }\n    }\n\n    return matchingFields;\n  }\n\n  /**\n   * Delete all contacts (for testing)\n   */\n  async deleteAllContacts(): Promise<void> {\n    if (!this.database) {\n      throw new Error('Database not initialized');\n    }\n\n    try {\n      await this.database.executeSql('DELETE FROM contact_interactions');\n      await this.database.executeSql('DELETE FROM contact_notes');\n      await this.database.executeSql('DELETE FROM contacts');\n      \n      trackEvent('database_cleared', {\n        operation: 'delete_all_contacts',\n      });\n    } catch (error) {\n      console.error('Error deleting all contacts:', error);\n      throw new Error(`Failed to delete all contacts: ${error.message}`);\n    }\n  }\n\n  /**\n   * Close database connection\n   */\n  async close(): Promise<void> {\n    if (this.database) {\n      await this.database.close();\n      this.database = null;\n    }\n  }\n}\n\nexport const contactDatabaseService = ContactDatabaseService.getInstance();\nexport default ContactDatabaseService;"],"mappings":"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","ignoreList":[]}