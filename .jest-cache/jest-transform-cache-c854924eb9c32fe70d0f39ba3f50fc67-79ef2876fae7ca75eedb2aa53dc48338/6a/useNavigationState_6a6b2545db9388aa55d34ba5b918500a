60437d1dc610e318815dc22dfabb8c58
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NavigationStateListenerProvider = NavigationStateListenerProvider;
exports.useNavigationState = useNavigationState;
var React = _interopRequireWildcard(require("react"));
var _useLatestCallback = _interopRequireDefault(require("use-latest-callback"));
var _withSelector = require("use-sync-external-store/with-selector");
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function useNavigationState(selector) {
  var stateListener = React.useContext(NavigationStateListenerContext);
  if (stateListener == null) {
    throw new Error("Couldn't get the navigation state. Is your component inside a navigator?");
  }
  var value = (0, _withSelector.useSyncExternalStoreWithSelector)(stateListener.subscribe, stateListener.getState, stateListener.getState, selector);
  return value;
}
function NavigationStateListenerProvider(_ref) {
  var state = _ref.state,
    children = _ref.children;
  var listeners = React.useRef([]);
  var getState = (0, _useLatestCallback.default)(function () {
    return state;
  });
  var subscribe = (0, _useLatestCallback.default)(function (callback) {
    listeners.current.push(callback);
    return function () {
      listeners.current = listeners.current.filter(function (cb) {
        return cb !== callback;
      });
    };
  });
  React.useEffect(function () {
    listeners.current.forEach(function (callback) {
      return callback();
    });
  }, [state]);
  var context = React.useMemo(function () {
    return {
      getState: getState,
      subscribe: subscribe
    };
  }, [getState, subscribe]);
  return (0, _jsxRuntime.jsx)(NavigationStateListenerContext.Provider, {
    value: context,
    children: children
  });
}
var NavigationStateListenerContext = React.createContext(undefined);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl91c2VMYXRlc3RDYWxsYmFjayIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfd2l0aFNlbGVjdG9yIiwiX2pzeFJ1bnRpbWUiLCJlIiwidCIsIldlYWtNYXAiLCJyIiwibiIsIl9fZXNNb2R1bGUiLCJvIiwiaSIsImYiLCJfX3Byb3RvX18iLCJkZWZhdWx0IiwiaGFzIiwiZ2V0Iiwic2V0IiwiX3QiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsInVzZU5hdmlnYXRpb25TdGF0ZSIsInNlbGVjdG9yIiwic3RhdGVMaXN0ZW5lciIsInVzZUNvbnRleHQiLCJOYXZpZ2F0aW9uU3RhdGVMaXN0ZW5lckNvbnRleHQiLCJFcnJvciIsInZhbHVlIiwidXNlU3luY0V4dGVybmFsU3RvcmVXaXRoU2VsZWN0b3IiLCJzdWJzY3JpYmUiLCJnZXRTdGF0ZSIsIk5hdmlnYXRpb25TdGF0ZUxpc3RlbmVyUHJvdmlkZXIiLCJfcmVmIiwic3RhdGUiLCJjaGlsZHJlbiIsImxpc3RlbmVycyIsInVzZVJlZiIsInVzZUxhdGVzdENhbGxiYWNrIiwiY2FsbGJhY2siLCJjdXJyZW50IiwicHVzaCIsImZpbHRlciIsImNiIiwidXNlRWZmZWN0IiwiZm9yRWFjaCIsImNvbnRleHQiLCJ1c2VNZW1vIiwiX2pzeCIsIlByb3ZpZGVyIiwiY3JlYXRlQ29udGV4dCIsInVuZGVmaW5lZCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VOYXZpZ2F0aW9uU3RhdGUudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBLElBQUFBLEtBQUEsR0FBQUMsdUJBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGtCQUFBLEdBQUFDLHNCQUFBLENBQUFGLE9BQUE7QUFDQSxJQUFBRyxhQUFB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