{"version":3,"names":["_child_process","require","fs","_interopRequireWildcard","path","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","describe","projectRoot","resolve","__dirname","androidDir","join","test","expect","existsSync","toBe","rootBuildGradlePath","appBuildGradlePath","gradlewPath","gradlewBatPath","gradleWrapperPath","manifestPath","javaActivityPath","kotlinActivityPath","buildGradleContent","readFileSync","toContain","settingsGradlePath","settingsContent","skip","jest","setTimeout","execSync","cwd","stdio","not","toThrow","apkPath","statSync","isFile","gradleWrapperPropsPath","wrapperProps","androidFastfilePath","androidAppfilePath","fastfilePath","fastfileContent"],"sources":["android-build.test.ts"],"sourcesContent":["/**\n * Android Build Verification Tests\n *\n * This test suite validates the Android project structure, configuration, and build capabilities\n * for a React Native application. It ensures that all necessary Android files, configurations,\n * and build tools are properly set up for successful Android app compilation and deployment.\n *\n * What these tests verify:\n * - Android project structure (gradle files, manifests, activities)\n * - Build configuration (SDK versions, package names, dependencies)\n * - Build process capabilities (gradle wrapper, build tools)\n * - Fastlane integration for automated builds and deployments\n * - Platform-specific requirements and compatibility settings\n *\n * These tests help catch Android build issues early in the development cycle.\n */\n\nimport { execSync } from 'child_process';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\ndescribe('Android Build Verification', () => {\n  const projectRoot = path.resolve(__dirname, '../..');\n  const androidDir = path.join(projectRoot, 'android');\n\n  // Test Group: Android Project Structure\n  // Validates that all essential Android project files and directories exist\n  describe('Android Project Structure', () => {\n    // Test: Android Directory Existence\n    // Verifies that the main android/ directory exists in the project root\n    test('should have Android project directory', () => {\n      expect(fs.existsSync(androidDir)).toBe(true);\n    });\n\n    // Test: Gradle Build Files\n    // Checks for both root-level and app-level build.gradle files required for Android builds\n    test('should have build.gradle files', () => {\n      const rootBuildGradlePath = path.join(androidDir, 'build.gradle');\n      const appBuildGradlePath = path.join(androidDir, 'app/build.gradle');\n\n      expect(fs.existsSync(rootBuildGradlePath)).toBe(true);\n      expect(fs.existsSync(appBuildGradlePath)).toBe(true);\n    });\n\n    // Test: Gradle Wrapper\n    // Validates that Gradle wrapper scripts and properties exist for consistent builds across environments\n    test('should have gradle wrapper', () => {\n      const gradlewPath = path.join(androidDir, 'gradlew');\n      const gradlewBatPath = path.join(androidDir, 'gradlew.bat');\n      const gradleWrapperPath = path.join(\n        androidDir,\n        'gradle/wrapper/gradle-wrapper.properties',\n      );\n\n      expect(fs.existsSync(gradlewPath) || fs.existsSync(gradlewBatPath)).toBe(\n        true,\n      );\n      expect(fs.existsSync(gradleWrapperPath)).toBe(true);\n    });\n\n    // Test: Android Manifest\n    // Ensures the AndroidManifest.xml file exists with app configuration and permissions\n    test('should have AndroidManifest.xml', () => {\n      const manifestPath = path.join(\n        androidDir,\n        'app/src/main/AndroidManifest.xml',\n      );\n      expect(fs.existsSync(manifestPath)).toBe(true);\n    });\n\n    // Test: Main Activity Class\n    // Verifies that the main activity exists in either Java or Kotlin format\n    test('should have MainActivity.java or MainActivity.kt', () => {\n      const javaActivityPath = path.join(\n        androidDir,\n        'app/src/main/java/com/digbiz5/MainActivity.java',\n      );\n      const kotlinActivityPath = path.join(\n        androidDir,\n        'app/src/main/java/com/digbiz5/MainActivity.kt',\n      );\n\n      expect(\n        fs.existsSync(javaActivityPath) || fs.existsSync(kotlinActivityPath),\n      ).toBe(true);\n    });\n  });\n\n  // Test Group: Android Configuration\n  // Validates Android app configuration settings and dependencies\n  describe('Android Configuration', () => {\n    // Test: Package Name Configuration\n    // Checks that the app package name is properly configured in build.gradle\n    test('should have correct package name in build.gradle', () => {\n      const appBuildGradlePath = path.join(androidDir, 'app/build.gradle');\n      const buildGradleContent = fs.readFileSync(appBuildGradlePath, 'utf8');\n\n      expect(buildGradleContent).toContain('applicationId');\n      expect(buildGradleContent).toContain('com.digbiz5');\n    });\n\n    // Test: Minimum SDK Version\n    // Verifies that minSdkVersion is configured for proper device compatibility\n    test('should have minimum SDK version configured', () => {\n      const appBuildGradlePath = path.join(androidDir, 'app/build.gradle');\n      const buildGradleContent = fs.readFileSync(appBuildGradlePath, 'utf8');\n\n      expect(buildGradleContent).toContain('minSdkVersion');\n      expect(buildGradleContent).toContain('targetSdkVersion');\n      expect(buildGradleContent).toContain('compileSdkVersion');\n    });\n\n    // Test: React Native Dependencies\n    // Ensures React Native Android dependencies are properly configured\n    test('should have React Native dependencies', () => {\n      const settingsGradlePath = path.join(androidDir, 'settings.gradle');\n\n      if (fs.existsSync(settingsGradlePath)) {\n        const settingsContent = fs.readFileSync(settingsGradlePath, 'utf8');\n        expect(settingsContent).toContain('react-native');\n      }\n    });\n  });\n\n  // Test Group: Android Build Process\n  // Validates build tools and processes for successful Android compilation\n  describe('Android Build Process', () => {\n    // Test: Debug APK Build (Skipped - Resource Intensive)\n    // This test would run './gradlew assembleDebug' to create a debug APK\n    // Skipped by default as it requires full Android SDK and takes significant time\n    // eslint-disable-next-line jest/no-disabled-tests\n    test.skip('should build debug APK successfully', () => {\n      jest.setTimeout(300000); // 5 minutes timeout\n\n      expect(() => {\n        execSync('./gradlew assembleDebug', {\n          cwd: androidDir,\n          stdio: 'pipe',\n        });\n      }).not.toThrow();\n\n      const apkPath = path.join(\n        androidDir,\n        'app/build/outputs/apk/debug/app-debug.apk',\n      );\n      expect(fs.existsSync(apkPath)).toBe(true);\n    }, 300000);\n\n    // Test: Gradle Wrapper File Validation\n    // Checks that gradlew script exists (permissions may vary in CI environments)\n    test('should have gradlew script file', () => {\n      const gradlewPath = path.join(androidDir, 'gradlew');\n      const gradlewBatPath = path.join(androidDir, 'gradlew.bat');\n\n      // Either Unix gradlew or Windows gradlew.bat should exist\n      expect(fs.existsSync(gradlewPath) || fs.existsSync(gradlewBatPath)).toBe(\n        true,\n      );\n\n      // If gradlew exists on Unix, it should be a file (not directory)\n      if (fs.existsSync(gradlewPath)) {\n        expect(fs.statSync(gradlewPath).isFile()).toBe(true);\n      }\n    });\n\n    // Test: Gradle Wrapper Integrity\n    // Validates that Gradle wrapper properties contain valid configuration\n    test('should validate Gradle wrapper integrity', () => {\n      const gradleWrapperPropsPath = path.join(\n        androidDir,\n        'gradle/wrapper/gradle-wrapper.properties',\n      );\n      const wrapperProps = fs.readFileSync(gradleWrapperPropsPath, 'utf8');\n\n      expect(wrapperProps).toContain('distributionUrl');\n      expect(wrapperProps).toContain('gradle');\n    });\n  });\n\n  // Test Group: Android Fastlane Integration\n  // Validates Fastlane setup for automated Android builds and deployments\n  describe('Android Fastlane Integration', () => {\n    // Test: Fastlane Configuration Files\n    // Checks for Fastfile and Appfile in android/fastlane directory\n    test('should have Android Fastlane configuration', () => {\n      const androidFastfilePath = path.join(androidDir, 'fastlane/Fastfile');\n      const androidAppfilePath = path.join(androidDir, 'fastlane/Appfile');\n\n      expect(fs.existsSync(androidFastfilePath)).toBe(true);\n      expect(fs.existsSync(androidAppfilePath)).toBe(true);\n    });\n\n    // Test: Fastfile Content Validation\n    // Verifies that Fastfile contains required Android lanes and configuration\n    test('should have valid Fastfile for Android', () => {\n      const fastfilePath = path.join(androidDir, 'fastlane/Fastfile');\n      const fastfileContent = fs.readFileSync(fastfilePath, 'utf8');\n\n      expect(fastfileContent).toContain('platform :android');\n      expect(fastfileContent).toContain('gradle');\n      expect(fastfileContent).toContain('assembleDebug');\n    });\n  });\n});\n"],"mappings":"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","ignoreList":[]}