4d3cf56c8d087b79276f72808897e932
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
function cov_1c6cybqlpu() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\services\\connectionService.ts";
  var hash = "4406737cf7b961b288951eabb76e8920a7598050";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\services\\connectionService.ts",
    statementMap: {
      "0": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 44,
          column: 72
        }
      },
      "1": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "2": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 59,
          column: 8
        }
      },
      "3": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 63,
          column: 7
        }
      },
      "4": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 82
        }
      },
      "5": {
        start: {
          line: 65,
          column: 46
        },
        end: {
          line: 65,
          column: 67
        }
      },
      "6": {
        start: {
          line: 66,
          column: 6
        },
        end: {
          line: 66,
          column: 18
        }
      },
      "7": {
        start: {
          line: 68,
          column: 6
        },
        end: {
          line: 68,
          column: 64
        }
      },
      "8": {
        start: {
          line: 69,
          column: 6
        },
        end: {
          line: 69,
          column: 18
        }
      },
      "9": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 99,
          column: 5
        }
      },
      "10": {
        start: {
          line: 78,
          column: 23
        },
        end: {
          line: 88,
          column: 8
        }
      },
      "11": {
        start: {
          line: 90,
          column: 6
        },
        end: {
          line: 92,
          column: 7
        }
      },
      "12": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 84
        }
      },
      "13": {
        start: {
          line: 94,
          column: 45
        },
        end: {
          line: 94,
          column: 66
        }
      },
      "14": {
        start: {
          line: 95,
          column: 6
        },
        end: {
          line: 95,
          column: 18
        }
      },
      "15": {
        start: {
          line: 97,
          column: 6
        },
        end: {
          line: 97,
          column: 65
        }
      },
      "16": {
        start: {
          line: 98,
          column: 6
        },
        end: {
          line: 98,
          column: 18
        }
      },
      "17": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "18": {
        start: {
          line: 107,
          column: 26
        },
        end: {
          line: 107,
          column: 47
        }
      },
      "19": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 74
        }
      },
      "20": {
        start: {
          line: 109,
          column: 23
        },
        end: {
          line: 109,
          column: 74
        }
      },
      "21": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 77
        }
      },
      "22": {
        start: {
          line: 110,
          column: 24
        },
        end: {
          line: 110,
          column: 77
        }
      },
      "23": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "24": {
        start: {
          line: 111,
          column: 25
        },
        end: {
          line: 111,
          column: 69
        }
      },
      "25": {
        start: {
          line: 112,
          column: 6
        },
        end: {
          line: 112,
          column: 69
        }
      },
      "26": {
        start: {
          line: 112,
          column: 25
        },
        end: {
          line: 112,
          column: 69
        }
      },
      "27": {
        start: {
          line: 113,
          column: 6
        },
        end: {
          line: 113,
          column: 78
        }
      },
      "28": {
        start: {
          line: 113,
          column: 28
        },
        end: {
          line: 113,
          column: 78
        }
      },
      "29": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 117,
          column: 7
        }
      },
      "30": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 70
        }
      },
      "31": {
        start: {
          line: 116,
          column: 35
        },
        end: {
          line: 116,
          column: 68
        }
      },
      "32": {
        start: {
          line: 119,
          column: 23
        },
        end: {
          line: 125,
          column: 8
        }
      },
      "33": {
        start: {
          line: 127,
          column: 6
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "34": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 74
        }
      },
      "35": {
        start: {
          line: 131,
          column: 40
        },
        end: {
          line: 131,
          column: 61
        }
      },
      "36": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 132,
          column: 18
        }
      },
      "37": {
        start: {
          line: 134,
          column: 6
        },
        end: {
          line: 134,
          column: 57
        }
      },
      "38": {
        start: {
          line: 135,
          column: 6
        },
        end: {
          line: 135,
          column: 18
        }
      },
      "39": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 170,
          column: 5
        }
      },
      "40": {
        start: {
          line: 144,
          column: 26
        },
        end: {
          line: 144,
          column: 47
        }
      },
      "41": {
        start: {
          line: 146,
          column: 6
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "42": {
        start: {
          line: 146,
          column: 23
        },
        end: {
          line: 146,
          column: 74
        }
      },
      "43": {
        start: {
          line: 147,
          column: 6
        },
        end: {
          line: 147,
          column: 77
        }
      },
      "44": {
        start: {
          line: 147,
          column: 24
        },
        end: {
          line: 147,
          column: 77
        }
      },
      "45": {
        start: {
          line: 148,
          column: 6
        },
        end: {
          line: 148,
          column: 63
        }
      },
      "46": {
        start: {
          line: 148,
          column: 23
        },
        end: {
          line: 148,
          column: 63
        }
      },
      "47": {
        start: {
          line: 149,
          column: 6
        },
        end: {
          line: 149,
          column: 69
        }
      },
      "48": {
        start: {
          line: 149,
          column: 25
        },
        end: {
          line: 149,
          column: 69
        }
      },
      "49": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "50": {
        start: {
          line: 150,
          column: 25
        },
        end: {
          line: 150,
          column: 69
        }
      },
      "51": {
        start: {
          line: 151,
          column: 6
        },
        end: {
          line: 151,
          column: 78
        }
      },
      "52": {
        start: {
          line: 151,
          column: 28
        },
        end: {
          line: 151,
          column: 78
        }
      },
      "53": {
        start: {
          line: 153,
          column: 23
        },
        end: {
          line: 159,
          column: 8
        }
      },
      "54": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 163,
          column: 7
        }
      },
      "55": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 82
        }
      },
      "56": {
        start: {
          line: 165,
          column: 47
        },
        end: {
          line: 165,
          column: 68
        }
      },
      "57": {
        start: {
          line: 166,
          column: 6
        },
        end: {
          line: 166,
          column: 18
        }
      },
      "58": {
        start: {
          line: 168,
          column: 6
        },
        end: {
          line: 168,
          column: 65
        }
      },
      "59": {
        start: {
          line: 169,
          column: 6
        },
        end: {
          line: 169,
          column: 18
        }
      },
      "60": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "61": {
        start: {
          line: 178,
          column: 26
        },
        end: {
          line: 180,
          column: 8
        }
      },
      "62": {
        start: {
          line: 182,
          column: 23
        },
        end: {
          line: 188,
          column: 8
        }
      },
      "63": {
        start: {
          line: 190,
          column: 6
        },
        end: {
          line: 192,
          column: 7
        }
      },
      "64": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 81
        }
      },
      "65": {
        start: {
          line: 194,
          column: 46
        },
        end: {
          line: 194,
          column: 67
        }
      },
      "66": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 18
        }
      },
      "67": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 64
        }
      },
      "68": {
        start: {
          line: 198,
          column: 6
        },
        end: {
          line: 198,
          column: 18
        }
      },
      "69": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "70": {
        start: {
          line: 207,
          column: 23
        },
        end: {
          line: 213,
          column: 8
        }
      },
      "71": {
        start: {
          line: 215,
          column: 6
        },
        end: {
          line: 217,
          column: 7
        }
      },
      "72": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 216,
          column: 79
        }
      },
      "73": {
        start: {
          line: 219,
          column: 44
        },
        end: {
          line: 219,
          column: 65
        }
      },
      "74": {
        start: {
          line: 220,
          column: 6
        },
        end: {
          line: 220,
          column: 18
        }
      },
      "75": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 222,
          column: 62
        }
      },
      "76": {
        start: {
          line: 223,
          column: 6
        },
        end: {
          line: 223,
          column: 18
        }
      },
      "77": {
        start: {
          line: 231,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "78": {
        start: {
          line: 232,
          column: 23
        },
        end: {
          line: 242,
          column: 8
        }
      },
      "79": {
        start: {
          line: 244,
          column: 6
        },
        end: {
          line: 246,
          column: 7
        }
      },
      "80": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 245,
          column: 76
        }
      },
      "81": {
        start: {
          line: 248,
          column: 46
        },
        end: {
          line: 248,
          column: 67
        }
      },
      "82": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 249,
          column: 18
        }
      },
      "83": {
        start: {
          line: 251,
          column: 6
        },
        end: {
          line: 251,
          column: 57
        }
      },
      "84": {
        start: {
          line: 252,
          column: 6
        },
        end: {
          line: 252,
          column: 18
        }
      },
      "85": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 279,
          column: 5
        }
      },
      "86": {
        start: {
          line: 261,
          column: 23
        },
        end: {
          line: 268,
          column: 8
        }
      },
      "87": {
        start: {
          line: 270,
          column: 6
        },
        end: {
          line: 272,
          column: 7
        }
      },
      "88": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 69
        }
      },
      "89": {
        start: {
          line: 274,
          column: 38
        },
        end: {
          line: 274,
          column: 59
        }
      },
      "90": {
        start: {
          line: 275,
          column: 6
        },
        end: {
          line: 275,
          column: 18
        }
      },
      "91": {
        start: {
          line: 277,
          column: 6
        },
        end: {
          line: 277,
          column: 51
        }
      },
      "92": {
        start: {
          line: 278,
          column: 6
        },
        end: {
          line: 278,
          column: 18
        }
      },
      "93": {
        start: {
          line: 286,
          column: 4
        },
        end: {
          line: 305,
          column: 5
        }
      },
      "94": {
        start: {
          line: 287,
          column: 23
        },
        end: {
          line: 294,
          column: 8
        }
      },
      "95": {
        start: {
          line: 296,
          column: 6
        },
        end: {
          line: 298,
          column: 7
        }
      },
      "96": {
        start: {
          line: 297,
          column: 8
        },
        end: {
          line: 297,
          column: 71
        }
      },
      "97": {
        start: {
          line: 300,
          column: 40
        },
        end: {
          line: 300,
          column: 61
        }
      },
      "98": {
        start: {
          line: 301,
          column: 6
        },
        end: {
          line: 301,
          column: 18
        }
      },
      "99": {
        start: {
          line: 303,
          column: 6
        },
        end: {
          line: 303,
          column: 53
        }
      },
      "100": {
        start: {
          line: 304,
          column: 6
        },
        end: {
          line: 304,
          column: 18
        }
      },
      "101": {
        start: {
          line: 312,
          column: 4
        },
        end: {
          line: 335,
          column: 5
        }
      },
      "102": {
        start: {
          line: 313,
          column: 26
        },
        end: {
          line: 316,
          column: 8
        }
      },
      "103": {
        start: {
          line: 318,
          column: 23
        },
        end: {
          line: 324,
          column: 8
        }
      },
      "104": {
        start: {
          line: 326,
          column: 6
        },
        end: {
          line: 328,
          column: 7
        }
      },
      "105": {
        start: {
          line: 327,
          column: 8
        },
        end: {
          line: 327,
          column: 76
        }
      },
      "106": {
        start: {
          line: 330,
          column: 41
        },
        end: {
          line: 330,
          column: 62
        }
      },
      "107": {
        start: {
          line: 331,
          column: 6
        },
        end: {
          line: 331,
          column: 18
        }
      },
      "108": {
        start: {
          line: 333,
          column: 6
        },
        end: {
          line: 333,
          column: 59
        }
      },
      "109": {
        start: {
          line: 334,
          column: 6
        },
        end: {
          line: 334,
          column: 18
        }
      },
      "110": {
        start: {
          line: 342,
          column: 4
        },
        end: {
          line: 365,
          column: 5
        }
      },
      "111": {
        start: {
          line: 343,
          column: 26
        },
        end: {
          line: 346,
          column: 8
        }
      },
      "112": {
        start: {
          line: 348,
          column: 23
        },
        end: {
          line: 354,
          column: 8
        }
      },
      "113": {
        start: {
          line: 356,
          column: 6
        },
        end: {
          line: 358,
          column: 7
        }
      },
      "114": {
        start: {
          line: 357,
          column: 8
        },
        end: {
          line: 357,
          column: 87
        }
      },
      "115": {
        start: {
          line: 360,
          column: 52
        },
        end: {
          line: 360,
          column: 73
        }
      },
      "116": {
        start: {
          line: 361,
          column: 6
        },
        end: {
          line: 361,
          column: 18
        }
      },
      "117": {
        start: {
          line: 363,
          column: 6
        },
        end: {
          line: 363,
          column: 70
        }
      },
      "118": {
        start: {
          line: 364,
          column: 6
        },
        end: {
          line: 364,
          column: 18
        }
      },
      "119": {
        start: {
          line: 372,
          column: 4
        },
        end: {
          line: 391,
          column: 5
        }
      },
      "120": {
        start: {
          line: 373,
          column: 23
        },
        end: {
          line: 380,
          column: 8
        }
      },
      "121": {
        start: {
          line: 382,
          column: 6
        },
        end: {
          line: 384,
          column: 7
        }
      },
      "122": {
        start: {
          line: 383,
          column: 8
        },
        end: {
          line: 383,
          column: 85
        }
      },
      "123": {
        start: {
          line: 386,
          column: 45
        },
        end: {
          line: 386,
          column: 66
        }
      },
      "124": {
        start: {
          line: 387,
          column: 6
        },
        end: {
          line: 387,
          column: 18
        }
      },
      "125": {
        start: {
          line: 389,
          column: 6
        },
        end: {
          line: 389,
          column: 67
        }
      },
      "126": {
        start: {
          line: 390,
          column: 6
        },
        end: {
          line: 390,
          column: 18
        }
      },
      "127": {
        start: {
          line: 398,
          column: 4
        },
        end: {
          line: 421,
          column: 5
        }
      },
      "128": {
        start: {
          line: 399,
          column: 26
        },
        end: {
          line: 402,
          column: 8
        }
      },
      "129": {
        start: {
          line: 404,
          column: 23
        },
        end: {
          line: 410,
          column: 8
        }
      },
      "130": {
        start: {
          line: 412,
          column: 6
        },
        end: {
          line: 414,
          column: 7
        }
      },
      "131": {
        start: {
          line: 413,
          column: 8
        },
        end: {
          line: 413,
          column: 82
        }
      },
      "132": {
        start: {
          line: 416,
          column: 47
        },
        end: {
          line: 416,
          column: 68
        }
      },
      "133": {
        start: {
          line: 417,
          column: 6
        },
        end: {
          line: 417,
          column: 18
        }
      },
      "134": {
        start: {
          line: 419,
          column: 6
        },
        end: {
          line: 419,
          column: 65
        }
      },
      "135": {
        start: {
          line: 420,
          column: 6
        },
        end: {
          line: 420,
          column: 18
        }
      },
      "136": {
        start: {
          line: 428,
          column: 4
        },
        end: {
          line: 451,
          column: 5
        }
      },
      "137": {
        start: {
          line: 429,
          column: 26
        },
        end: {
          line: 432,
          column: 8
        }
      },
      "138": {
        start: {
          line: 434,
          column: 23
        },
        end: {
          line: 440,
          column: 8
        }
      },
      "139": {
        start: {
          line: 442,
          column: 6
        },
        end: {
          line: 444,
          column: 7
        }
      },
      "140": {
        start: {
          line: 443,
          column: 8
        },
        end: {
          line: 443,
          column: 92
        }
      },
      "141": {
        start: {
          line: 446,
          column: 61
        },
        end: {
          line: 446,
          column: 82
        }
      },
      "142": {
        start: {
          line: 447,
          column: 6
        },
        end: {
          line: 447,
          column: 18
        }
      },
      "143": {
        start: {
          line: 449,
          column: 6
        },
        end: {
          line: 449,
          column: 75
        }
      },
      "144": {
        start: {
          line: 450,
          column: 6
        },
        end: {
          line: 450,
          column: 18
        }
      },
      "145": {
        start: {
          line: 458,
          column: 4
        },
        end: {
          line: 477,
          column: 5
        }
      },
      "146": {
        start: {
          line: 459,
          column: 23
        },
        end: {
          line: 466,
          column: 8
        }
      },
      "147": {
        start: {
          line: 468,
          column: 6
        },
        end: {
          line: 470,
          column: 7
        }
      },
      "148": {
        start: {
          line: 469,
          column: 8
        },
        end: {
          line: 469,
          column: 77
        }
      },
      "149": {
        start: {
          line: 472,
          column: 45
        },
        end: {
          line: 472,
          column: 66
        }
      },
      "150": {
        start: {
          line: 473,
          column: 6
        },
        end: {
          line: 473,
          column: 18
        }
      },
      "151": {
        start: {
          line: 475,
          column: 6
        },
        end: {
          line: 475,
          column: 59
        }
      },
      "152": {
        start: {
          line: 476,
          column: 6
        },
        end: {
          line: 476,
          column: 18
        }
      },
      "153": {
        start: {
          line: 484,
          column: 4
        },
        end: {
          line: 526,
          column: 5
        }
      },
      "154": {
        start: {
          line: 485,
          column: 26
        },
        end: {
          line: 485,
          column: 47
        }
      },
      "155": {
        start: {
          line: 487,
          column: 6
        },
        end: {
          line: 487,
          column: 66
        }
      },
      "156": {
        start: {
          line: 487,
          column: 24
        },
        end: {
          line: 487,
          column: 66
        }
      },
      "157": {
        start: {
          line: 488,
          column: 6
        },
        end: {
          line: 488,
          column: 74
        }
      },
      "158": {
        start: {
          line: 488,
          column: 23
        },
        end: {
          line: 488,
          column: 74
        }
      },
      "159": {
        start: {
          line: 489,
          column: 6
        },
        end: {
          line: 489,
          column: 77
        }
      },
      "160": {
        start: {
          line: 489,
          column: 24
        },
        end: {
          line: 489,
          column: 77
        }
      },
      "161": {
        start: {
          line: 490,
          column: 6
        },
        end: {
          line: 490,
          column: 69
        }
      },
      "162": {
        start: {
          line: 490,
          column: 25
        },
        end: {
          line: 490,
          column: 69
        }
      },
      "163": {
        start: {
          line: 491,
          column: 6
        },
        end: {
          line: 491,
          column: 78
        }
      },
      "164": {
        start: {
          line: 491,
          column: 28
        },
        end: {
          line: 491,
          column: 78
        }
      },
      "165": {
        start: {
          line: 494,
          column: 6
        },
        end: {
          line: 507,
          column: 7
        }
      },
      "166": {
        start: {
          line: 495,
          column: 8
        },
        end: {
          line: 495,
          column: 90
        }
      },
      "167": {
        start: {
          line: 495,
          column: 33
        },
        end: {
          line: 495,
          column: 90
        }
      },
      "168": {
        start: {
          line: 496,
          column: 8
        },
        end: {
          line: 496,
          column: 99
        }
      },
      "169": {
        start: {
          line: 496,
          column: 36
        },
        end: {
          line: 496,
          column: 99
        }
      },
      "170": {
        start: {
          line: 497,
          column: 8
        },
        end: {
          line: 497,
          column: 93
        }
      },
      "171": {
        start: {
          line: 497,
          column: 34
        },
        end: {
          line: 497,
          column: 93
        }
      },
      "172": {
        start: {
          line: 498,
          column: 8
        },
        end: {
          line: 498,
          column: 102
        }
      },
      "173": {
        start: {
          line: 498,
          column: 37
        },
        end: {
          line: 498,
          column: 102
        }
      },
      "174": {
        start: {
          line: 499,
          column: 8
        },
        end: {
          line: 499,
          column: 102
        }
      },
      "175": {
        start: {
          line: 499,
          column: 37
        },
        end: {
          line: 499,
          column: 102
        }
      },
      "176": {
        start: {
          line: 500,
          column: 8
        },
        end: {
          line: 500,
          column: 127
        }
      },
      "177": {
        start: {
          line: 500,
          column: 51
        },
        end: {
          line: 500,
          column: 127
        }
      },
      "178": {
        start: {
          line: 501,
          column: 8
        },
        end: {
          line: 501,
          column: 141
        }
      },
      "179": {
        start: {
          line: 501,
          column: 50
        },
        end: {
          line: 501,
          column: 141
        }
      },
      "180": {
        start: {
          line: 502,
          column: 8
        },
        end: {
          line: 502,
          column: 138
        }
      },
      "181": {
        start: {
          line: 502,
          column: 49
        },
        end: {
          line: 502,
          column: 138
        }
      },
      "182": {
        start: {
          line: 504,
          column: 8
        },
        end: {
          line: 506,
          column: 9
        }
      },
      "183": {
        start: {
          line: 505,
          column: 10
        },
        end: {
          line: 505,
          column: 89
        }
      },
      "184": {
        start: {
          line: 505,
          column: 45
        },
        end: {
          line: 505,
          column: 87
        }
      },
      "185": {
        start: {
          line: 509,
          column: 23
        },
        end: {
          line: 515,
          column: 8
        }
      },
      "186": {
        start: {
          line: 517,
          column: 6
        },
        end: {
          line: 519,
          column: 7
        }
      },
      "187": {
        start: {
          line: 518,
          column: 8
        },
        end: {
          line: 518,
          column: 77
        }
      },
      "188": {
        start: {
          line: 521,
          column: 40
        },
        end: {
          line: 521,
          column: 61
        }
      },
      "189": {
        start: {
          line: 522,
          column: 6
        },
        end: {
          line: 522,
          column: 18
        }
      },
      "190": {
        start: {
          line: 524,
          column: 6
        },
        end: {
          line: 524,
          column: 59
        }
      },
      "191": {
        start: {
          line: 525,
          column: 6
        },
        end: {
          line: 525,
          column: 18
        }
      },
      "192": {
        start: {
          line: 533,
          column: 4
        },
        end: {
          line: 552,
          column: 5
        }
      },
      "193": {
        start: {
          line: 534,
          column: 23
        },
        end: {
          line: 541,
          column: 8
        }
      },
      "194": {
        start: {
          line: 543,
          column: 6
        },
        end: {
          line: 545,
          column: 7
        }
      },
      "195": {
        start: {
          line: 544,
          column: 8
        },
        end: {
          line: 544,
          column: 76
        }
      },
      "196": {
        start: {
          line: 547,
          column: 19
        },
        end: {
          line: 547,
          column: 40
        }
      },
      "197": {
        start: {
          line: 548,
          column: 6
        },
        end: {
          line: 548,
          column: 18
        }
      },
      "198": {
        start: {
          line: 550,
          column: 6
        },
        end: {
          line: 550,
          column: 57
        }
      },
      "199": {
        start: {
          line: 551,
          column: 6
        },
        end: {
          line: 551,
          column: 18
        }
      },
      "200": {
        start: {
          line: 559,
          column: 4
        },
        end: {
          line: 577,
          column: 5
        }
      },
      "201": {
        start: {
          line: 560,
          column: 23
        },
        end: {
          line: 566,
          column: 8
        }
      },
      "202": {
        start: {
          line: 568,
          column: 6
        },
        end: {
          line: 570,
          column: 7
        }
      },
      "203": {
        start: {
          line: 569,
          column: 8
        },
        end: {
          line: 569,
          column: 80
        }
      },
      "204": {
        start: {
          line: 572,
          column: 19
        },
        end: {
          line: 572,
          column: 40
        }
      },
      "205": {
        start: {
          line: 573,
          column: 6
        },
        end: {
          line: 573,
          column: 18
        }
      },
      "206": {
        start: {
          line: 575,
          column: 6
        },
        end: {
          line: 575,
          column: 63
        }
      },
      "207": {
        start: {
          line: 576,
          column: 6
        },
        end: {
          line: 576,
          column: 18
        }
      },
      "208": {
        start: {
          line: 586,
          column: 4
        },
        end: {
          line: 586,
          column: 36
        }
      },
      "209": {
        start: {
          line: 598,
          column: 4
        },
        end: {
          line: 613,
          column: 5
        }
      },
      "210": {
        start: {
          line: 599,
          column: 6
        },
        end: {
          line: 609,
          column: 9
        }
      },
      "211": {
        start: {
          line: 611,
          column: 6
        },
        end: {
          line: 611,
          column: 69
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 43,
            column: 3
          }
        },
        loc: {
          start: {
            line: 43,
            column: 16
          },
          end: {
            line: 45,
            column: 3
          }
        },
        line: 43
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 50,
            column: 2
          },
          end: {
            line: 50,
            column: 3
          }
        },
        loc: {
          start: {
            line: 50,
            column: 102
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 50
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 76,
            column: 2
          },
          end: {
            line: 76,
            column: 3
          }
        },
        loc: {
          start: {
            line: 76,
            column: 107
          },
          end: {
            line: 100,
            column: 3
          }
        },
        line: 76
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 105,
            column: 2
          },
          end: {
            line: 105,
            column: 3
          }
        },
        loc: {
          start: {
            line: 105,
            column: 84
          },
          end: {
            line: 137,
            column: 3
          }
        },
        line: 105
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 28
          },
          end: {
            line: 116,
            column: 29
          }
        },
        loc: {
          start: {
            line: 116,
            column: 35
          },
          end: {
            line: 116,
            column: 68
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 142,
            column: 2
          },
          end: {
            line: 142,
            column: 3
          }
        },
        loc: {
          start: {
            line: 142,
            column: 105
          },
          end: {
            line: 171,
            column: 3
          }
        },
        line: 142
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 176,
            column: 2
          },
          end: {
            line: 176,
            column: 3
          }
        },
        loc: {
          start: {
            line: 176,
            column: 101
          },
          end: {
            line: 200,
            column: 3
          }
        },
        line: 176
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 205,
            column: 2
          },
          end: {
            line: 205,
            column: 3
          }
        },
        loc: {
          start: {
            line: 205,
            column: 63
          },
          end: {
            line: 225,
            column: 3
          }
        },
        line: 205
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 230,
            column: 2
          },
          end: {
            line: 230,
            column: 3
          }
        },
        loc: {
          start: {
            line: 230,
            column: 103
          },
          end: {
            line: 254,
            column: 3
          }
        },
        line: 230
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 259,
            column: 2
          },
          end: {
            line: 259,
            column: 3
          }
        },
        loc: {
          start: {
            line: 259,
            column: 78
          },
          end: {
            line: 280,
            column: 3
          }
        },
        line: 259
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 285,
            column: 2
          },
          end: {
            line: 285,
            column: 3
          }
        },
        loc: {
          start: {
            line: 285,
            column: 86
          },
          end: {
            line: 306,
            column: 3
          }
        },
        line: 285
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 311,
            column: 2
          },
          end: {
            line: 311,
            column: 3
          }
        },
        loc: {
          start: {
            line: 311,
            column: 93
          },
          end: {
            line: 336,
            column: 3
          }
        },
        line: 311
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 341,
            column: 2
          },
          end: {
            line: 341,
            column: 3
          }
        },
        loc: {
          start: {
            line: 341,
            column: 115
          },
          end: {
            line: 366,
            column: 3
          }
        },
        line: 341
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 371,
            column: 2
          },
          end: {
            line: 371,
            column: 3
          }
        },
        loc: {
          start: {
            line: 371,
            column: 105
          },
          end: {
            line: 392,
            column: 3
          }
        },
        line: 371
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 397,
            column: 2
          },
          end: {
            line: 397,
            column: 3
          }
        },
        loc: {
          start: {
            line: 397,
            column: 105
          },
          end: {
            line: 422,
            column: 3
          }
        },
        line: 397
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 427,
            column: 2
          },
          end: {
            line: 427,
            column: 3
          }
        },
        loc: {
          start: {
            line: 427,
            column: 133
          },
          end: {
            line: 452,
            column: 3
          }
        },
        line: 427
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 457,
            column: 2
          },
          end: {
            line: 457,
            column: 3
          }
        },
        loc: {
          start: {
            line: 457,
            column: 101
          },
          end: {
            line: 478,
            column: 3
          }
        },
        line: 457
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 483,
            column: 2
          },
          end: {
            line: 483,
            column: 3
          }
        },
        loc: {
          start: {
            line: 483,
            column: 88
          },
          end: {
            line: 527,
            column: 3
          }
        },
        line: 483
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 505,
            column: 38
          },
          end: {
            line: 505,
            column: 39
          }
        },
        loc: {
          start: {
            line: 505,
            column: 45
          },
          end: {
            line: 505,
            column: 87
          }
        },
        line: 505
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 532,
            column: 2
          },
          end: {
            line: 532,
            column: 3
          }
        },
        loc: {
          start: {
            line: 532,
            column: 165
          },
          end: {
            line: 553,
            column: 3
          }
        },
        line: 532
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 558,
            column: 2
          },
          end: {
            line: 558,
            column: 3
          }
        },
        loc: {
          start: {
            line: 558,
            column: 155
          },
          end: {
            line: 578,
            column: 3
          }
        },
        line: 558
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 583,
            column: 2
          },
          end: {
            line: 583,
            column: 3
          }
        },
        loc: {
          start: {
            line: 583,
            column: 48
          },
          end: {
            line: 587,
            column: 3
          }
        },
        line: 583
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 592,
            column: 2
          },
          end: {
            line: 592,
            column: 3
          }
        },
        loc: {
          start: {
            line: 597,
            column: 20
          },
          end: {
            line: 614,
            column: 3
          }
        },
        line: 597
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 44,
            column: 71
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 44,
            column: 43
          }
        }, {
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 71
          }
        }],
        line: 44
      },
      "1": {
        loc: {
          start: {
            line: 61,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "2": {
        loc: {
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 92,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "3": {
        loc: {
          start: {
            line: 105,
            column: 23
          },
          end: {
            line: 105,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 50
          },
          end: {
            line: 105,
            column: 52
          }
        }],
        line: 105
      },
      "4": {
        loc: {
          start: {
            line: 109,
            column: 6
          },
          end: {
            line: 109,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 6
          },
          end: {
            line: 109,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "5": {
        loc: {
          start: {
            line: 110,
            column: 6
          },
          end: {
            line: 110,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 6
          },
          end: {
            line: 110,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 110
      },
      "6": {
        loc: {
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 111,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 111,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "7": {
        loc: {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 112,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 112,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 112
      },
      "8": {
        loc: {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 113,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 113,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 113
      },
      "9": {
        loc: {
          start: {
            line: 115,
            column: 6
          },
          end: {
            line: 117,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 115,
            column: 6
          },
          end: {
            line: 117,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 115
      },
      "10": {
        loc: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 129,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 129,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 127
      },
      "11": {
        loc: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 142,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 142,
            column: 64
          },
          end: {
            line: 142,
            column: 66
          }
        }],
        line: 142
      },
      "12": {
        loc: {
          start: {
            line: 146,
            column: 6
          },
          end: {
            line: 146,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 146,
            column: 6
          },
          end: {
            line: 146,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 146
      },
      "13": {
        loc: {
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 147,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 147,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 147
      },
      "14": {
        loc: {
          start: {
            line: 148,
            column: 6
          },
          end: {
            line: 148,
            column: 63
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 6
          },
          end: {
            line: 148,
            column: 63
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 148
      },
      "15": {
        loc: {
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 149,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 6
          },
          end: {
            line: 149,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "16": {
        loc: {
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 150,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 150,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "17": {
        loc: {
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 151,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 6
          },
          end: {
            line: 151,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 151
      },
      "18": {
        loc: {
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 163,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 161
      },
      "19": {
        loc: {
          start: {
            line: 176,
            column: 45
          },
          end: {
            line: 176,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 176,
            column: 61
          },
          end: {
            line: 176,
            column: 63
          }
        }],
        line: 176
      },
      "20": {
        loc: {
          start: {
            line: 190,
            column: 6
          },
          end: {
            line: 192,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 190,
            column: 6
          },
          end: {
            line: 192,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 190
      },
      "21": {
        loc: {
          start: {
            line: 215,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 215,
            column: 6
          },
          end: {
            line: 217,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 215
      },
      "22": {
        loc: {
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 246,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 246,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "23": {
        loc: {
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 272,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 270,
            column: 6
          },
          end: {
            line: 272,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 270
      },
      "24": {
        loc: {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 298,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 296
      },
      "25": {
        loc: {
          start: {
            line: 311,
            column: 24
          },
          end: {
            line: 311,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 311,
            column: 39
          },
          end: {
            line: 311,
            column: 40
          }
        }],
        line: 311
      },
      "26": {
        loc: {
          start: {
            line: 311,
            column: 42
          },
          end: {
            line: 311,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 311,
            column: 58
          },
          end: {
            line: 311,
            column: 60
          }
        }],
        line: 311
      },
      "27": {
        loc: {
          start: {
            line: 326,
            column: 6
          },
          end: {
            line: 328,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 326,
            column: 6
          },
          end: {
            line: 328,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 326
      },
      "28": {
        loc: {
          start: {
            line: 341,
            column: 35
          },
          end: {
            line: 341,
            column: 51
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 341,
            column: 50
          },
          end: {
            line: 341,
            column: 51
          }
        }],
        line: 341
      },
      "29": {
        loc: {
          start: {
            line: 341,
            column: 53
          },
          end: {
            line: 341,
            column: 71
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 341,
            column: 69
          },
          end: {
            line: 341,
            column: 71
          }
        }],
        line: 341
      },
      "30": {
        loc: {
          start: {
            line: 356,
            column: 6
          },
          end: {
            line: 358,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 356,
            column: 6
          },
          end: {
            line: 358,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 356
      },
      "31": {
        loc: {
          start: {
            line: 382,
            column: 6
          },
          end: {
            line: 384,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 382,
            column: 6
          },
          end: {
            line: 384,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 382
      },
      "32": {
        loc: {
          start: {
            line: 397,
            column: 30
          },
          end: {
            line: 397,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 397,
            column: 45
          },
          end: {
            line: 397,
            column: 46
          }
        }],
        line: 397
      },
      "33": {
        loc: {
          start: {
            line: 397,
            column: 48
          },
          end: {
            line: 397,
            column: 66
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 397,
            column: 64
          },
          end: {
            line: 397,
            column: 66
          }
        }],
        line: 397
      },
      "34": {
        loc: {
          start: {
            line: 412,
            column: 6
          },
          end: {
            line: 414,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 412,
            column: 6
          },
          end: {
            line: 414,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 412
      },
      "35": {
        loc: {
          start: {
            line: 427,
            column: 44
          },
          end: {
            line: 427,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 427,
            column: 59
          },
          end: {
            line: 427,
            column: 60
          }
        }],
        line: 427
      },
      "36": {
        loc: {
          start: {
            line: 427,
            column: 62
          },
          end: {
            line: 427,
            column: 80
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 427,
            column: 78
          },
          end: {
            line: 427,
            column: 80
          }
        }],
        line: 427
      },
      "37": {
        loc: {
          start: {
            line: 442,
            column: 6
          },
          end: {
            line: 444,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 442,
            column: 6
          },
          end: {
            line: 444,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 442
      },
      "38": {
        loc: {
          start: {
            line: 468,
            column: 6
          },
          end: {
            line: 470,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 468,
            column: 6
          },
          end: {
            line: 470,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 468
      },
      "39": {
        loc: {
          start: {
            line: 487,
            column: 6
          },
          end: {
            line: 487,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 487,
            column: 6
          },
          end: {
            line: 487,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 487
      },
      "40": {
        loc: {
          start: {
            line: 488,
            column: 6
          },
          end: {
            line: 488,
            column: 74
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 488,
            column: 6
          },
          end: {
            line: 488,
            column: 74
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 488
      },
      "41": {
        loc: {
          start: {
            line: 489,
            column: 6
          },
          end: {
            line: 489,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 489,
            column: 6
          },
          end: {
            line: 489,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 489
      },
      "42": {
        loc: {
          start: {
            line: 490,
            column: 6
          },
          end: {
            line: 490,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 490,
            column: 6
          },
          end: {
            line: 490,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 490
      },
      "43": {
        loc: {
          start: {
            line: 491,
            column: 6
          },
          end: {
            line: 491,
            column: 78
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 491,
            column: 6
          },
          end: {
            line: 491,
            column: 78
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 491
      },
      "44": {
        loc: {
          start: {
            line: 494,
            column: 6
          },
          end: {
            line: 507,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 494,
            column: 6
          },
          end: {
            line: 507,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 494
      },
      "45": {
        loc: {
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 495,
            column: 90
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 495,
            column: 8
          },
          end: {
            line: 495,
            column: 90
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 495
      },
      "46": {
        loc: {
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 496,
            column: 99
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 496,
            column: 8
          },
          end: {
            line: 496,
            column: 99
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 496
      },
      "47": {
        loc: {
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 497,
            column: 93
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 497,
            column: 8
          },
          end: {
            line: 497,
            column: 93
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 497
      },
      "48": {
        loc: {
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 498,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 498,
            column: 8
          },
          end: {
            line: 498,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 498
      },
      "49": {
        loc: {
          start: {
            line: 499,
            column: 8
          },
          end: {
            line: 499,
            column: 102
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 499,
            column: 8
          },
          end: {
            line: 499,
            column: 102
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 499
      },
      "50": {
        loc: {
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 500,
            column: 127
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 500,
            column: 8
          },
          end: {
            line: 500,
            column: 127
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 500
      },
      "51": {
        loc: {
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 501,
            column: 141
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 501,
            column: 8
          },
          end: {
            line: 501,
            column: 141
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 501
      },
      "52": {
        loc: {
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 502,
            column: 138
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 502,
            column: 8
          },
          end: {
            line: 502,
            column: 138
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 502
      },
      "53": {
        loc: {
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 504,
            column: 8
          },
          end: {
            line: 506,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 504
      },
      "54": {
        loc: {
          start: {
            line: 517,
            column: 6
          },
          end: {
            line: 519,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 517,
            column: 6
          },
          end: {
            line: 519,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 517
      },
      "55": {
        loc: {
          start: {
            line: 543,
            column: 6
          },
          end: {
            line: 545,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 543,
            column: 6
          },
          end: {
            line: 545,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 543
      },
      "56": {
        loc: {
          start: {
            line: 568,
            column: 6
          },
          end: {
            line: 570,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 568,
            column: 6
          },
          end: {
            line: 570,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 568
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0,
      "154": 0,
      "155": 0,
      "156": 0,
      "157": 0,
      "158": 0,
      "159": 0,
      "160": 0,
      "161": 0,
      "162": 0,
      "163": 0,
      "164": 0,
      "165": 0,
      "166": 0,
      "167": 0,
      "168": 0,
      "169": 0,
      "170": 0,
      "171": 0,
      "172": 0,
      "173": 0,
      "174": 0,
      "175": 0,
      "176": 0,
      "177": 0,
      "178": 0,
      "179": 0,
      "180": 0,
      "181": 0,
      "182": 0,
      "183": 0,
      "184": 0,
      "185": 0,
      "186": 0,
      "187": 0,
      "188": 0,
      "189": 0,
      "190": 0,
      "191": 0,
      "192": 0,
      "193": 0,
      "194": 0,
      "195": 0,
      "196": 0,
      "197": 0,
      "198": 0,
      "199": 0,
      "200": 0,
      "201": 0,
      "202": 0,
      "203": 0,
      "204": 0,
      "205": 0,
      "206": 0,
      "207": 0,
      "208": 0,
      "209": 0,
      "210": 0,
      "211": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0],
      "26": [0],
      "27": [0, 0],
      "28": [0],
      "29": [0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0],
      "33": [0],
      "34": [0, 0],
      "35": [0],
      "36": [0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0],
      "56": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4406737cf7b961b288951eabb76e8920a7598050"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1c6cybqlpu = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1c6cybqlpu();
var ConnectionService = function () {
  function ConnectionService() {
    (0, _classCallCheck2.default)(this, ConnectionService);
    cov_1c6cybqlpu().f[0]++;
    cov_1c6cybqlpu().s[0]++;
    this.baseUrl = (cov_1c6cybqlpu().b[0][0]++, process.env.API_BASE_URL) || (cov_1c6cybqlpu().b[0][1]++, 'https://api.digbiz.com');
  }
  return (0, _createClass2.default)(ConnectionService, [{
    key: "sendConnectionRequest",
    value: (function () {
      var _sendConnectionRequest = (0, _asyncToGenerator2.default)(function* (requestData) {
        cov_1c6cybqlpu().f[1]++;
        cov_1c6cybqlpu().s[1]++;
        try {
          var response = (cov_1c6cybqlpu().s[2]++, yield fetch(`${this.baseUrl}/connections/requests`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify(requestData)
          }));
          cov_1c6cybqlpu().s[3]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[1][0]++;
            cov_1c6cybqlpu().s[4]++;
            throw new Error(`Send connection request failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[1][1]++;
          }
          var data = (cov_1c6cybqlpu().s[5]++, yield response.json());
          cov_1c6cybqlpu().s[6]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[7]++;
          console.error('Error sending connection request:', error);
          cov_1c6cybqlpu().s[8]++;
          throw error;
        }
      });
      function sendConnectionRequest(_x) {
        return _sendConnectionRequest.apply(this, arguments);
      }
      return sendConnectionRequest;
    }())
  }, {
    key: "handleConnectionRequest",
    value: (function () {
      var _handleConnectionRequest = (0, _asyncToGenerator2.default)(function* (actionRequest) {
        cov_1c6cybqlpu().f[2]++;
        cov_1c6cybqlpu().s[9]++;
        try {
          var response = (cov_1c6cybqlpu().s[10]++, yield fetch(`${this.baseUrl}/connections/requests/${actionRequest.requestId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify({
              action: actionRequest.action,
              message: actionRequest.message
            })
          }));
          cov_1c6cybqlpu().s[11]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[2][0]++;
            cov_1c6cybqlpu().s[12]++;
            throw new Error(`Handle connection request failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[2][1]++;
          }
          var data = (cov_1c6cybqlpu().s[13]++, yield response.json());
          cov_1c6cybqlpu().s[14]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[15]++;
          console.error('Error handling connection request:', error);
          cov_1c6cybqlpu().s[16]++;
          throw error;
        }
      });
      function handleConnectionRequest(_x2) {
        return _handleConnectionRequest.apply(this, arguments);
      }
      return handleConnectionRequest;
    }())
  }, {
    key: "getConnections",
    value: (function () {
      var _getConnections = (0, _asyncToGenerator2.default)(function* () {
        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1c6cybqlpu().b[3][0]++, {});
        cov_1c6cybqlpu().f[3]++;
        cov_1c6cybqlpu().s[17]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[18]++, new URLSearchParams());
          cov_1c6cybqlpu().s[19]++;
          if (params.page) {
            cov_1c6cybqlpu().b[4][0]++;
            cov_1c6cybqlpu().s[20]++;
            queryString.append('page', params.page.toString());
          } else {
            cov_1c6cybqlpu().b[4][1]++;
          }
          cov_1c6cybqlpu().s[21]++;
          if (params.limit) {
            cov_1c6cybqlpu().b[5][0]++;
            cov_1c6cybqlpu().s[22]++;
            queryString.append('limit', params.limit.toString());
          } else {
            cov_1c6cybqlpu().b[5][1]++;
          }
          cov_1c6cybqlpu().s[23]++;
          if (params.search) {
            cov_1c6cybqlpu().b[6][0]++;
            cov_1c6cybqlpu().s[24]++;
            queryString.append('search', params.search);
          } else {
            cov_1c6cybqlpu().b[6][1]++;
          }
          cov_1c6cybqlpu().s[25]++;
          if (params.sortBy) {
            cov_1c6cybqlpu().b[7][0]++;
            cov_1c6cybqlpu().s[26]++;
            queryString.append('sortBy', params.sortBy);
          } else {
            cov_1c6cybqlpu().b[7][1]++;
          }
          cov_1c6cybqlpu().s[27]++;
          if (params.sortOrder) {
            cov_1c6cybqlpu().b[8][0]++;
            cov_1c6cybqlpu().s[28]++;
            queryString.append('sortOrder', params.sortOrder);
          } else {
            cov_1c6cybqlpu().b[8][1]++;
          }
          cov_1c6cybqlpu().s[29]++;
          if (params.tags) {
            cov_1c6cybqlpu().b[9][0]++;
            cov_1c6cybqlpu().s[30]++;
            params.tags.forEach(function (tag) {
              cov_1c6cybqlpu().f[4]++;
              cov_1c6cybqlpu().s[31]++;
              return queryString.append('tags[]', tag);
            });
          } else {
            cov_1c6cybqlpu().b[9][1]++;
          }
          var response = (cov_1c6cybqlpu().s[32]++, yield fetch(`${this.baseUrl}/connections?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[33]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[10][0]++;
            cov_1c6cybqlpu().s[34]++;
            throw new Error(`Get connections failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[10][1]++;
          }
          var data = (cov_1c6cybqlpu().s[35]++, yield response.json());
          cov_1c6cybqlpu().s[36]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[37]++;
          console.error('Error getting connections:', error);
          cov_1c6cybqlpu().s[38]++;
          throw error;
        }
      });
      function getConnections() {
        return _getConnections.apply(this, arguments);
      }
      return getConnections;
    }())
  }, {
    key: "getConnectionRequests",
    value: (function () {
      var _getConnectionRequests = (0, _asyncToGenerator2.default)(function* () {
        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1c6cybqlpu().b[11][0]++, {});
        cov_1c6cybqlpu().f[5]++;
        cov_1c6cybqlpu().s[39]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[40]++, new URLSearchParams());
          cov_1c6cybqlpu().s[41]++;
          if (params.page) {
            cov_1c6cybqlpu().b[12][0]++;
            cov_1c6cybqlpu().s[42]++;
            queryString.append('page', params.page.toString());
          } else {
            cov_1c6cybqlpu().b[12][1]++;
          }
          cov_1c6cybqlpu().s[43]++;
          if (params.limit) {
            cov_1c6cybqlpu().b[13][0]++;
            cov_1c6cybqlpu().s[44]++;
            queryString.append('limit', params.limit.toString());
          } else {
            cov_1c6cybqlpu().b[13][1]++;
          }
          cov_1c6cybqlpu().s[45]++;
          if (params.type) {
            cov_1c6cybqlpu().b[14][0]++;
            cov_1c6cybqlpu().s[46]++;
            queryString.append('type', params.type);
          } else {
            cov_1c6cybqlpu().b[14][1]++;
          }
          cov_1c6cybqlpu().s[47]++;
          if (params.status) {
            cov_1c6cybqlpu().b[15][0]++;
            cov_1c6cybqlpu().s[48]++;
            queryString.append('status', params.status);
          } else {
            cov_1c6cybqlpu().b[15][1]++;
          }
          cov_1c6cybqlpu().s[49]++;
          if (params.sortBy) {
            cov_1c6cybqlpu().b[16][0]++;
            cov_1c6cybqlpu().s[50]++;
            queryString.append('sortBy', params.sortBy);
          } else {
            cov_1c6cybqlpu().b[16][1]++;
          }
          cov_1c6cybqlpu().s[51]++;
          if (params.sortOrder) {
            cov_1c6cybqlpu().b[17][0]++;
            cov_1c6cybqlpu().s[52]++;
            queryString.append('sortOrder', params.sortOrder);
          } else {
            cov_1c6cybqlpu().b[17][1]++;
          }
          var response = (cov_1c6cybqlpu().s[53]++, yield fetch(`${this.baseUrl}/connections/requests?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[54]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[18][0]++;
            cov_1c6cybqlpu().s[55]++;
            throw new Error(`Get connection requests failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[18][1]++;
          }
          var data = (cov_1c6cybqlpu().s[56]++, yield response.json());
          cov_1c6cybqlpu().s[57]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[58]++;
          console.error('Error getting connection requests:', error);
          cov_1c6cybqlpu().s[59]++;
          throw error;
        }
      });
      function getConnectionRequests() {
        return _getConnectionRequests.apply(this, arguments);
      }
      return getConnectionRequests;
    }())
  }, {
    key: "getMutualConnections",
    value: (function () {
      var _getMutualConnections = (0, _asyncToGenerator2.default)(function* (userId) {
        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1c6cybqlpu().b[19][0]++, 10);
        cov_1c6cybqlpu().f[6]++;
        cov_1c6cybqlpu().s[60]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[61]++, new URLSearchParams({
            limit: limit.toString()
          }));
          var response = (cov_1c6cybqlpu().s[62]++, yield fetch(`${this.baseUrl}/connections/mutual/${userId}?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[63]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[20][0]++;
            cov_1c6cybqlpu().s[64]++;
            throw new Error(`Get mutual connections failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[20][1]++;
          }
          var data = (cov_1c6cybqlpu().s[65]++, yield response.json());
          cov_1c6cybqlpu().s[66]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[67]++;
          console.error('Error getting mutual connections:', error);
          cov_1c6cybqlpu().s[68]++;
          throw error;
        }
      });
      function getMutualConnections(_x3) {
        return _getMutualConnections.apply(this, arguments);
      }
      return getMutualConnections;
    }())
  }, {
    key: "getConnectionStats",
    value: (function () {
      var _getConnectionStats = (0, _asyncToGenerator2.default)(function* () {
        cov_1c6cybqlpu().f[7]++;
        cov_1c6cybqlpu().s[69]++;
        try {
          var response = (cov_1c6cybqlpu().s[70]++, yield fetch(`${this.baseUrl}/connections/stats`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[71]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[21][0]++;
            cov_1c6cybqlpu().s[72]++;
            throw new Error(`Get connection stats failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[21][1]++;
          }
          var data = (cov_1c6cybqlpu().s[73]++, yield response.json());
          cov_1c6cybqlpu().s[74]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[75]++;
          console.error('Error getting connection stats:', error);
          cov_1c6cybqlpu().s[76]++;
          throw error;
        }
      });
      function getConnectionStats() {
        return _getConnectionStats.apply(this, arguments);
      }
      return getConnectionStats;
    }())
  }, {
    key: "removeConnection",
    value: (function () {
      var _removeConnection = (0, _asyncToGenerator2.default)(function* (removalRequest) {
        cov_1c6cybqlpu().f[8]++;
        cov_1c6cybqlpu().s[77]++;
        try {
          var response = (cov_1c6cybqlpu().s[78]++, yield fetch(`${this.baseUrl}/connections/${removalRequest.connectionId}`, {
            method: 'DELETE',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify({
              reason: removalRequest.reason,
              blockUser: removalRequest.blockUser
            })
          }));
          cov_1c6cybqlpu().s[79]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[22][0]++;
            cov_1c6cybqlpu().s[80]++;
            throw new Error(`Remove connection failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[22][1]++;
          }
          var data = (cov_1c6cybqlpu().s[81]++, yield response.json());
          cov_1c6cybqlpu().s[82]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[83]++;
          console.error('Error removing connection:', error);
          cov_1c6cybqlpu().s[84]++;
          throw error;
        }
      });
      function removeConnection(_x4) {
        return _removeConnection.apply(this, arguments);
      }
      return removeConnection;
    }())
  }, {
    key: "blockUser",
    value: (function () {
      var _blockUser = (0, _asyncToGenerator2.default)(function* (blockRequest) {
        cov_1c6cybqlpu().f[9]++;
        cov_1c6cybqlpu().s[85]++;
        try {
          var response = (cov_1c6cybqlpu().s[86]++, yield fetch(`${this.baseUrl}/connections/block`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify(blockRequest)
          }));
          cov_1c6cybqlpu().s[87]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[23][0]++;
            cov_1c6cybqlpu().s[88]++;
            throw new Error(`Block user failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[23][1]++;
          }
          var data = (cov_1c6cybqlpu().s[89]++, yield response.json());
          cov_1c6cybqlpu().s[90]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[91]++;
          console.error('Error blocking user:', error);
          cov_1c6cybqlpu().s[92]++;
          throw error;
        }
      });
      function blockUser(_x5) {
        return _blockUser.apply(this, arguments);
      }
      return blockUser;
    }())
  }, {
    key: "unblockUser",
    value: (function () {
      var _unblockUser = (0, _asyncToGenerator2.default)(function* (unblockRequest) {
        cov_1c6cybqlpu().f[10]++;
        cov_1c6cybqlpu().s[93]++;
        try {
          var response = (cov_1c6cybqlpu().s[94]++, yield fetch(`${this.baseUrl}/connections/unblock`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify(unblockRequest)
          }));
          cov_1c6cybqlpu().s[95]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[24][0]++;
            cov_1c6cybqlpu().s[96]++;
            throw new Error(`Unblock user failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[24][1]++;
          }
          var data = (cov_1c6cybqlpu().s[97]++, yield response.json());
          cov_1c6cybqlpu().s[98]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[99]++;
          console.error('Error unblocking user:', error);
          cov_1c6cybqlpu().s[100]++;
          throw error;
        }
      });
      function unblockUser(_x6) {
        return _unblockUser.apply(this, arguments);
      }
      return unblockUser;
    }())
  }, {
    key: "getBlockedUsers",
    value: (function () {
      var _getBlockedUsers = (0, _asyncToGenerator2.default)(function* () {
        var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1c6cybqlpu().b[25][0]++, 1);
        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1c6cybqlpu().b[26][0]++, 20);
        cov_1c6cybqlpu().f[11]++;
        cov_1c6cybqlpu().s[101]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[102]++, new URLSearchParams({
            page: page.toString(),
            limit: limit.toString()
          }));
          var response = (cov_1c6cybqlpu().s[103]++, yield fetch(`${this.baseUrl}/connections/blocked?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[104]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[27][0]++;
            cov_1c6cybqlpu().s[105]++;
            throw new Error(`Get blocked users failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[27][1]++;
          }
          var data = (cov_1c6cybqlpu().s[106]++, yield response.json());
          cov_1c6cybqlpu().s[107]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[108]++;
          console.error('Error getting blocked users:', error);
          cov_1c6cybqlpu().s[109]++;
          throw error;
        }
      });
      function getBlockedUsers() {
        return _getBlockedUsers.apply(this, arguments);
      }
      return getBlockedUsers;
    }())
  }, {
    key: "getConnectionNotifications",
    value: (function () {
      var _getConnectionNotifications = (0, _asyncToGenerator2.default)(function* () {
        var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1c6cybqlpu().b[28][0]++, 1);
        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1c6cybqlpu().b[29][0]++, 20);
        cov_1c6cybqlpu().f[12]++;
        cov_1c6cybqlpu().s[110]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[111]++, new URLSearchParams({
            page: page.toString(),
            limit: limit.toString()
          }));
          var response = (cov_1c6cybqlpu().s[112]++, yield fetch(`${this.baseUrl}/connections/notifications?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[113]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[30][0]++;
            cov_1c6cybqlpu().s[114]++;
            throw new Error(`Get connection notifications failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[30][1]++;
          }
          var data = (cov_1c6cybqlpu().s[115]++, yield response.json());
          cov_1c6cybqlpu().s[116]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[117]++;
          console.error('Error getting connection notifications:', error);
          cov_1c6cybqlpu().s[118]++;
          throw error;
        }
      });
      function getConnectionNotifications() {
        return _getConnectionNotifications.apply(this, arguments);
      }
      return getConnectionNotifications;
    }())
  }, {
    key: "markNotificationsAsRead",
    value: (function () {
      var _markNotificationsAsRead = (0, _asyncToGenerator2.default)(function* (readRequest) {
        cov_1c6cybqlpu().f[13]++;
        cov_1c6cybqlpu().s[119]++;
        try {
          var response = (cov_1c6cybqlpu().s[120]++, yield fetch(`${this.baseUrl}/connections/notifications/read`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify(readRequest)
          }));
          cov_1c6cybqlpu().s[121]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[31][0]++;
            cov_1c6cybqlpu().s[122]++;
            throw new Error(`Mark notifications as read failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[31][1]++;
          }
          var data = (cov_1c6cybqlpu().s[123]++, yield response.json());
          cov_1c6cybqlpu().s[124]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[125]++;
          console.error('Error marking notifications as read:', error);
          cov_1c6cybqlpu().s[126]++;
          throw error;
        }
      });
      function markNotificationsAsRead(_x7) {
        return _markNotificationsAsRead.apply(this, arguments);
      }
      return markNotificationsAsRead;
    }())
  }, {
    key: "getConnectionActivity",
    value: (function () {
      var _getConnectionActivity = (0, _asyncToGenerator2.default)(function* () {
        var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1c6cybqlpu().b[32][0]++, 1);
        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1c6cybqlpu().b[33][0]++, 20);
        cov_1c6cybqlpu().f[14]++;
        cov_1c6cybqlpu().s[127]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[128]++, new URLSearchParams({
            page: page.toString(),
            limit: limit.toString()
          }));
          var response = (cov_1c6cybqlpu().s[129]++, yield fetch(`${this.baseUrl}/connections/activity?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[130]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[34][0]++;
            cov_1c6cybqlpu().s[131]++;
            throw new Error(`Get connection activity failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[34][1]++;
          }
          var data = (cov_1c6cybqlpu().s[132]++, yield response.json());
          cov_1c6cybqlpu().s[133]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[134]++;
          console.error('Error getting connection activity:', error);
          cov_1c6cybqlpu().s[135]++;
          throw error;
        }
      });
      function getConnectionActivity() {
        return _getConnectionActivity.apply(this, arguments);
      }
      return getConnectionActivity;
    }())
  }, {
    key: "getConnectionSuggestionsFromMutuals",
    value: (function () {
      var _getConnectionSuggestionsFromMutuals = (0, _asyncToGenerator2.default)(function* () {
        var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : (cov_1c6cybqlpu().b[35][0]++, 1);
        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (cov_1c6cybqlpu().b[36][0]++, 10);
        cov_1c6cybqlpu().f[15]++;
        cov_1c6cybqlpu().s[136]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[137]++, new URLSearchParams({
            page: page.toString(),
            limit: limit.toString()
          }));
          var response = (cov_1c6cybqlpu().s[138]++, yield fetch(`${this.baseUrl}/connections/suggestions/mutuals?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[139]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[37][0]++;
            cov_1c6cybqlpu().s[140]++;
            throw new Error(`Get mutual connection suggestions failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[37][1]++;
          }
          var data = (cov_1c6cybqlpu().s[141]++, yield response.json());
          cov_1c6cybqlpu().s[142]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[143]++;
          console.error('Error getting mutual connection suggestions:', error);
          cov_1c6cybqlpu().s[144]++;
          throw error;
        }
      });
      function getConnectionSuggestionsFromMutuals() {
        return _getConnectionSuggestionsFromMutuals.apply(this, arguments);
      }
      return getConnectionSuggestionsFromMutuals;
    }())
  }, {
    key: "exportConnections",
    value: (function () {
      var _exportConnections = (0, _asyncToGenerator2.default)(function* (exportRequest) {
        cov_1c6cybqlpu().f[16]++;
        cov_1c6cybqlpu().s[145]++;
        try {
          var response = (cov_1c6cybqlpu().s[146]++, yield fetch(`${this.baseUrl}/connections/export`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify(exportRequest)
          }));
          cov_1c6cybqlpu().s[147]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[38][0]++;
            cov_1c6cybqlpu().s[148]++;
            throw new Error(`Export connections failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[38][1]++;
          }
          var data = (cov_1c6cybqlpu().s[149]++, yield response.json());
          cov_1c6cybqlpu().s[150]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[151]++;
          console.error('Error exporting connections:', error);
          cov_1c6cybqlpu().s[152]++;
          throw error;
        }
      });
      function exportConnections(_x8) {
        return _exportConnections.apply(this, arguments);
      }
      return exportConnections;
    }())
  }, {
    key: "searchConnections",
    value: (function () {
      var _searchConnections = (0, _asyncToGenerator2.default)(function* (params) {
        cov_1c6cybqlpu().f[17]++;
        cov_1c6cybqlpu().s[153]++;
        try {
          var queryString = (cov_1c6cybqlpu().s[154]++, new URLSearchParams());
          cov_1c6cybqlpu().s[155]++;
          if (params.query) {
            cov_1c6cybqlpu().b[39][0]++;
            cov_1c6cybqlpu().s[156]++;
            queryString.append('query', params.query);
          } else {
            cov_1c6cybqlpu().b[39][1]++;
          }
          cov_1c6cybqlpu().s[157]++;
          if (params.page) {
            cov_1c6cybqlpu().b[40][0]++;
            cov_1c6cybqlpu().s[158]++;
            queryString.append('page', params.page.toString());
          } else {
            cov_1c6cybqlpu().b[40][1]++;
          }
          cov_1c6cybqlpu().s[159]++;
          if (params.limit) {
            cov_1c6cybqlpu().b[41][0]++;
            cov_1c6cybqlpu().s[160]++;
            queryString.append('limit', params.limit.toString());
          } else {
            cov_1c6cybqlpu().b[41][1]++;
          }
          cov_1c6cybqlpu().s[161]++;
          if (params.sortBy) {
            cov_1c6cybqlpu().b[42][0]++;
            cov_1c6cybqlpu().s[162]++;
            queryString.append('sortBy', params.sortBy);
          } else {
            cov_1c6cybqlpu().b[42][1]++;
          }
          cov_1c6cybqlpu().s[163]++;
          if (params.sortOrder) {
            cov_1c6cybqlpu().b[43][0]++;
            cov_1c6cybqlpu().s[164]++;
            queryString.append('sortOrder', params.sortOrder);
          } else {
            cov_1c6cybqlpu().b[43][1]++;
          }
          cov_1c6cybqlpu().s[165]++;
          if (params.filters) {
            cov_1c6cybqlpu().b[44][0]++;
            cov_1c6cybqlpu().s[166]++;
            if (params.filters.name) {
              cov_1c6cybqlpu().b[45][0]++;
              cov_1c6cybqlpu().s[167]++;
              queryString.append('filters[name]', params.filters.name);
            } else {
              cov_1c6cybqlpu().b[45][1]++;
            }
            cov_1c6cybqlpu().s[168]++;
            if (params.filters.company) {
              cov_1c6cybqlpu().b[46][0]++;
              cov_1c6cybqlpu().s[169]++;
              queryString.append('filters[company]', params.filters.company);
            } else {
              cov_1c6cybqlpu().b[46][1]++;
            }
            cov_1c6cybqlpu().s[170]++;
            if (params.filters.title) {
              cov_1c6cybqlpu().b[47][0]++;
              cov_1c6cybqlpu().s[171]++;
              queryString.append('filters[title]', params.filters.title);
            } else {
              cov_1c6cybqlpu().b[47][1]++;
            }
            cov_1c6cybqlpu().s[172]++;
            if (params.filters.location) {
              cov_1c6cybqlpu().b[48][0]++;
              cov_1c6cybqlpu().s[173]++;
              queryString.append('filters[location]', params.filters.location);
            } else {
              cov_1c6cybqlpu().b[48][1]++;
            }
            cov_1c6cybqlpu().s[174]++;
            if (params.filters.industry) {
              cov_1c6cybqlpu().b[49][0]++;
              cov_1c6cybqlpu().s[175]++;
              queryString.append('filters[industry]', params.filters.industry);
            } else {
              cov_1c6cybqlpu().b[49][1]++;
            }
            cov_1c6cybqlpu().s[176]++;
            if (params.filters.hasNotes !== undefined) {
              cov_1c6cybqlpu().b[50][0]++;
              cov_1c6cybqlpu().s[177]++;
              queryString.append('filters[hasNotes]', params.filters.hasNotes.toString());
            } else {
              cov_1c6cybqlpu().b[50][1]++;
            }
            cov_1c6cybqlpu().s[178]++;
            if (params.filters.lastInteractionBefore) {
              cov_1c6cybqlpu().b[51][0]++;
              cov_1c6cybqlpu().s[179]++;
              queryString.append('filters[lastInteractionBefore]', params.filters.lastInteractionBefore);
            } else {
              cov_1c6cybqlpu().b[51][1]++;
            }
            cov_1c6cybqlpu().s[180]++;
            if (params.filters.lastInteractionAfter) {
              cov_1c6cybqlpu().b[52][0]++;
              cov_1c6cybqlpu().s[181]++;
              queryString.append('filters[lastInteractionAfter]', params.filters.lastInteractionAfter);
            } else {
              cov_1c6cybqlpu().b[52][1]++;
            }
            cov_1c6cybqlpu().s[182]++;
            if (params.filters.tags) {
              cov_1c6cybqlpu().b[53][0]++;
              cov_1c6cybqlpu().s[183]++;
              params.filters.tags.forEach(function (tag) {
                cov_1c6cybqlpu().f[18]++;
                cov_1c6cybqlpu().s[184]++;
                return queryString.append('filters[tags][]', tag);
              });
            } else {
              cov_1c6cybqlpu().b[53][1]++;
            }
          } else {
            cov_1c6cybqlpu().b[44][1]++;
          }
          var response = (cov_1c6cybqlpu().s[185]++, yield fetch(`${this.baseUrl}/connections/search?${queryString}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[186]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[54][0]++;
            cov_1c6cybqlpu().s[187]++;
            throw new Error(`Search connections failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[54][1]++;
          }
          var data = (cov_1c6cybqlpu().s[188]++, yield response.json());
          cov_1c6cybqlpu().s[189]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[190]++;
          console.error('Error searching connections:', error);
          cov_1c6cybqlpu().s[191]++;
          throw error;
        }
      });
      function searchConnections(_x9) {
        return _searchConnections.apply(this, arguments);
      }
      return searchConnections;
    }())
  }, {
    key: "updateConnection",
    value: (function () {
      var _updateConnection = (0, _asyncToGenerator2.default)(function* (connectionId, updates) {
        cov_1c6cybqlpu().f[19]++;
        cov_1c6cybqlpu().s[192]++;
        try {
          var response = (cov_1c6cybqlpu().s[193]++, yield fetch(`${this.baseUrl}/connections/${connectionId}`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify(updates)
          }));
          cov_1c6cybqlpu().s[194]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[55][0]++;
            cov_1c6cybqlpu().s[195]++;
            throw new Error(`Update connection failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[55][1]++;
          }
          var data = (cov_1c6cybqlpu().s[196]++, yield response.json());
          cov_1c6cybqlpu().s[197]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[198]++;
          console.error('Error updating connection:', error);
          cov_1c6cybqlpu().s[199]++;
          throw error;
        }
      });
      function updateConnection(_x0, _x1) {
        return _updateConnection.apply(this, arguments);
      }
      return updateConnection;
    }())
  }, {
    key: "getConnectionStatus",
    value: (function () {
      var _getConnectionStatus = (0, _asyncToGenerator2.default)(function* (userId) {
        cov_1c6cybqlpu().f[20]++;
        cov_1c6cybqlpu().s[200]++;
        try {
          var response = (cov_1c6cybqlpu().s[201]++, yield fetch(`${this.baseUrl}/connections/status/${userId}`, {
            method: 'GET',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            }
          }));
          cov_1c6cybqlpu().s[202]++;
          if (!response.ok) {
            cov_1c6cybqlpu().b[56][0]++;
            cov_1c6cybqlpu().s[203]++;
            throw new Error(`Get connection status failed: ${response.statusText}`);
          } else {
            cov_1c6cybqlpu().b[56][1]++;
          }
          var data = (cov_1c6cybqlpu().s[204]++, yield response.json());
          cov_1c6cybqlpu().s[205]++;
          return data;
        } catch (error) {
          cov_1c6cybqlpu().s[206]++;
          console.error('Error getting connection status:', error);
          cov_1c6cybqlpu().s[207]++;
          throw error;
        }
      });
      function getConnectionStatus(_x10) {
        return _getConnectionStatus.apply(this, arguments);
      }
      return getConnectionStatus;
    }())
  }, {
    key: "getAuthToken",
    value: (function () {
      var _getAuthToken = (0, _asyncToGenerator2.default)(function* () {
        cov_1c6cybqlpu().f[21]++;
        cov_1c6cybqlpu().s[208]++;
        return 'auth_token_placeholder';
      });
      function getAuthToken() {
        return _getAuthToken.apply(this, arguments);
      }
      return getAuthToken;
    }())
  }, {
    key: "trackConnectionInteraction",
    value: (function () {
      var _trackConnectionInteraction = (0, _asyncToGenerator2.default)(function* (interaction) {
        cov_1c6cybqlpu().f[22]++;
        cov_1c6cybqlpu().s[209]++;
        try {
          cov_1c6cybqlpu().s[210]++;
          yield fetch(`${this.baseUrl}/connections/interactions`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${yield this.getAuthToken()}`
            },
            body: JSON.stringify(Object.assign({}, interaction, {
              timestamp: new Date().toISOString()
            }))
          });
        } catch (error) {
          cov_1c6cybqlpu().s[211]++;
          console.error('Error tracking connection interaction:', error);
        }
      });
      function trackConnectionInteraction(_x11) {
        return _trackConnectionInteraction.apply(this, arguments);
      }
      return trackConnectionInteraction;
    }())
  }]);
}();
var _default = exports.default = new ConnectionService();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,