{"version":3,"names":["_ReactNativeFeatureFlagsBase","require","jsOnlyTestFlag","exports","createJavaScriptFlagGetter","alwaysFlattenAnimatedStyles","animatedShouldDebounceQueueFlush","animatedShouldUseSingleOp","avoidStateUpdateInAnimatedPropsMemo","deferFlatListFocusChangeRenderUpdate","disableInteractionManager","enableAccessToHostTreeInFabric","fixVirtualizeListCollapseWindowSize","isLayoutAnimationEnabled","reduceDefaultPropsInView","scheduleAnimatedCleanupInMicrotask","shouldUseAnimatedObjectForTransform","shouldUseRemoveClippedSubviewsAsDefaultOnIOS","shouldUseSetNativePropsInFabric","utilizeTokensInIntersectionObserver","commonTestFlag","createNativeFlagGetter","commonTestFlagWithoutNativeImplementation","animatedShouldSignalBatch","cxxNativeAnimatedEnabled","cxxNativeAnimatedRemoveJsSync","disableMainQueueSyncDispatchIOS","disableMountItemReorderingAndroid","disableTextLayoutManagerCacheAndroid","enableAccessibilityOrder","enableAccumulatedUpdatesInRawPropsAndroid","enableAndroidTextMeasurementOptimizations","enableBridgelessArchitecture","enableCppPropsIteratorSetter","enableCustomFocusSearchOnClippedElementsAndroid","enableDestroyShadowTreeRevisionAsync","enableDoubleMeasurementFixAndroid","enableEagerRootViewAttachment","enableFabricLogs","enableFabricRenderer","enableFixForParentTagDuringReparenting","enableFontScaleChangesUpdatingLayout","enableIOSTextBaselineOffsetPerLine","enableIOSViewClipToPaddingBox","enableInteropViewManagerClassLookUpOptimizationIOS","enableLayoutAnimationsOnAndroid","enableLayoutAnimationsOnIOS","enableMainQueueCoordinatorOnIOS","enableMainQueueModulesOnIOS","enableModuleArgumentNSNullConversionIOS","enableNativeCSSParsing","enableNetworkEventReporting","enableNewBackgroundAndBorderDrawables","enablePreparedTextLayout","enablePropsUpdateReconciliationAndroid","enableResourceTimingAPI","enableSynchronousStateUpdates","enableViewCulling","enableViewRecycling","enableViewRecyclingForText","enableViewRecyclingForView","enableVirtualViewDebugFeatures","enableVirtualViewRenderState","enableVirtualViewWindowFocusDetection","fixMappingOfEventPrioritiesBetweenFabricAndReact","fuseboxEnabledRelease","fuseboxNetworkInspectionEnabled","hideOffscreenVirtualViewsOnIOS","preparedTextCacheSize","preventShadowTreeCommitExhaustion","traceTurboModulePromiseRejectionsOnAndroid","updateRuntimeShadowNodeReferencesOnCommit","useAlwaysAvailableJSErrorHandling","useFabricInterop","useNativeViewConfigsInBridgelessMode","useOptimizedEventBatchingOnAndroid","useRawPropsJsiValue","useShadowNodeStateOnClone","useTurboModuleInterop","useTurboModules","virtualViewPrerenderRatio","override","setOverrides"],"sources":["ReactNativeFeatureFlags.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @generated SignedSource<<999a8d329cdab258ac64c03b24f1a516>>\n * @flow strict\n * @noformat\n */\n\n/**\n * IMPORTANT: Do NOT modify this file directly.\n *\n * To change the definition of the flags, edit\n *   packages/react-native/scripts/featureflags/ReactNativeFeatureFlags.config.js.\n *\n * To regenerate this code, run the following script from the repo root:\n *   yarn featureflags --update\n */\n\nimport {\n  type Getter,\n  type OverridesFor,\n  createJavaScriptFlagGetter,\n  createNativeFlagGetter,\n  setOverrides,\n} from './ReactNativeFeatureFlagsBase';\n\nexport type ReactNativeFeatureFlagsJsOnly = $ReadOnly<{\n  jsOnlyTestFlag: Getter<boolean>,\n  alwaysFlattenAnimatedStyles: Getter<boolean>,\n  animatedShouldDebounceQueueFlush: Getter<boolean>,\n  animatedShouldUseSingleOp: Getter<boolean>,\n  avoidStateUpdateInAnimatedPropsMemo: Getter<boolean>,\n  deferFlatListFocusChangeRenderUpdate: Getter<boolean>,\n  disableInteractionManager: Getter<boolean>,\n  enableAccessToHostTreeInFabric: Getter<boolean>,\n  fixVirtualizeListCollapseWindowSize: Getter<boolean>,\n  isLayoutAnimationEnabled: Getter<boolean>,\n  reduceDefaultPropsInView: Getter<boolean>,\n  scheduleAnimatedCleanupInMicrotask: Getter<boolean>,\n  shouldUseAnimatedObjectForTransform: Getter<boolean>,\n  shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean>,\n  shouldUseSetNativePropsInFabric: Getter<boolean>,\n  utilizeTokensInIntersectionObserver: Getter<boolean>,\n}>;\n\nexport type ReactNativeFeatureFlagsJsOnlyOverrides = OverridesFor<ReactNativeFeatureFlagsJsOnly>;\n\nexport type ReactNativeFeatureFlags = $ReadOnly<{\n  ...ReactNativeFeatureFlagsJsOnly,\n  commonTestFlag: Getter<boolean>,\n  commonTestFlagWithoutNativeImplementation: Getter<boolean>,\n  animatedShouldSignalBatch: Getter<boolean>,\n  cxxNativeAnimatedEnabled: Getter<boolean>,\n  cxxNativeAnimatedRemoveJsSync: Getter<boolean>,\n  disableMainQueueSyncDispatchIOS: Getter<boolean>,\n  disableMountItemReorderingAndroid: Getter<boolean>,\n  disableTextLayoutManagerCacheAndroid: Getter<boolean>,\n  enableAccessibilityOrder: Getter<boolean>,\n  enableAccumulatedUpdatesInRawPropsAndroid: Getter<boolean>,\n  enableAndroidTextMeasurementOptimizations: Getter<boolean>,\n  enableBridgelessArchitecture: Getter<boolean>,\n  enableCppPropsIteratorSetter: Getter<boolean>,\n  enableCustomFocusSearchOnClippedElementsAndroid: Getter<boolean>,\n  enableDestroyShadowTreeRevisionAsync: Getter<boolean>,\n  enableDoubleMeasurementFixAndroid: Getter<boolean>,\n  enableEagerRootViewAttachment: Getter<boolean>,\n  enableFabricLogs: Getter<boolean>,\n  enableFabricRenderer: Getter<boolean>,\n  enableFixForParentTagDuringReparenting: Getter<boolean>,\n  enableFontScaleChangesUpdatingLayout: Getter<boolean>,\n  enableIOSTextBaselineOffsetPerLine: Getter<boolean>,\n  enableIOSViewClipToPaddingBox: Getter<boolean>,\n  enableInteropViewManagerClassLookUpOptimizationIOS: Getter<boolean>,\n  enableLayoutAnimationsOnAndroid: Getter<boolean>,\n  enableLayoutAnimationsOnIOS: Getter<boolean>,\n  enableMainQueueCoordinatorOnIOS: Getter<boolean>,\n  enableMainQueueModulesOnIOS: Getter<boolean>,\n  enableModuleArgumentNSNullConversionIOS: Getter<boolean>,\n  enableNativeCSSParsing: Getter<boolean>,\n  enableNetworkEventReporting: Getter<boolean>,\n  enableNewBackgroundAndBorderDrawables: Getter<boolean>,\n  enablePreparedTextLayout: Getter<boolean>,\n  enablePropsUpdateReconciliationAndroid: Getter<boolean>,\n  enableResourceTimingAPI: Getter<boolean>,\n  enableSynchronousStateUpdates: Getter<boolean>,\n  enableViewCulling: Getter<boolean>,\n  enableViewRecycling: Getter<boolean>,\n  enableViewRecyclingForText: Getter<boolean>,\n  enableViewRecyclingForView: Getter<boolean>,\n  enableVirtualViewDebugFeatures: Getter<boolean>,\n  enableVirtualViewRenderState: Getter<boolean>,\n  enableVirtualViewWindowFocusDetection: Getter<boolean>,\n  fixMappingOfEventPrioritiesBetweenFabricAndReact: Getter<boolean>,\n  fuseboxEnabledRelease: Getter<boolean>,\n  fuseboxNetworkInspectionEnabled: Getter<boolean>,\n  hideOffscreenVirtualViewsOnIOS: Getter<boolean>,\n  preparedTextCacheSize: Getter<number>,\n  preventShadowTreeCommitExhaustion: Getter<boolean>,\n  traceTurboModulePromiseRejectionsOnAndroid: Getter<boolean>,\n  updateRuntimeShadowNodeReferencesOnCommit: Getter<boolean>,\n  useAlwaysAvailableJSErrorHandling: Getter<boolean>,\n  useFabricInterop: Getter<boolean>,\n  useNativeViewConfigsInBridgelessMode: Getter<boolean>,\n  useOptimizedEventBatchingOnAndroid: Getter<boolean>,\n  useRawPropsJsiValue: Getter<boolean>,\n  useShadowNodeStateOnClone: Getter<boolean>,\n  useTurboModuleInterop: Getter<boolean>,\n  useTurboModules: Getter<boolean>,\n  virtualViewPrerenderRatio: Getter<number>,\n}>;\n\n/**\n * JS-only flag for testing. Do NOT modify.\n */\nexport const jsOnlyTestFlag: Getter<boolean> = createJavaScriptFlagGetter('jsOnlyTestFlag', false);\n\n/**\n * Changes `Animated` to always flatten style, fixing a bug with shadowed `AnimatedNode` instances.\n */\nexport const alwaysFlattenAnimatedStyles: Getter<boolean> = createJavaScriptFlagGetter('alwaysFlattenAnimatedStyles', false);\n\n/**\n * Enables an experimental flush-queue debouncing in Animated.js.\n */\nexport const animatedShouldDebounceQueueFlush: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldDebounceQueueFlush', false);\n\n/**\n * Enables an experimental mega-operation for Animated.js that replaces many calls to native with a single call into native, to reduce JSI/JNI traffic.\n */\nexport const animatedShouldUseSingleOp: Getter<boolean> = createJavaScriptFlagGetter('animatedShouldUseSingleOp', false);\n\n/**\n * Changes `useAnimatedPropsMemo` to avoid state updates to invalidate the cached `AnimatedProps`.\n */\nexport const avoidStateUpdateInAnimatedPropsMemo: Getter<boolean> = createJavaScriptFlagGetter('avoidStateUpdateInAnimatedPropsMemo', true);\n\n/**\n * Use the deferred cell render update mechanism for focus change in FlatList.\n */\nexport const deferFlatListFocusChangeRenderUpdate: Getter<boolean> = createJavaScriptFlagGetter('deferFlatListFocusChangeRenderUpdate', false);\n\n/**\n * Disables InteractionManager and replaces its scheduler with `setImmediate`.\n */\nexport const disableInteractionManager: Getter<boolean> = createJavaScriptFlagGetter('disableInteractionManager', true);\n\n/**\n * Enables access to the host tree in Fabric using DOM-compatible APIs.\n */\nexport const enableAccessToHostTreeInFabric: Getter<boolean> = createJavaScriptFlagGetter('enableAccessToHostTreeInFabric', false);\n\n/**\n * Fixing an edge case where the current window size is not properly calculated with fast scrolling. Window size collapsed to 1 element even if windowSize more than the current amount of elements\n */\nexport const fixVirtualizeListCollapseWindowSize: Getter<boolean> = createJavaScriptFlagGetter('fixVirtualizeListCollapseWindowSize', false);\n\n/**\n * Function used to enable / disabled Layout Animations in React Native.\n */\nexport const isLayoutAnimationEnabled: Getter<boolean> = createJavaScriptFlagGetter('isLayoutAnimationEnabled', true);\n\n/**\n * Optimize how default (accessibility) props are processed in View to avoid unnecessary keys.\n */\nexport const reduceDefaultPropsInView: Getter<boolean> = createJavaScriptFlagGetter('reduceDefaultPropsInView', true);\n\n/**\n * Changes the cleanup of `AnimatedProps` to occur in a microtask instead of synchronously during effect cleanup (for unmount) or subsequent mounts (for updates).\n */\nexport const scheduleAnimatedCleanupInMicrotask: Getter<boolean> = createJavaScriptFlagGetter('scheduleAnimatedCleanupInMicrotask', true);\n\n/**\n * Enables use of AnimatedObject for animating transform values.\n */\nexport const shouldUseAnimatedObjectForTransform: Getter<boolean> = createJavaScriptFlagGetter('shouldUseAnimatedObjectForTransform', false);\n\n/**\n * removeClippedSubviews prop will be used as the default in FlatList on iOS to match Android\n */\nexport const shouldUseRemoveClippedSubviewsAsDefaultOnIOS: Getter<boolean> = createJavaScriptFlagGetter('shouldUseRemoveClippedSubviewsAsDefaultOnIOS', false);\n\n/**\n * Enables use of setNativeProps in JS driven animations.\n */\nexport const shouldUseSetNativePropsInFabric: Getter<boolean> = createJavaScriptFlagGetter('shouldUseSetNativePropsInFabric', true);\n\n/**\n * Use tokens in IntersectionObserver vs ShadowNode.\n */\nexport const utilizeTokensInIntersectionObserver: Getter<boolean> = createJavaScriptFlagGetter('utilizeTokensInIntersectionObserver', true);\n\n/**\n * Common flag for testing. Do NOT modify.\n */\nexport const commonTestFlag: Getter<boolean> = createNativeFlagGetter('commonTestFlag', false);\n/**\n * Common flag for testing (without native implementation). Do NOT modify.\n */\nexport const commonTestFlagWithoutNativeImplementation: Getter<boolean> = createNativeFlagGetter('commonTestFlagWithoutNativeImplementation', false);\n/**\n * Enables start- and finishOperationBatch on any platform.\n */\nexport const animatedShouldSignalBatch: Getter<boolean> = createNativeFlagGetter('animatedShouldSignalBatch', false);\n/**\n * Use a C++ implementation of Native Animated instead of the platform implementation.\n */\nexport const cxxNativeAnimatedEnabled: Getter<boolean> = createNativeFlagGetter('cxxNativeAnimatedEnabled', false);\n/**\n * Removes JS sync at end of native animation\n */\nexport const cxxNativeAnimatedRemoveJsSync: Getter<boolean> = createNativeFlagGetter('cxxNativeAnimatedRemoveJsSync', false);\n/**\n * Disable sync dispatch on the main queue on iOS\n */\nexport const disableMainQueueSyncDispatchIOS: Getter<boolean> = createNativeFlagGetter('disableMainQueueSyncDispatchIOS', false);\n/**\n * Prevent FabricMountingManager from reordering mountItems, which may lead to invalid state on the UI thread\n */\nexport const disableMountItemReorderingAndroid: Getter<boolean> = createNativeFlagGetter('disableMountItemReorderingAndroid', false);\n/**\n * Turns off the global measurement cache used by TextLayoutManager on Android.\n */\nexport const disableTextLayoutManagerCacheAndroid: Getter<boolean> = createNativeFlagGetter('disableTextLayoutManagerCacheAndroid', false);\n/**\n * When enabled, the accessibilityOrder prop will propagate to native platforms and define the accessibility order.\n */\nexport const enableAccessibilityOrder: Getter<boolean> = createNativeFlagGetter('enableAccessibilityOrder', false);\n/**\n * When enabled, Android will accumulate updates in rawProps to reduce the number of mounting instructions for cascading re-renders.\n */\nexport const enableAccumulatedUpdatesInRawPropsAndroid: Getter<boolean> = createNativeFlagGetter('enableAccumulatedUpdatesInRawPropsAndroid', false);\n/**\n * Enables various optimizations throughout the path of measuring text on Android.\n */\nexport const enableAndroidTextMeasurementOptimizations: Getter<boolean> = createNativeFlagGetter('enableAndroidTextMeasurementOptimizations', false);\n/**\n * Feature flag to enable the new bridgeless architecture. Note: Enabling this will force enable the following flags: `useTurboModules` & `enableFabricRenderer`.\n */\nexport const enableBridgelessArchitecture: Getter<boolean> = createNativeFlagGetter('enableBridgelessArchitecture', false);\n/**\n * Enable prop iterator setter-style construction of Props in C++ (this flag is not used in Java).\n */\nexport const enableCppPropsIteratorSetter: Getter<boolean> = createNativeFlagGetter('enableCppPropsIteratorSetter', false);\n/**\n * This enables the fabric implementation of focus search so that we can focus clipped elements\n */\nexport const enableCustomFocusSearchOnClippedElementsAndroid: Getter<boolean> = createNativeFlagGetter('enableCustomFocusSearchOnClippedElementsAndroid', true);\n/**\n * Enables destructor calls for ShadowTreeRevision in the background to reduce UI thread work.\n */\nexport const enableDestroyShadowTreeRevisionAsync: Getter<boolean> = createNativeFlagGetter('enableDestroyShadowTreeRevisionAsync', false);\n/**\n * When enabled a subset of components will avoid double measurement on Android.\n */\nexport const enableDoubleMeasurementFixAndroid: Getter<boolean> = createNativeFlagGetter('enableDoubleMeasurementFixAndroid', false);\n/**\n * Feature flag to configure eager attachment of the root view/initialisation of the JS code.\n */\nexport const enableEagerRootViewAttachment: Getter<boolean> = createNativeFlagGetter('enableEagerRootViewAttachment', false);\n/**\n * This feature flag enables logs for Fabric.\n */\nexport const enableFabricLogs: Getter<boolean> = createNativeFlagGetter('enableFabricLogs', false);\n/**\n * Enables the use of the Fabric renderer in the whole app.\n */\nexport const enableFabricRenderer: Getter<boolean> = createNativeFlagGetter('enableFabricRenderer', false);\n/**\n * This feature flag enables a fix for reparenting fix in differentiator\n */\nexport const enableFixForParentTagDuringReparenting: Getter<boolean> = createNativeFlagGetter('enableFixForParentTagDuringReparenting', false);\n/**\n * Enables font scale changes updating layout for measurable nodes.\n */\nexport const enableFontScaleChangesUpdatingLayout: Getter<boolean> = createNativeFlagGetter('enableFontScaleChangesUpdatingLayout', false);\n/**\n * Applies base offset for each line of text separately on iOS.\n */\nexport const enableIOSTextBaselineOffsetPerLine: Getter<boolean> = createNativeFlagGetter('enableIOSTextBaselineOffsetPerLine', false);\n/**\n * iOS Views will clip to their padding box vs border box\n */\nexport const enableIOSViewClipToPaddingBox: Getter<boolean> = createNativeFlagGetter('enableIOSViewClipToPaddingBox', false);\n/**\n * This is to fix the issue with interop view manager where component descriptor lookup is causing ViewManager to preload.\n */\nexport const enableInteropViewManagerClassLookUpOptimizationIOS: Getter<boolean> = createNativeFlagGetter('enableInteropViewManagerClassLookUpOptimizationIOS', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on Android.\n */\nexport const enableLayoutAnimationsOnAndroid: Getter<boolean> = createNativeFlagGetter('enableLayoutAnimationsOnAndroid', false);\n/**\n * When enabled, LayoutAnimations API will animate state changes on iOS.\n */\nexport const enableLayoutAnimationsOnIOS: Getter<boolean> = createNativeFlagGetter('enableLayoutAnimationsOnIOS', true);\n/**\n * Make RCTUnsafeExecuteOnMainQueueSync less likely to deadlock, when used in conjuction with sync rendering/events.\n */\nexport const enableMainQueueCoordinatorOnIOS: Getter<boolean> = createNativeFlagGetter('enableMainQueueCoordinatorOnIOS', false);\n/**\n * Makes modules requiring main queue setup initialize on the main thread, during React Native init.\n */\nexport const enableMainQueueModulesOnIOS: Getter<boolean> = createNativeFlagGetter('enableMainQueueModulesOnIOS', false);\n/**\n * Enable NSNull conversion when handling module arguments on iOS\n */\nexport const enableModuleArgumentNSNullConversionIOS: Getter<boolean> = createNativeFlagGetter('enableModuleArgumentNSNullConversionIOS', false);\n/**\n * Parse CSS strings using the Fabric CSS parser instead of ViewConfig processing\n */\nexport const enableNativeCSSParsing: Getter<boolean> = createNativeFlagGetter('enableNativeCSSParsing', false);\n/**\n * Enable network event reporting hooks in each native platform through `NetworkReporter`. This flag should be combined with `enableResourceTimingAPI` and `fuseboxNetworkInspectionEnabled` to enable end-to-end reporting behaviour via the Web Performance API and CDP debugging respectively.\n */\nexport const enableNetworkEventReporting: Getter<boolean> = createNativeFlagGetter('enableNetworkEventReporting', false);\n/**\n * Use BackgroundDrawable and BorderDrawable instead of CSSBackgroundDrawable\n */\nexport const enableNewBackgroundAndBorderDrawables: Getter<boolean> = createNativeFlagGetter('enableNewBackgroundAndBorderDrawables', true);\n/**\n * Enables caching text layout artifacts for later reuse\n */\nexport const enablePreparedTextLayout: Getter<boolean> = createNativeFlagGetter('enablePreparedTextLayout', false);\n/**\n * When enabled, Android will receive prop updates based on the differences between the last rendered shadow node and the last committed shadow node.\n */\nexport const enablePropsUpdateReconciliationAndroid: Getter<boolean> = createNativeFlagGetter('enablePropsUpdateReconciliationAndroid', false);\n/**\n * Enables the reporting of network resource timings through `PerformanceObserver`.\n */\nexport const enableResourceTimingAPI: Getter<boolean> = createNativeFlagGetter('enableResourceTimingAPI', false);\n/**\n * Dispatches state updates synchronously in Fabric (e.g.: updates the scroll position in the shadow tree synchronously from the main thread).\n */\nexport const enableSynchronousStateUpdates: Getter<boolean> = createNativeFlagGetter('enableSynchronousStateUpdates', false);\n/**\n * Enables View Culling: as soon as a view goes off screen, it can be reused anywhere in the UI and pieced together with other items to create new UI elements.\n */\nexport const enableViewCulling: Getter<boolean> = createNativeFlagGetter('enableViewCulling', false);\n/**\n * Enables View Recycling. When enabled, individual ViewManagers must still opt-in.\n */\nexport const enableViewRecycling: Getter<boolean> = createNativeFlagGetter('enableViewRecycling', false);\n/**\n * Enables View Recycling for <Text> via ReactTextView/ReactTextViewManager.\n */\nexport const enableViewRecyclingForText: Getter<boolean> = createNativeFlagGetter('enableViewRecyclingForText', true);\n/**\n * Enables View Recycling for <View> via ReactViewGroup/ReactViewManager.\n */\nexport const enableViewRecyclingForView: Getter<boolean> = createNativeFlagGetter('enableViewRecyclingForView', true);\n/**\n * Enables VirtualView debug features such as logging and overlays.\n */\nexport const enableVirtualViewDebugFeatures: Getter<boolean> = createNativeFlagGetter('enableVirtualViewDebugFeatures', false);\n/**\n * Enables reading render state when dispatching VirtualView events.\n */\nexport const enableVirtualViewRenderState: Getter<boolean> = createNativeFlagGetter('enableVirtualViewRenderState', false);\n/**\n * Enables window focus detection for prioritizing VirtualView events.\n */\nexport const enableVirtualViewWindowFocusDetection: Getter<boolean> = createNativeFlagGetter('enableVirtualViewWindowFocusDetection', false);\n/**\n * Uses the default event priority instead of the discreet event priority by default when dispatching events from Fabric to React.\n */\nexport const fixMappingOfEventPrioritiesBetweenFabricAndReact: Getter<boolean> = createNativeFlagGetter('fixMappingOfEventPrioritiesBetweenFabricAndReact', false);\n/**\n * Flag determining if the React Native DevTools (Fusebox) CDP backend should be enabled in release builds. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxEnabledRelease: Getter<boolean> = createNativeFlagGetter('fuseboxEnabledRelease', false);\n/**\n * Enable network inspection support in the React Native DevTools CDP backend. Requires `enableBridgelessArchitecture`. This flag is global and should not be changed across React Host lifetimes.\n */\nexport const fuseboxNetworkInspectionEnabled: Getter<boolean> = createNativeFlagGetter('fuseboxNetworkInspectionEnabled', false);\n/**\n * Hides offscreen VirtualViews on iOS by setting hidden = YES to avoid extra cost of views\n */\nexport const hideOffscreenVirtualViewsOnIOS: Getter<boolean> = createNativeFlagGetter('hideOffscreenVirtualViewsOnIOS', false);\n/**\n * Number cached PreparedLayouts in TextLayoutManager cache\n */\nexport const preparedTextCacheSize: Getter<number> = createNativeFlagGetter('preparedTextCacheSize', 200);\n/**\n * Enables a new mechanism in ShadowTree to prevent problems caused by multiple threads trying to commit concurrently. If a thread tries to commit a few times unsuccessfully, it will acquire a lock and try again.\n */\nexport const preventShadowTreeCommitExhaustion: Getter<boolean> = createNativeFlagGetter('preventShadowTreeCommitExhaustion', false);\n/**\n * Enables storing js caller stack when creating promise in native module. This is useful in case of Promise rejection and tracing the cause.\n */\nexport const traceTurboModulePromiseRejectionsOnAndroid: Getter<boolean> = createNativeFlagGetter('traceTurboModulePromiseRejectionsOnAndroid', false);\n/**\n * When enabled, runtime shadow node references will be updated during the commit. This allows running RSNRU from any thread without corrupting the renderer state.\n */\nexport const updateRuntimeShadowNodeReferencesOnCommit: Getter<boolean> = createNativeFlagGetter('updateRuntimeShadowNodeReferencesOnCommit', false);\n/**\n * In Bridgeless mode, use the always available javascript error reporting pipeline.\n */\nexport const useAlwaysAvailableJSErrorHandling: Getter<boolean> = createNativeFlagGetter('useAlwaysAvailableJSErrorHandling', false);\n/**\n * Should this application enable the Fabric Interop Layer for Android? If yes, the application will behave so that it can accept non-Fabric components and render them on Fabric. This toggle is controlling extra logic such as custom event dispatching that are needed for the Fabric Interop Layer to work correctly.\n */\nexport const useFabricInterop: Getter<boolean> = createNativeFlagGetter('useFabricInterop', true);\n/**\n * When enabled, the native view configs are used in bridgeless mode.\n */\nexport const useNativeViewConfigsInBridgelessMode: Getter<boolean> = createNativeFlagGetter('useNativeViewConfigsInBridgelessMode', false);\n/**\n * Uses an optimized mechanism for event batching on Android that does not need to wait for a Choreographer frame callback.\n */\nexport const useOptimizedEventBatchingOnAndroid: Getter<boolean> = createNativeFlagGetter('useOptimizedEventBatchingOnAndroid', false);\n/**\n * Instead of using folly::dynamic as internal representation in RawProps and RawValue, use jsi::Value\n */\nexport const useRawPropsJsiValue: Getter<boolean> = createNativeFlagGetter('useRawPropsJsiValue', false);\n/**\n * Use the state stored on the source shadow node when cloning it instead of reading in the most recent state on the shadow node family.\n */\nexport const useShadowNodeStateOnClone: Getter<boolean> = createNativeFlagGetter('useShadowNodeStateOnClone', false);\n/**\n * In Bridgeless mode, should legacy NativeModules use the TurboModule system?\n */\nexport const useTurboModuleInterop: Getter<boolean> = createNativeFlagGetter('useTurboModuleInterop', false);\n/**\n * When enabled, NativeModules will be executed by using the TurboModule system\n */\nexport const useTurboModules: Getter<boolean> = createNativeFlagGetter('useTurboModules', false);\n/**\n * Initial prerender ratio for VirtualView.\n */\nexport const virtualViewPrerenderRatio: Getter<number> = createNativeFlagGetter('virtualViewPrerenderRatio', 5);\n\n/**\n * Overrides the feature flags with the provided methods.\n * NOTE: Only JS-only flags can be overridden from JavaScript using this API.\n */\nexport const override = setOverrides;\n"],"mappings":"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","ignoreList":[]}