faebdf06c41463883d131d62bed995ee
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _MaterialIcons = _interopRequireDefault(require("react-native-vector-icons/MaterialIcons"));
var _jsxRuntime = require("react/jsx-runtime");
function _interopRequireWildcard(e, t) { if ("function" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function _interopRequireWildcard(e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || "object" != typeof e && "function" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (var _t in e) "default" !== _t && {}.hasOwnProperty.call(e, _t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, _t)) && (i.get || i.set) ? o(f, _t, i) : f[_t] = e[_t]); return f; })(e, t); }
function cov_2r59xij395() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\components\\discovery\\SearchBar.tsx";
  var hash = "397ede6e68a1cac19687d70db81826e533ed24ee";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\components\\discovery\\SearchBar.tsx",
    statementMap: {
      "0": {
        start: {
          line: 29,
          column: 44
        },
        end: {
          line: 110,
          column: 1
        }
      },
      "1": {
        start: {
          line: 39,
          column: 19
        },
        end: {
          line: 39,
          column: 42
        }
      },
      "2": {
        start: {
          line: 40,
          column: 24
        },
        end: {
          line: 40,
          column: 61
        }
      },
      "3": {
        start: {
          line: 42,
          column: 28
        },
        end: {
          line: 57,
          column: 3
        }
      },
      "4": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 54,
          column: 15
        }
      },
      "5": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 20
        }
      },
      "6": {
        start: {
          line: 59,
          column: 22
        },
        end: {
          line: 62,
          column: 3
        }
      },
      "7": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 21
        }
      },
      "8": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 30
        }
      },
      "9": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 109,
          column: 4
        }
      },
      "10": {
        start: {
          line: 112,
          column: 15
        },
        end: {
          line: 191,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 29,
            column: 44
          },
          end: {
            line: 29,
            column: 45
          }
        },
        loc: {
          start: {
            line: 38,
            column: 6
          },
          end: {
            line: 110,
            column: 1
          }
        },
        line: 38
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 28
          },
          end: {
            line: 42,
            column: 29
          }
        },
        loc: {
          start: {
            line: 42,
            column: 34
          },
          end: {
            line: 57,
            column: 3
          }
        },
        line: 42
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 59,
            column: 22
          },
          end: {
            line: 59,
            column: 23
          }
        },
        loc: {
          start: {
            line: 59,
            column: 28
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 59
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 27
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 16
          },
          end: {
            line: 32,
            column: 27
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 82,
            column: 27
          },
          end: {
            line: 82,
            column: 76
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 82,
            column: 51
          },
          end: {
            line: 82,
            column: 66
          }
        }, {
          start: {
            line: 82,
            column: 69
          },
          end: {
            line: 82,
            column: 76
          }
        }],
        line: 82
      },
      "2": {
        loc: {
          start: {
            line: 85,
            column: 9
          },
          end: {
            line: 89,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 9
          },
          end: {
            line: 85,
            column: 34
          }
        }, {
          start: {
            line: 85,
            column: 38
          },
          end: {
            line: 85,
            column: 54
          }
        }, {
          start: {
            line: 86,
            column: 10
          },
          end: {
            line: 88,
            column: 29
          }
        }],
        line: 85
      },
      "3": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 22
          }
        }, {
          start: {
            line: 97,
            column: 26
          },
          end: {
            line: 97,
            column: 51
          }
        }],
        line: 97
      },
      "4": {
        loc: {
          start: {
            line: 103,
            column: 19
          },
          end: {
            line: 103,
            column: 53
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 103,
            column: 32
          },
          end: {
            line: 103,
            column: 41
          }
        }, {
          start: {
            line: 103,
            column: 44
          },
          end: {
            line: 103,
            column: 53
          }
        }],
        line: 103
      },
      "5": {
        loc: {
          start: {
            line: 105,
            column: 11
          },
          end: {
            line: 105,
            column: 60
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 105,
            column: 11
          },
          end: {
            line: 105,
            column: 21
          }
        }, {
          start: {
            line: 105,
            column: 25
          },
          end: {
            line: 105,
            column: 60
          }
        }],
        line: 105
      },
      "6": {
        loc: {
          start: {
            line: 127,
            column: 21
          },
          end: {
            line: 127,
            column: 51
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 127,
            column: 45
          },
          end: {
            line: 127,
            column: 47
          }
        }, {
          start: {
            line: 127,
            column: 50
          },
          end: {
            line: 127,
            column: 51
          }
        }],
        line: 127
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "397ede6e68a1cac19687d70db81826e533ed24ee"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_2r59xij395 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2r59xij395();
cov_2r59xij395().s[0]++;
var SearchBar = function SearchBar(_ref) {
  var value = _ref.value,
    onChangeText = _ref.onChangeText,
    _ref$placeholder = _ref.placeholder,
    placeholder = _ref$placeholder === void 0 ? (cov_2r59xij395().b[0][0]++, 'Search...') : _ref$placeholder,
    onFilterPress = _ref.onFilterPress,
    hasFilters = _ref.hasFilters,
    onFocus = _ref.onFocus,
    onBlur = _ref.onBlur,
    autoFocus = _ref.autoFocus;
  cov_2r59xij395().f[0]++;
  var inputRef = (cov_2r59xij395().s[1]++, (0, _react.useRef)(null));
  var animatedScale = (cov_2r59xij395().s[2]++, (0, _react.useRef)(new _reactNative.Animated.Value(1)).current);
  cov_2r59xij395().s[3]++;
  var handleFilterPress = function handleFilterPress() {
    cov_2r59xij395().f[1]++;
    cov_2r59xij395().s[4]++;
    _reactNative.Animated.sequence([_reactNative.Animated.timing(animatedScale, {
      toValue: 0.95,
      duration: 100,
      useNativeDriver: true
    }), _reactNative.Animated.timing(animatedScale, {
      toValue: 1,
      duration: 100,
      useNativeDriver: true
    })]).start();
    cov_2r59xij395().s[5]++;
    onFilterPress();
  };
  cov_2r59xij395().s[6]++;
  var handleClear = function handleClear() {
    var _inputRef$current;
    cov_2r59xij395().f[2]++;
    cov_2r59xij395().s[7]++;
    onChangeText('');
    cov_2r59xij395().s[8]++;
    (_inputRef$current = inputRef.current) == null || _inputRef$current.focus();
  };
  cov_2r59xij395().s[9]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.searchContainer,
      children: [(0, _jsxRuntime.jsx)(_MaterialIcons.default, {
        name: "search",
        size: 20,
        color: "#9ca3af",
        style: styles.searchIcon
      }), (0, _jsxRuntime.jsx)(_reactNative.TextInput, {
        ref: inputRef,
        style: styles.input,
        value: value,
        onChangeText: onChangeText,
        placeholder: placeholder,
        placeholderTextColor: "#9ca3af",
        autoCapitalize: "words",
        autoCorrect: false,
        autoFocus: autoFocus,
        onFocus: onFocus,
        onBlur: onBlur,
        returnKeyType: "search",
        clearButtonMode: _reactNative.Platform.OS === 'ios' ? (cov_2r59xij395().b[1][0]++, 'while-editing') : (cov_2r59xij395().b[1][1]++, 'never')
      }), (cov_2r59xij395().b[2][0]++, _reactNative.Platform.OS === 'android') && (cov_2r59xij395().b[2][1]++, value.length > 0) && (cov_2r59xij395().b[2][2]++, (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {
        onPress: handleClear,
        style: styles.clearButton,
        children: (0, _jsxRuntime.jsx)(_MaterialIcons.default, {
          name: "close",
          size: 18,
          color: "#9ca3af"
        })
      }))]
    }), (0, _jsxRuntime.jsx)(_reactNative.Animated.View, {
      style: [styles.filterButtonContainer, {
        transform: [{
          scale: animatedScale
        }]
      }],
      children: (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
        onPress: handleFilterPress,
        style: [styles.filterButton, (cov_2r59xij395().b[3][0]++, hasFilters) && (cov_2r59xij395().b[3][1]++, styles.filterButtonActive)],
        children: [(0, _jsxRuntime.jsx)(_MaterialIcons.default, {
          name: "tune",
          size: 20,
          color: hasFilters ? (cov_2r59xij395().b[4][0]++, '#ffffff') : (cov_2r59xij395().b[4][1]++, '#6c757d')
        }), (cov_2r59xij395().b[5][0]++, hasFilters) && (cov_2r59xij395().b[5][1]++, (0, _jsxRuntime.jsx)(_reactNative.View, {
          style: styles.filterBadge
        }))]
      })
    })]
  });
};
var styles = (cov_2r59xij395().s[10]++, _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12
  },
  searchContainer: Object.assign({
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#ffffff',
    borderRadius: 12,
    borderWidth: 1,
    borderColor: '#e9ecef',
    paddingHorizontal: 12,
    paddingVertical: _reactNative.Platform.OS === 'ios' ? (cov_2r59xij395().b[6][0]++, 12) : (cov_2r59xij395().b[6][1]++, 8)
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000000',
      shadowOffset: {
        width: 0,
        height: 1
      },
      shadowOpacity: 0.05,
      shadowRadius: 2
    },
    android: {
      elevation: 1
    }
  })),
  searchIcon: {
    marginRight: 8
  },
  input: {
    flex: 1,
    fontSize: 16,
    color: '#1a1a1a',
    includeFontPadding: false,
    textAlignVertical: 'center'
  },
  clearButton: {
    padding: 4,
    marginLeft: 4
  },
  filterButtonContainer: {
    position: 'relative'
  },
  filterButton: Object.assign({
    width: 44,
    height: 44,
    borderRadius: 12,
    backgroundColor: '#f8f9fa',
    borderWidth: 1,
    borderColor: '#e9ecef',
    justifyContent: 'center',
    alignItems: 'center'
  }, _reactNative.Platform.select({
    ios: {
      shadowColor: '#000000',
      shadowOffset: {
        width: 0,
        height: 1
      },
      shadowOpacity: 0.05,
      shadowRadius: 2
    },
    android: {
      elevation: 1
    }
  })),
  filterButtonActive: {
    backgroundColor: '#007bff',
    borderColor: '#007bff'
  },
  filterBadge: {
    position: 'absolute',
    top: 6,
    right: 6,
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: '#dc3545'
  }
}));
var _default = exports.default = SearchBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,