4f9824c2dbfd0815f7917ec87d571a35
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.store = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _authSlice = _interopRequireDefault(require("./authSlice"));
var _profileSlice = _interopRequireDefault(require("./profileSlice"));
var _discoverySlice = _interopRequireDefault(require("./slices/discoverySlice"));
var _connectionSlice = _interopRequireDefault(require("./slices/connectionSlice"));
function cov_qstcobj4n() {
  var path = "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\store\\store.ts";
  var hash = "b29b710f3d0d0201465f9dad767382b93a1a0a3c";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\robot\\Desktop\\digbiz5\\digbiz5\\src\\store\\store.ts",
    statementMap: {
      "0": {
        start: {
          line: 7,
          column: 21
        },
        end: {
          line: 20,
          column: 2
        }
      },
      "1": {
        start: {
          line: 15,
          column: 4
        },
        end: {
          line: 19,
          column: 6
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 14
          },
          end: {
            line: 14,
            column: 15
          }
        },
        loc: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 19,
            column: 6
          }
        },
        line: 15
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {
      "0": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b29b710f3d0d0201465f9dad767382b93a1a0a3c"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_qstcobj4n = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_qstcobj4n();
var store = exports.store = (cov_qstcobj4n().s[0]++, (0, _toolkit.configureStore)({
  reducer: {
    auth: _authSlice.default,
    profile: _profileSlice.default,
    discovery: _discoverySlice.default,
    connections: _connectionSlice.default
  },
  middleware: function middleware(getDefaultMiddleware) {
    cov_qstcobj4n().f[0]++;
    cov_qstcobj4n().s[1]++;
    return getDefaultMiddleware({
      serializableCheck: {
        ignoredActions: []
      }
    });
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9vbGtpdCIsInJlcXVpcmUiLCJfYXV0aFNsaWNlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9wcm9maWxlU2xpY2UiLCJfZGlzY292ZXJ5U2xpY2UiLCJfY29ubmVjdGlvblNsaWNlIiwiY292X3FzdGNvYmo0biIsInBhdGgiLCJoYXNoIiwiZ2xvYmFsIiwiRnVuY3Rpb24iLCJnY3YiLCJjb3ZlcmFnZURhdGEiLCJzdGF0ZW1lbnRNYXAiLCJzdGFydCIsImxpbmUiLCJjb2x1bW4iLCJlbmQiLCJmbk1hcCIsIm5hbWUiLCJkZWNsIiwibG9jIiwiYnJhbmNoTWFwIiwicyIsImYiLCJiIiwiX2NvdmVyYWdlU2NoZW1hIiwiY292ZXJhZ2UiLCJhY3R1YWxDb3ZlcmFnZSIsInN0b3JlIiwiZXhwb3J0cyIsImNvbmZpZ3VyZVN0b3JlIiwicmVkdWNlciIsImF1dGgiLCJhdXRoU2xpY2UiLCJwcm9maWxlIiwicHJvZmlsZVNsaWNlIiwiZGlzY292ZXJ5IiwiZGlzY292ZXJ5U2xpY2UiLCJjb25uZWN0aW9ucyIsImNvbm5lY3Rpb25TbGljZSIsIm1pZGRsZXdhcmUiLCJnZXREZWZhdWx0TWlkZGxld2FyZSIsInNlcmlhbGl6YWJsZUNoZWNrIiwiaWdub3JlZEFjdGlvbnMiXSwic291cmNlcyI6WyJzdG9yZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25maWd1cmVTdG9yZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnO1xuaW1wb3J0IGF1dGhTbGljZSBmcm9tICcuL2F1dGhTbGljZSc7XG5pbXBvcnQgcHJvZmlsZVNsaWNlIGZyb20gJy4vcHJvZmlsZVNsaWNlJztcbmltcG9ydCBkaXNjb3ZlcnlTbGljZSBmcm9tICcuL3NsaWNlcy9kaXNjb3ZlcnlTbGljZSc7XG5pbXBvcnQgY29ubmVjdGlvblNsaWNlIGZyb20gJy4vc2xpY2VzL2Nvbm5lY3Rpb25TbGljZSc7XG5cbmV4cG9ydCBjb25zdCBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKHtcbiAgcmVkdWNlcjoge1xuICAgIGF1dGg6IGF1dGhTbGljZSxcbiAgICBwcm9maWxlOiBwcm9maWxlU2xpY2UsXG4gICAgZGlzY292ZXJ5OiBkaXNjb3ZlcnlTbGljZSxcbiAgICBjb25uZWN0aW9uczogY29ubmVjdGlvblNsaWNlLFxuICB9LFxuICBtaWRkbGV3YXJlOiBnZXREZWZhdWx0TWlkZGxld2FyZSA9PlxuICAgIGdldERlZmF1bHRNaWRkbGV3YXJlKHtcbiAgICAgIHNlcmlhbGl6YWJsZUNoZWNrOiB7XG4gICAgICAgIGlnbm9yZWRBY3Rpb25zOiBbXSxcbiAgICAgIH0sXG4gICAgfSksXG59KTtcblxuZXhwb3J0IHR5cGUgUm9vdFN0YXRlID0gUmV0dXJuVHlwZTx0eXBlb2Ygc3RvcmUuZ2V0U3RhdGU+O1xuZXhwb3J0IHR5cGUgQXBwRGlzcGF0Y2ggPSB0eXBlb2Ygc3RvcmUuZGlzcGF0Y2g7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBQUEsUUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsVUFBQSxHQUFBQyxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUcsYUFBQSxHQUFBRCxzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUksZUFBQSxHQUFBRixzQkFBQSxDQUFBRixPQUFBO0FBQ0EsSUFBQUssZ0JBQUEsR0FBQUgsc0JBQUEsQ0FBQUYsT0FBQTtBQUF1RCxTQUFBTSxjQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUFGLEtBQUE7VUFBQUMsSUFBQTtVQUFBQyxNQUFBO1FBQUE7UUFBQUMsR0FBQTtVQUFBRixJQUFBO1VBQUFDLE1BQUE7UUFBQTtNQUFBO0lBQUE7SUFBQUUsS0FBQTtNQUFBO1FBQUFDLElBQUE7UUFBQUMsSUFBQTtVQUFBTixLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBSyxHQUFBO1VBQUFQLEtBQUE7WUFBQUMsSUFBQTtZQUFBQyxNQUFBO1VBQUE7VUFBQUMsR0FBQTtZQUFBRixJQUFBO1lBQUFDLE1BQUE7VUFBQTtRQUFBO1FBQUFELElBQUE7TUFBQTtJQUFBO0lBQUFPLFNBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO01BQUE7SUFBQTtJQUFBQyxDQUFBO0lBQUFDLGVBQUE7SUFBQWxCLElBQUE7RUFBQTtFQUFBLElBQUFtQixRQUFBLEdBQUFsQixNQUFBLENBQUFFLEdBQUEsTUFBQUYsTUFBQSxDQUFBRSxHQUFBO0VBQUEsS0FBQWdCLFFBQUEsQ0FBQXBCLElBQUEsS0FBQW9CLFFBQUEsQ0FBQXBCLElBQUEsRUFBQUMsSUFBQSxLQUFBQSxJQUFBO0lBQUFtQixRQUFBLENBQUFwQixJQUFBLElBQUFLLFlBQUE7RUFBQTtFQUFBLElBQUFnQixjQUFBLEdBQUFELFFBQUEsQ0FBQXBCLElBQUE7RUFBQTtJQUFBRCxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBc0IsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQXRCLGFBQUE7QUFFaEQsSUFBTXVCLEtBQUssR0FBQUMsT0FBQSxDQUFBRCxLQUFBLElBQUF2QixhQUFBLEdBQUFpQixDQUFBLE9BQUcsSUFBQVEsdUJBQWMsRUFBQztFQUNsQ0MsT0FBTyxFQUFFO0lBQ1BDLElBQUksRUFBRUMsa0JBQVM7SUFDZkMsT0FBTyxFQUFFQyxxQkFBWTtJQUNyQkMsU0FBUyxFQUFFQyx1QkFBYztJQUN6QkMsV0FBVyxFQUFFQztFQUNmLENBQUM7RUFDREMsVUFBVSxFQUFFLFNBQVpBLFVBQVVBLENBQUVDLG9CQUFvQixFQUM5QjtJQUFBcEMsYUFBQSxHQUFBa0IsQ0FBQTtJQUFBbEIsYUFBQSxHQUFBaUIsQ0FBQTtJQUFBLE9BQUFtQixvQkFBb0IsQ0FBQztNQUNuQkMsaUJBQWlCLEVBQUU7UUFDakJDLGNBQWMsRUFBRTtNQUNsQjtJQUNGLENBQUMsQ0FBQztFQUFEO0FBQ0wsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119