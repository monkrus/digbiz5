{"version":3,"names":["_authService","require","cov_57x0wld43","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","LINKEDIN_OAUTH_URLS","AUTHORIZE","TOKEN","PROFILE","EMAIL","LinkedInAuthService","exports","_classCallCheck2","default","config","_createClass2","key","value","configure","console","log","getAuthorizationUrl","Error","params","URLSearchParams","response_type","client_id","clientId","redirect_uri","redirectUri","scope","scopes","join","state","generateRandomState","toString","_exchangeCodeForToken","_asyncToGenerator2","code","_state","response","fetch","method","headers","Accept","body","grant_type","client_secret","clientSecret","ok","errorData","text","tokenData","json","access_token","error","exchangeCodeForToken","_x","_x2","apply","arguments","_getUserProfile","accessToken","Authorization","statusText","getUserProfile","_x3","_getUserEmail","emailData","elements","length","emailAddress","getUserEmail","_x4","_signInWithCode","_profile$profilePictu","_ref","Promise","all","_ref2","_slicedToArray2","profile","email","avatar","profilePicture","identifiers","identifier","socialLoginData","provider","id","localizedFirstName","localizedLastName","authResponse","authService","loginWithLinkedIn","message","signInWithCode","_x5","_x6","array","Uint8Array","crypto","getRandomValues","Array","from","byte","padStart","parseCallbackUrl","url","urlObj","URL","searchParams","get","validateState","receivedState","expectedState","linkedInAuthService","configureLinkedInAuth","LINKEDIN_SCOPES","BASIC_PROFILE","EMAIL_ADDRESS","FULL_PROFILE","DEFAULT_LINKEDIN_SCOPES"],"sources":["linkedinAuthService.ts"],"sourcesContent":["/**\r\n * LinkedIn OAuth Service\r\n *\r\n * Handles LinkedIn OAuth authentication using WebView-based flow.\r\n * Implements LinkedIn OAuth 2.0 protocol for social login.\r\n */\r\n\r\nimport { SocialLoginData, AuthResponse } from '../types/auth';\r\nimport { authService } from './authService';\r\n\r\n// LinkedIn OAuth configuration\r\ninterface LinkedInConfig {\r\n  clientId: string;\r\n  clientSecret: string;\r\n  redirectUri: string;\r\n  scopes: string[];\r\n}\r\n\r\n// LinkedIn OAuth URLs\r\nconst LINKEDIN_OAUTH_URLS = {\r\n  AUTHORIZE: 'https://www.linkedin.com/oauth/v2/authorization',\r\n  TOKEN: 'https://www.linkedin.com/oauth/v2/accessToken',\r\n  PROFILE: 'https://api.linkedin.com/v2/people/~',\r\n  EMAIL:\r\n    'https://api.linkedin.com/v2/emailAddress?q=members&projection=(elements*(handle~))',\r\n} as const;\r\n\r\n// LinkedIn user profile structure\r\ninterface LinkedInProfile {\r\n  id: string;\r\n  localizedFirstName: string;\r\n  localizedLastName: string;\r\n  profilePicture?: {\r\n    'displayImage~': {\r\n      elements: Array<{\r\n        identifiers: Array<{\r\n          identifier: string;\r\n        }>;\r\n      }>;\r\n    };\r\n  };\r\n}\r\n\r\ninterface LinkedInEmailResponse {\r\n  elements: Array<{\r\n    'handle~': {\r\n      emailAddress: string;\r\n    };\r\n  }>;\r\n}\r\n\r\n/**\r\n * LinkedIn Authentication Service\r\n */\r\nexport class LinkedInAuthService {\r\n  private config: LinkedInConfig | null = null;\r\n\r\n  /**\r\n   * Configure LinkedIn OAuth\r\n   */\r\n  configure(config: LinkedInConfig): void {\r\n    this.config = config;\r\n    console.log('LinkedIn OAuth configured successfully');\r\n  }\r\n\r\n  /**\r\n   * Generate LinkedIn OAuth authorization URL\r\n   */\r\n  getAuthorizationUrl(): string {\r\n    if (!this.config) {\r\n      throw new Error('LinkedIn OAuth not configured. Call configure() first.');\r\n    }\r\n\r\n    const params = new URLSearchParams({\r\n      response_type: 'code',\r\n      client_id: this.config.clientId,\r\n      redirect_uri: this.config.redirectUri,\r\n      scope: this.config.scopes.join(' '),\r\n      state: this.generateRandomState(),\r\n    });\r\n\r\n    return `${LINKEDIN_OAUTH_URLS.AUTHORIZE}?${params.toString()}`;\r\n  }\r\n\r\n  /**\r\n   * Exchange authorization code for access token\r\n   */\r\n  async exchangeCodeForToken(code: string, _state: string): Promise<string> {\r\n    if (!this.config) {\r\n      throw new Error('LinkedIn OAuth not configured');\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(LINKEDIN_OAUTH_URLS.TOKEN, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded',\r\n          Accept: 'application/json',\r\n        },\r\n        body: new URLSearchParams({\r\n          grant_type: 'authorization_code',\r\n          code,\r\n          redirect_uri: this.config.redirectUri,\r\n          client_id: this.config.clientId,\r\n          client_secret: this.config.clientSecret,\r\n        }).toString(),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.text();\r\n        throw new Error(`Token exchange failed: ${errorData}`);\r\n      }\r\n\r\n      const tokenData = await response.json();\r\n      return tokenData.access_token;\r\n    } catch (error) {\r\n      console.error('LinkedIn token exchange failed:', error);\r\n      throw new Error('Failed to exchange code for token');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get LinkedIn user profile\r\n   */\r\n  async getUserProfile(accessToken: string): Promise<LinkedInProfile> {\r\n    try {\r\n      const response = await fetch(LINKEDIN_OAUTH_URLS.PROFILE, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          Accept: 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Profile fetch failed: ${response.statusText}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error('LinkedIn profile fetch failed:', error);\r\n      throw new Error('Failed to fetch user profile');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get LinkedIn user email\r\n   */\r\n  async getUserEmail(accessToken: string): Promise<string> {\r\n    try {\r\n      const response = await fetch(LINKEDIN_OAUTH_URLS.EMAIL, {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n          Accept: 'application/json',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`Email fetch failed: ${response.statusText}`);\r\n      }\r\n\r\n      const emailData: LinkedInEmailResponse = await response.json();\r\n\r\n      if (!emailData.elements || emailData.elements.length === 0) {\r\n        throw new Error('No email found in LinkedIn profile');\r\n      }\r\n\r\n      return emailData.elements[0]['handle~'].emailAddress;\r\n    } catch (error) {\r\n      console.error('LinkedIn email fetch failed:', error);\r\n      throw new Error('Failed to fetch user email');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sign in with LinkedIn using authorization code\r\n   */\r\n  async signInWithCode(code: string, state: string): Promise<AuthResponse> {\r\n    try {\r\n      // Exchange code for access token\r\n      const accessToken = await this.exchangeCodeForToken(code, state);\r\n\r\n      // Get user profile and email\r\n      const [profile, email] = await Promise.all([\r\n        this.getUserProfile(accessToken),\r\n        this.getUserEmail(accessToken),\r\n      ]);\r\n\r\n      // Extract profile picture URL\r\n      let avatar: string | undefined;\r\n      if (\r\n        profile.profilePicture?.['displayImage~']?.elements?.[0]\r\n          ?.identifiers?.[0]\r\n      ) {\r\n        avatar =\r\n          profile.profilePicture['displayImage~'].elements[0].identifiers[0]\r\n            .identifier;\r\n      }\r\n\r\n      // Prepare social login data\r\n      const socialLoginData: SocialLoginData = {\r\n        provider: 'linkedin',\r\n        accessToken,\r\n        profile: {\r\n          id: profile.id,\r\n          email,\r\n          name: `${profile.localizedFirstName} ${profile.localizedLastName}`,\r\n          avatar,\r\n        },\r\n      };\r\n\r\n      // Authenticate with backend\r\n      const authResponse = await authService.loginWithLinkedIn(socialLoginData);\r\n\r\n      console.log('LinkedIn Sign-In successful');\r\n      return authResponse;\r\n    } catch (error) {\r\n      console.error('LinkedIn Sign-In failed:', error);\r\n      throw new Error(\r\n        error instanceof Error ? error.message : 'LinkedIn Sign-In failed',\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate random state for CSRF protection\r\n   */\r\n  private generateRandomState(): string {\r\n    const array = new Uint8Array(32);\r\n    crypto.getRandomValues(array);\r\n    return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join(\r\n      '',\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Parse callback URL to extract code and state\r\n   */\r\n  parseCallbackUrl(url: string): {\r\n    code?: string;\r\n    state?: string;\r\n    error?: string;\r\n  } {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      const params = urlObj.searchParams;\r\n\r\n      return {\r\n        code: params.get('code') || undefined,\r\n        state: params.get('state') || undefined,\r\n        error: params.get('error') || undefined,\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to parse callback URL:', error);\r\n      return { error: 'Invalid callback URL' };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate state parameter for CSRF protection\r\n   */\r\n  validateState(receivedState: string, expectedState: string): boolean {\r\n    return receivedState === expectedState;\r\n  }\r\n}\r\n\r\n// Default instance\r\nexport const linkedInAuthService = new LinkedInAuthService();\r\n\r\n// Configuration helper\r\nexport const configureLinkedInAuth = (config: LinkedInConfig): void => {\r\n  linkedInAuthService.configure(config);\r\n};\r\n\r\n// LinkedIn OAuth scopes\r\nexport const LINKEDIN_SCOPES = {\r\n  BASIC_PROFILE: 'r_liteprofile',\r\n  EMAIL_ADDRESS: 'r_emailaddress',\r\n  FULL_PROFILE: 'r_fullprofile',\r\n} as const;\r\n\r\n// Default scopes for authentication\r\nexport const DEFAULT_LINKEDIN_SCOPES = [\r\n  LINKEDIN_SCOPES.BASIC_PROFILE,\r\n  LINKEDIN_SCOPES.EMAIL_ADDRESS,\r\n];\r\n"],"mappings":";;;;;;;;;AAQA,IAAAA,YAAA,GAAAC,OAAA;AAA4C,SAAAC,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;UAAAR,GAAA;YAAAF,IAAA,EAAAU,SAAA;YAAAT,MAAA,EAAAS;UAAA;QAAA;QAAAV,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAM,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAW,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,eAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA;IAAAD,aAAA,YAAAA,CAAA;MAAA,OAAAyB,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAzB,aAAA;AAW5C,IAAM0B,mBAAmB,IAAA1B,aAAA,GAAAoB,CAAA,OAAG;EAC1BO,SAAS,EAAE,iDAAiD;EAC5DC,KAAK,EAAE,+CAA+C;EACtDC,OAAO,EAAE,sCAAsC;EAC/CC,KAAK,EACH;AACJ,CAAC,CAAS;AAAC,IA6BEC,mBAAmB,GAAAC,OAAA,CAAAD,mBAAA;EAAA,SAAAA,oBAAA;IAAA,IAAAE,gBAAA,CAAAC,OAAA,QAAAH,mBAAA;IAAA,KACtBI,MAAM,IAAAnC,aAAA,GAAAoB,CAAA,OAA0B,IAAI;EAAA;EAAA,WAAAgB,aAAA,CAAAF,OAAA,EAAAH,mBAAA;IAAAM,GAAA;IAAAC,KAAA,EAK5C,SAAAC,SAASA,CAACJ,MAAsB,EAAQ;MAAAnC,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MACtC,IAAI,CAACe,MAAM,GAAGA,MAAM;MAACnC,aAAA,GAAAoB,CAAA;MACrBoB,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;IACvD;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAKD,SAAAI,mBAAmBA,CAAA,EAAW;MAAA1C,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MAC5B,IAAI,CAAC,IAAI,CAACe,MAAM,EAAE;QAAAnC,aAAA,GAAAsB,CAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAChB,MAAM,IAAIuB,KAAK,CAAC,wDAAwD,CAAC;MAC3E,CAAC;QAAA3C,aAAA,GAAAsB,CAAA;MAAA;MAED,IAAMsB,MAAM,IAAA5C,aAAA,GAAAoB,CAAA,OAAG,IAAIyB,eAAe,CAAC;QACjCC,aAAa,EAAE,MAAM;QACrBC,SAAS,EAAE,IAAI,CAACZ,MAAM,CAACa,QAAQ;QAC/BC,YAAY,EAAE,IAAI,CAACd,MAAM,CAACe,WAAW;QACrCC,KAAK,EAAE,IAAI,CAAChB,MAAM,CAACiB,MAAM,CAACC,IAAI,CAAC,GAAG,CAAC;QACnCC,KAAK,EAAE,IAAI,CAACC,mBAAmB,CAAC;MAClC,CAAC,CAAC;MAACvD,aAAA,GAAAoB,CAAA;MAEH,OAAO,GAAGM,mBAAmB,CAACC,SAAS,IAAIiB,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAE;IAChE;EAAC;IAAAnB,GAAA;IAAAC,KAAA;MAAA,IAAAmB,qBAAA,OAAAC,kBAAA,CAAAxB,OAAA,EAKD,WAA2ByB,IAAY,EAAEC,MAAc,EAAmB;QAAA5D,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACxE,IAAI,CAAC,IAAI,CAACe,MAAM,EAAE;UAAAnC,aAAA,GAAAsB,CAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAChB,MAAM,IAAIuB,KAAK,CAAC,+BAA+B,CAAC;QAClD,CAAC;UAAA3C,aAAA,GAAAsB,CAAA;QAAA;QAAAtB,aAAA,GAAAoB,CAAA;QAED,IAAI;UACF,IAAMyC,QAAQ,IAAA7D,aAAA,GAAAoB,CAAA,cAAS0C,KAAK,CAACpC,mBAAmB,CAACE,KAAK,EAAE;YACtDmC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE,mCAAmC;cACnDC,MAAM,EAAE;YACV,CAAC;YACDC,IAAI,EAAE,IAAIrB,eAAe,CAAC;cACxBsB,UAAU,EAAE,oBAAoB;cAChCR,IAAI,EAAJA,IAAI;cACJV,YAAY,EAAE,IAAI,CAACd,MAAM,CAACe,WAAW;cACrCH,SAAS,EAAE,IAAI,CAACZ,MAAM,CAACa,QAAQ;cAC/BoB,aAAa,EAAE,IAAI,CAACjC,MAAM,CAACkC;YAC7B,CAAC,CAAC,CAACb,QAAQ,CAAC;UACd,CAAC,CAAC;UAACxD,aAAA,GAAAoB,CAAA;UAEH,IAAI,CAACyC,QAAQ,CAACS,EAAE,EAAE;YAAAtE,aAAA,GAAAsB,CAAA;YAChB,IAAMiD,SAAS,IAAAvE,aAAA,GAAAoB,CAAA,cAASyC,QAAQ,CAACW,IAAI,CAAC,CAAC;YAACxE,aAAA,GAAAoB,CAAA;YACxC,MAAM,IAAIuB,KAAK,CAAC,0BAA0B4B,SAAS,EAAE,CAAC;UACxD,CAAC;YAAAvE,aAAA,GAAAsB,CAAA;UAAA;UAED,IAAMmD,SAAS,IAAAzE,aAAA,GAAAoB,CAAA,cAASyC,QAAQ,CAACa,IAAI,CAAC,CAAC;UAAC1E,aAAA,GAAAoB,CAAA;UACxC,OAAOqD,SAAS,CAACE,YAAY;QAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;UAAA5E,aAAA,GAAAoB,CAAA;UACdoB,OAAO,CAACoC,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;UAAC5E,aAAA,GAAAoB,CAAA;UACxD,MAAM,IAAIuB,KAAK,CAAC,mCAAmC,CAAC;QACtD;MACF,CAAC;MAAA,SAhCKkC,oBAAoBA,CAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAtB,qBAAA,CAAAuB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAApBJ,oBAAoB;IAAA;EAAA;IAAAxC,GAAA;IAAAC,KAAA;MAAA,IAAA4C,eAAA,OAAAxB,kBAAA,CAAAxB,OAAA,EAqC1B,WAAqBiD,WAAmB,EAA4B;QAAAnF,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAClE,IAAI;UACF,IAAMyC,QAAQ,IAAA7D,aAAA,GAAAoB,CAAA,cAAS0C,KAAK,CAACpC,mBAAmB,CAACG,OAAO,EAAE;YACxDmC,OAAO,EAAE;cACPoB,aAAa,EAAE,UAAUD,WAAW,EAAE;cACtClB,MAAM,EAAE;YACV;UACF,CAAC,CAAC;UAACjE,aAAA,GAAAoB,CAAA;UAEH,IAAI,CAACyC,QAAQ,CAACS,EAAE,EAAE;YAAAtE,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAChB,MAAM,IAAIuB,KAAK,CAAC,yBAAyBkB,QAAQ,CAACwB,UAAU,EAAE,CAAC;UACjE,CAAC;YAAArF,aAAA,GAAAsB,CAAA;UAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAED,aAAayC,QAAQ,CAACa,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,OAAOE,KAAK,EAAE;UAAA5E,aAAA,GAAAoB,CAAA;UACdoB,OAAO,CAACoC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;UAAC5E,aAAA,GAAAoB,CAAA;UACvD,MAAM,IAAIuB,KAAK,CAAC,8BAA8B,CAAC;QACjD;MACF,CAAC;MAAA,SAlBK2C,cAAcA,CAAAC,GAAA;QAAA,OAAAL,eAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdK,cAAc;IAAA;EAAA;IAAAjD,GAAA;IAAAC,KAAA;MAAA,IAAAkD,aAAA,OAAA9B,kBAAA,CAAAxB,OAAA,EAuBpB,WAAmBiD,WAAmB,EAAmB;QAAAnF,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACvD,IAAI;UACF,IAAMyC,QAAQ,IAAA7D,aAAA,GAAAoB,CAAA,cAAS0C,KAAK,CAACpC,mBAAmB,CAACI,KAAK,EAAE;YACtDkC,OAAO,EAAE;cACPoB,aAAa,EAAE,UAAUD,WAAW,EAAE;cACtClB,MAAM,EAAE;YACV;UACF,CAAC,CAAC;UAACjE,aAAA,GAAAoB,CAAA;UAEH,IAAI,CAACyC,QAAQ,CAACS,EAAE,EAAE;YAAAtE,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAChB,MAAM,IAAIuB,KAAK,CAAC,uBAAuBkB,QAAQ,CAACwB,UAAU,EAAE,CAAC;UAC/D,CAAC;YAAArF,aAAA,GAAAsB,CAAA;UAAA;UAED,IAAMmE,SAAgC,IAAAzF,aAAA,GAAAoB,CAAA,cAASyC,QAAQ,CAACa,IAAI,CAAC,CAAC;UAAC1E,aAAA,GAAAoB,CAAA;UAE/D,IAAI,CAAApB,aAAA,GAAAsB,CAAA,WAACmE,SAAS,CAACC,QAAQ,MAAA1F,aAAA,GAAAsB,CAAA,UAAImE,SAAS,CAACC,QAAQ,CAACC,MAAM,KAAK,CAAC,GAAE;YAAA3F,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YAC1D,MAAM,IAAIuB,KAAK,CAAC,oCAAoC,CAAC;UACvD,CAAC;YAAA3C,aAAA,GAAAsB,CAAA;UAAA;UAAAtB,aAAA,GAAAoB,CAAA;UAED,OAAOqE,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAACE,YAAY;QACtD,CAAC,CAAC,OAAOhB,KAAK,EAAE;UAAA5E,aAAA,GAAAoB,CAAA;UACdoB,OAAO,CAACoC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;UAAC5E,aAAA,GAAAoB,CAAA;UACrD,MAAM,IAAIuB,KAAK,CAAC,4BAA4B,CAAC;QAC/C;MACF,CAAC;MAAA,SAxBKkD,YAAYA,CAAAC,GAAA;QAAA,OAAAN,aAAA,CAAAR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAZY,YAAY;IAAA;EAAA;IAAAxD,GAAA;IAAAC,KAAA;MAAA,IAAAyD,eAAA,OAAArC,kBAAA,CAAAxB,OAAA,EA6BlB,WAAqByB,IAAY,EAAEL,KAAa,EAAyB;QAAAtD,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QACvE,IAAI;UAAA,IAAA4E,qBAAA;UAEF,IAAMb,WAAW,IAAAnF,aAAA,GAAAoB,CAAA,cAAS,IAAI,CAACyD,oBAAoB,CAAClB,IAAI,EAAEL,KAAK,CAAC;UAGhE,IAAA2C,IAAA,IAAAjG,aAAA,GAAAoB,CAAA,cAA+B8E,OAAO,CAACC,GAAG,CAAC,CACzC,IAAI,CAACb,cAAc,CAACH,WAAW,CAAC,EAChC,IAAI,CAACU,YAAY,CAACV,WAAW,CAAC,CAC/B,CAAC;YAAAiB,KAAA,OAAAC,eAAA,CAAAnE,OAAA,EAAA+D,IAAA;YAHKK,OAAO,GAAAF,KAAA;YAAEG,KAAK,GAAAH,KAAA;UAMrB,IAAII,MAA0B;UAACxG,aAAA,GAAAoB,CAAA;UAC/B,KAAA4E,qBAAA,GACEM,OAAO,CAACG,cAAc,cAAAT,qBAAA,GAAtBA,qBAAA,CAAyB,eAAe,CAAC,cAAAA,qBAAA,GAAzCA,qBAAA,CAA2CN,QAAQ,cAAAM,qBAAA,GAAnDA,qBAAA,CAAsD,CAAC,CAAC,cAAAA,qBAAA,GAAxDA,qBAAA,CACIU,WAAW,aADfV,qBAAA,CACkB,CAAC,CAAC,EACpB;YAAAhG,aAAA,GAAAsB,CAAA;YAAAtB,aAAA,GAAAoB,CAAA;YACAoF,MAAM,GACJF,OAAO,CAACG,cAAc,CAAC,eAAe,CAAC,CAACf,QAAQ,CAAC,CAAC,CAAC,CAACgB,WAAW,CAAC,CAAC,CAAC,CAC/DC,UAAU;UACjB,CAAC;YAAA3G,aAAA,GAAAsB,CAAA;UAAA;UAGD,IAAMsF,eAAgC,IAAA5G,aAAA,GAAAoB,CAAA,QAAG;YACvCyF,QAAQ,EAAE,UAAU;YACpB1B,WAAW,EAAXA,WAAW;YACXmB,OAAO,EAAE;cACPQ,EAAE,EAAER,OAAO,CAACQ,EAAE;cACdP,KAAK,EAALA,KAAK;cACL1F,IAAI,EAAE,GAAGyF,OAAO,CAACS,kBAAkB,IAAIT,OAAO,CAACU,iBAAiB,EAAE;cAClER,MAAM,EAANA;YACF;UACF,CAAC;UAGD,IAAMS,YAAY,IAAAjH,aAAA,GAAAoB,CAAA,cAAS8F,wBAAW,CAACC,iBAAiB,CAACP,eAAe,CAAC;UAAC5G,aAAA,GAAAoB,CAAA;UAE1EoB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;UAACzC,aAAA,GAAAoB,CAAA;UAC3C,OAAO6F,YAAY;QACrB,CAAC,CAAC,OAAOrC,KAAK,EAAE;UAAA5E,aAAA,GAAAoB,CAAA;UACdoB,OAAO,CAACoC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;UAAC5E,aAAA,GAAAoB,CAAA;UACjD,MAAM,IAAIuB,KAAK,CACbiC,KAAK,YAAYjC,KAAK,IAAA3C,aAAA,GAAAsB,CAAA,UAAGsD,KAAK,CAACwC,OAAO,KAAApH,aAAA,GAAAsB,CAAA,UAAG,yBAAyB,CACpE,CAAC;QACH;MACF,CAAC;MAAA,SA7CK+F,cAAcA,CAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAxB,eAAA,CAAAf,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdoC,cAAc;IAAA;EAAA;IAAAhF,GAAA;IAAAC,KAAA,EAkDpB,SAAQiB,mBAAmBA,CAAA,EAAW;MAAAvD,aAAA,GAAAqB,CAAA;MACpC,IAAMmG,KAAK,IAAAxH,aAAA,GAAAoB,CAAA,QAAG,IAAIqG,UAAU,CAAC,EAAE,CAAC;MAACzH,aAAA,GAAAoB,CAAA;MACjCsG,MAAM,CAACC,eAAe,CAACH,KAAK,CAAC;MAACxH,aAAA,GAAAoB,CAAA;MAC9B,OAAOwG,KAAK,CAACC,IAAI,CAACL,KAAK,EAAE,UAAAM,IAAI,EAAI;QAAA9H,aAAA,GAAAqB,CAAA;QAAArB,aAAA,GAAAoB,CAAA;QAAA,OAAA0G,IAAI,CAACtE,QAAQ,CAAC,EAAE,CAAC,CAACuE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAAD,CAAC,CAAC,CAAC1E,IAAI,CACvE,EACF,CAAC;IACH;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EAKD,SAAA0F,gBAAgBA,CAACC,GAAW,EAI1B;MAAAjI,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MACA,IAAI;QACF,IAAM8G,MAAM,IAAAlI,aAAA,GAAAoB,CAAA,QAAG,IAAI+G,GAAG,CAACF,GAAG,CAAC;QAC3B,IAAMrF,MAAM,IAAA5C,aAAA,GAAAoB,CAAA,QAAG8G,MAAM,CAACE,YAAY;QAACpI,aAAA,GAAAoB,CAAA;QAEnC,OAAO;UACLuC,IAAI,EAAE,CAAA3D,aAAA,GAAAsB,CAAA,UAAAsB,MAAM,CAACyF,GAAG,CAAC,MAAM,CAAC,MAAArI,aAAA,GAAAsB,CAAA,UAAIH,SAAS;UACrCmC,KAAK,EAAE,CAAAtD,aAAA,GAAAsB,CAAA,WAAAsB,MAAM,CAACyF,GAAG,CAAC,OAAO,CAAC,MAAArI,aAAA,GAAAsB,CAAA,WAAIH,SAAS;UACvCyD,KAAK,EAAE,CAAA5E,aAAA,GAAAsB,CAAA,WAAAsB,MAAM,CAACyF,GAAG,CAAC,OAAO,CAAC,MAAArI,aAAA,GAAAsB,CAAA,WAAIH,SAAS;QACzC,CAAC;MACH,CAAC,CAAC,OAAOyD,KAAK,EAAE;QAAA5E,aAAA,GAAAoB,CAAA;QACdoB,OAAO,CAACoC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QAAC5E,aAAA,GAAAoB,CAAA;QACtD,OAAO;UAAEwD,KAAK,EAAE;QAAuB,CAAC;MAC1C;IACF;EAAC;IAAAvC,GAAA;IAAAC,KAAA,EAKD,SAAAgG,aAAaA,CAACC,aAAqB,EAAEC,aAAqB,EAAW;MAAAxI,aAAA,GAAAqB,CAAA;MAAArB,aAAA,GAAAoB,CAAA;MACnE,OAAOmH,aAAa,KAAKC,aAAa;IACxC;EAAC;AAAA;AAII,IAAMC,mBAAmB,GAAAzG,OAAA,CAAAyG,mBAAA,IAAAzI,aAAA,GAAAoB,CAAA,QAAG,IAAIW,mBAAmB,CAAC,CAAC;AAAC/B,aAAA,GAAAoB,CAAA;AAGtD,IAAMsH,qBAAqB,GAAA1G,OAAA,CAAA0G,qBAAA,GAAG,SAAxBA,qBAAqBA,CAAIvG,MAAsB,EAAW;EAAAnC,aAAA,GAAAqB,CAAA;EAAArB,aAAA,GAAAoB,CAAA;EACrEqH,mBAAmB,CAAClG,SAAS,CAACJ,MAAM,CAAC;AACvC,CAAC;AAGM,IAAMwG,eAAe,GAAA3G,OAAA,CAAA2G,eAAA,IAAA3I,aAAA,GAAAoB,CAAA,QAAG;EAC7BwH,aAAa,EAAE,eAAe;EAC9BC,aAAa,EAAE,gBAAgB;EAC/BC,YAAY,EAAE;AAChB,CAAC,CAAS;AAGH,IAAMC,uBAAuB,GAAA/G,OAAA,CAAA+G,uBAAA,IAAA/I,aAAA,GAAAoB,CAAA,QAAG,CACrCuH,eAAe,CAACC,aAAa,EAC7BD,eAAe,CAACE,aAAa,CAC9B","ignoreList":[]}