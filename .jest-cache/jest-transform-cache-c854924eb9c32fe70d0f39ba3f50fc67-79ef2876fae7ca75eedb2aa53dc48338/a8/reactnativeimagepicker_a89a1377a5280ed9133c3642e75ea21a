98cf22f65a7bdab4cf09405d9bb86ac6
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.launchImageLibrary = exports.launchCamera = exports.default = exports.MediaType = exports.ImagePickerResponse = void 0;
var launchImageLibrary = exports.launchImageLibrary = jest.fn(function (options, callback) {
  if (callback) {
    callback({
      didCancel: false,
      assets: [{
        uri: 'file://mock-image.jpg',
        type: 'image/jpeg',
        fileName: 'mock-image.jpg',
        fileSize: 123456,
        width: 800,
        height: 600
      }]
    });
  }
  return Promise.resolve({
    didCancel: false,
    assets: [{
      uri: 'file://mock-image.jpg',
      type: 'image/jpeg',
      fileName: 'mock-image.jpg',
      fileSize: 123456,
      width: 800,
      height: 600
    }]
  });
});
var launchCamera = exports.launchCamera = jest.fn(function (options, callback) {
  if (callback) {
    callback({
      didCancel: false,
      assets: [{
        uri: 'file://mock-camera.jpg',
        type: 'image/jpeg',
        fileName: 'mock-camera.jpg',
        fileSize: 234567,
        width: 1200,
        height: 900
      }]
    });
  }
  return Promise.resolve({
    didCancel: false,
    assets: [{
      uri: 'file://mock-camera.jpg',
      type: 'image/jpeg',
      fileName: 'mock-camera.jpg',
      fileSize: 234567,
      width: 1200,
      height: 900
    }]
  });
});
var ImagePickerResponse = exports.ImagePickerResponse = {
  didCancel: false,
  assets: []
};
var MediaType = exports.MediaType = {
  photo: 'photo',
  video: 'video',
  mixed: 'mixed'
};
var _default = exports.default = {
  launchImageLibrary: launchImageLibrary,
  launchCamera: launchCamera,
  ImagePickerResponse: ImagePickerResponse,
  MediaType: MediaType
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJsYXVuY2hJbWFnZUxpYnJhcnkiLCJleHBvcnRzIiwiamVzdCIsImZuIiwib3B0aW9ucyIsImNhbGxiYWNrIiwiZGlkQ2FuY2VsIiwiYXNzZXRzIiwidXJpIiwidHlwZSIsImZpbGVOYW1lIiwiZmlsZVNpemUiLCJ3aWR0aCIsImhlaWdodCIsIlByb21pc2UiLCJyZXNvbHZlIiwibGF1bmNoQ2FtZXJhIiwiSW1hZ2VQaWNrZXJSZXNwb25zZSIsIk1lZGlhVHlwZSIsInBob3RvIiwidmlkZW8iLCJtaXhlZCIsIl9kZWZhdWx0IiwiZGVmYXVsdCJdLCJzb3VyY2VzIjpbInJlYWN0LW5hdGl2ZS1pbWFnZS1waWNrZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBNb2NrIGZvciByZWFjdC1uYXRpdmUtaW1hZ2UtcGlja2VyXG4gKiBQcm92aWRlcyB0ZXN0LWZyaWVuZGx5IHZlcnNpb25zIG9mIGltYWdlIHBpY2tlciBmdW5jdGlvbnNcbiAqL1xuXG5leHBvcnQgY29uc3QgbGF1bmNoSW1hZ2VMaWJyYXJ5ID0gamVzdC5mbigob3B0aW9ucywgY2FsbGJhY2spID0+IHtcbiAgaWYgKGNhbGxiYWNrKSB7XG4gICAgY2FsbGJhY2soe1xuICAgICAgZGlkQ2FuY2VsOiBmYWxzZSxcbiAgICAgIGFzc2V0czogW1xuICAgICAgICB7XG4gICAgICAgICAgdXJpOiAnZmlsZTovL21vY2staW1hZ2UuanBnJyxcbiAgICAgICAgICB0eXBlOiAnaW1hZ2UvanBlZycsXG4gICAgICAgICAgZmlsZU5hbWU6ICdtb2NrLWltYWdlLmpwZycsXG4gICAgICAgICAgZmlsZVNpemU6IDEyMzQ1NixcbiAgICAgICAgICB3aWR0aDogODAwLFxuICAgICAgICAgIGhlaWdodDogNjAwLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICBkaWRDYW5jZWw6IGZhbHNlLFxuICAgIGFzc2V0czogW1xuICAgICAge1xuICAgICAgICB1cmk6ICdmaWxlOi8vbW9jay1pbWFnZS5qcGcnLFxuICAgICAgICB0eXBlOiAnaW1hZ2UvanBlZycsXG4gICAgICAgIGZpbGVOYW1lOiAnbW9jay1pbWFnZS5qcGcnLFxuICAgICAgICBmaWxlU2l6ZTogMTIzNDU2LFxuICAgICAgICB3aWR0aDogODAwLFxuICAgICAgICBoZWlnaHQ6IDYwMCxcbiAgICAgIH0sXG4gICAgXSxcbiAgfSk7XG59KTtcblxuZXhwb3J0IGNvbnN0IGxhdW5jaENhbWVyYSA9IGplc3QuZm4oKG9wdGlvbnMsIGNhbGxiYWNrKSA9PiB7XG4gIGlmIChjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKHtcbiAgICAgIGRpZENhbmNlbDogZmFsc2UsXG4gICAgICBhc3NldHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHVyaTogJ2ZpbGU6Ly9tb2NrLWNhbWVyYS5qcGcnLFxuICAgICAgICAgIHR5cGU6ICdpbWFnZS9qcGVnJyxcbiAgICAgICAgICBmaWxlTmFtZTogJ21vY2stY2FtZXJhLmpwZycsXG4gICAgICAgICAgZmlsZVNpemU6IDIzNDU2NyxcbiAgICAgICAgICB3aWR0aDogMTIwMCxcbiAgICAgICAgICBoZWlnaHQ6IDkwMCxcbiAgICAgICAgfSxcbiAgICAgIF0sXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7XG4gICAgZGlkQ2FuY2VsOiBmYWxzZSxcbiAgICBhc3NldHM6IFtcbiAgICAgIHtcbiAgICAgICAgdXJpOiAnZmlsZTovL21vY2stY2FtZXJhLmpwZycsXG4gICAgICAgIHR5cGU6ICdpbWFnZS9qcGVnJyxcbiAgICAgICAgZmlsZU5hbWU6ICdtb2NrLWNhbWVyYS5qcGcnLFxuICAgICAgICBmaWxlU2l6ZTogMjM0NTY3LFxuICAgICAgICB3aWR0aDogMTIwMCxcbiAgICAgICAgaGVpZ2h0OiA5MDAsXG4gICAgICB9LFxuICAgIF0sXG4gIH0pO1xufSk7XG5cbmV4cG9ydCBjb25zdCBJbWFnZVBpY2tlclJlc3BvbnNlID0ge1xuICBkaWRDYW5jZWw6IGZhbHNlLFxuICBhc3NldHM6IFtdLFxufTtcblxuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZSA9IHtcbiAgcGhvdG86ICdwaG90bycsXG4gIHZpZGVvOiAndmlkZW8nLFxuICBtaXhlZDogJ21peGVkJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgbGF1bmNoSW1hZ2VMaWJyYXJ5LFxuICBsYXVuY2hDYW1lcmEsXG4gIEltYWdlUGlja2VyUmVzcG9uc2UsXG4gIE1lZGlhVHlwZSxcbn07Il0sIm1hcHBpbmdzIjoiOzs7O0FBS08sSUFBTUEsa0JBQWtCLEdBQUFDLE9BQUEsQ0FBQUQsa0JBQUEsR0FBR0UsSUFBSSxDQUFDQyxFQUFFLENBQUMsVUFBQ0MsT0FBTyxFQUFFQyxRQUFRLEVBQUs7RUFDL0QsSUFBSUEsUUFBUSxFQUFFO0lBQ1pBLFFBQVEsQ0FBQztNQUNQQyxTQUFTLEVBQUUsS0FBSztNQUNoQkMsTUFBTSxFQUFFLENBQ047UUFDRUMsR0FBRyxFQUFFLHVCQUF1QjtRQUM1QkMsSUFBSSxFQUFFLFlBQVk7UUFDbEJDLFFBQVEsRUFBRSxnQkFBZ0I7UUFDMUJDLFFBQVEsRUFBRSxNQUFNO1FBQ2hCQyxLQUFLLEVBQUUsR0FBRztRQUNWQyxNQUFNLEVBQUU7TUFDVixDQUFDO0lBRUwsQ0FBQyxDQUFDO0VBQ0o7RUFDQSxPQUFPQyxPQUFPLENBQUNDLE9BQU8sQ0FBQztJQUNyQlQsU0FBUyxFQUFFLEtBQUs7SUFDaEJDLE1BQU0sRUFBRSxDQUNOO01BQ0VDLEdBQUcsRUFBRSx1QkFBdUI7TUFDNUJDLElBQUksRUFBRSxZQUFZO01BQ2xCQyxRQUFRLEVBQUUsZ0JBQWdCO01BQzFCQyxRQUFRLEVBQUUsTUFBTTtNQUNoQkMsS0FBSyxFQUFFLEdBQUc7TUFDVkMsTUFBTSxFQUFFO0lBQ1YsQ0FBQztFQUVMLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVLLElBQU1HLFlBQVksR0FBQWYsT0FBQSxDQUFBZSxZQUFBLEdBQUdkLElBQUksQ0FBQ0MsRUFBRSxDQUFDLFVBQUNDLE9BQU8sRUFBRUMsUUFBUSxFQUFLO0VBQ3pELElBQUlBLFFBQVEsRUFBRTtJQUNaQSxRQUFRLENBQUM7TUFDUEMsU0FBUyxFQUFFLEtBQUs7TUFDaEJDLE1BQU0sRUFBRSxDQUNOO1FBQ0VDLEdBQUcsRUFBRSx3QkFBd0I7UUFDN0JDLElBQUksRUFBRSxZQUFZO1FBQ2xCQyxRQUFRLEVBQUUsaUJBQWlCO1FBQzNCQyxRQUFRLEVBQUUsTUFBTTtRQUNoQkMsS0FBSyxFQUFFLElBQUk7UUFDWEMsTUFBTSxFQUFFO01BQ1YsQ0FBQztJQUVMLENBQUMsQ0FBQztFQUNKO0VBQ0EsT0FBT0MsT0FBTyxDQUFDQyxPQUFPLENBQUM7SUFDckJULFNBQVMsRUFBRSxLQUFLO0lBQ2hCQyxNQUFNLEVBQUUsQ0FDTjtNQUNFQyxHQUFHLEVBQUUsd0JBQXdCO01BQzdCQyxJQUFJLEVBQUUsWUFBWTtNQUNsQkMsUUFBUSxFQUFFLGlCQUFpQjtNQUMzQkMsUUFBUSxFQUFFLE1BQU07TUFDaEJDLEtBQUssRUFBRSxJQUFJO01BQ1hDLE1BQU0sRUFBRTtJQUNWLENBQUM7RUFFTCxDQUFDLENBQUM7QUFDSixDQUFDLENBQUM7QUFFSyxJQUFNSSxtQkFBbUIsR0FBQWhCLE9BQUEsQ0FBQWdCLG1CQUFBLEdBQUc7RUFDakNYLFNBQVMsRUFBRSxLQUFLO0VBQ2hCQyxNQUFNLEVBQUU7QUFDVixDQUFDO0FBRU0sSUFBTVcsU0FBUyxHQUFBakIsT0FBQSxDQUFBaUIsU0FBQSxHQUFHO0VBQ3ZCQyxLQUFLLEVBQUUsT0FBTztFQUNkQyxLQUFLLEVBQUUsT0FBTztFQUNkQyxLQUFLLEVBQUU7QUFDVCxDQUFDO0FBQUMsSUFBQUMsUUFBQSxHQUFBckIsT0FBQSxDQUFBc0IsT0FBQSxHQUVhO0VBQ2J2QixrQkFBa0IsRUFBbEJBLGtCQUFrQjtFQUNsQmdCLFlBQVksRUFBWkEsWUFBWTtFQUNaQyxtQkFBbUIsRUFBbkJBLG1CQUFtQjtFQUNuQkMsU0FBUyxFQUFUQTtBQUNGLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=