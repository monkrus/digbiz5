{"version":3,"names":["yup","_interopRequireWildcard","require","e","t","WeakMap","r","n","__esModule","o","i","f","__proto__","default","has","get","set","_t","hasOwnProperty","call","Object","defineProperty","getOwnPropertyDescriptor","cov_1861fsw4fx","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","b","_coverageSchema","coverage","actualCoverage","emailSchema","exports","string","email","required","passwordSchema","min","matches","loginSchema","object","password","registerSchema","confirmPassword","oneOf","ref"],"sources":["formValidation.ts"],"sourcesContent":["import * as yup from 'yup';\n\n// Common validation schemas\nexport const emailSchema = yup\n  .string()\n  .email('Invalid email format')\n  .required('Email is required');\n\nexport const passwordSchema = yup\n  .string()\n  .min(8, 'Password must be at least 8 characters')\n  .matches(/[A-Z]/, 'Password must contain at least one uppercase letter')\n  .matches(/[a-z]/, 'Password must contain at least one lowercase letter')\n  .matches(/\\d/, 'Password must contain at least one number')\n  .required('Password is required');\n\n// Example login form schema\nexport const loginSchema = yup.object({\n  email: emailSchema,\n  password: yup.string().required('Password is required'),\n});\n\n// Example registration form schema\nexport const registerSchema = yup.object({\n  email: emailSchema,\n  password: passwordSchema,\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password')], 'Passwords must match')\n    .required('Confirm password is required'),\n});\n\nexport type LoginFormData = yup.InferType<typeof loginSchema>;\nexport type RegisterFormData = yup.InferType<typeof registerSchema>;\n"],"mappings":"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","ignoreList":[]}